{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Closure"}],"externalID":"s:13SyntaxSparrow7ClosureV","navigatorTitle":[{"kind":"identifier","text":"Closure"}],"title":"Closure","symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"SyntaxSparrow"}]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"]}],"abstract":[{"type":"text","text":"Represents a Swift closure expression."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Closure","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"A closure is a self-contained block of functionality that can be passed around and used in your code. In Swift, closures are similar to blocks in"},{"text":" ","type":"text"},{"text":"C and Objective-C and","type":"text"},{"type":"text","text":" "},{"text":"to lambdas in other programming languages.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the "},{"type":"codeVoice","code":"Closure"},{"text":" struct provides access to:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The input and output types of the closure.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the closureâ€™s input or output type is void."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Whether the closure is optional."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the closure has the "},{"type":"codeVoice","code":"@escaping"},{"type":"text","text":" attribute or is auto-escaping."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This struct also includes functionality to create a closure instance from a "},{"type":"codeVoice","code":"FunctionTypeSyntax"},{"text":" node.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/closure"]}],"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/init(node:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/declaration","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/effectSpecifiers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/input","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isAutoEscaping","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isEscaping","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isVoidInput","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isVoidOutput","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/rawInput","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/rawOutput"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/CustomStringConvertible-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"CustomStringConvertible Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/CustomStringConvertible-Implementations","url":"\/documentation\/syntaxsparrow\/closure\/customstringconvertible-implementations","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"title":"DeclarationComponent","navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}],"url":"\/documentation\/syntaxsparrow\/declarationcomponent","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","abstract":[{"text":"Public protocol that any semantic elements not considered a declaration will conform to.","type":"text"},{"type":"text","text":" "},{"text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclarationComponent","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/isOptional":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isOptional","kind":"symbol","title":"isOptional","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isOptional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"url":"\/documentation\/syntaxsparrow\/closure\/isoptional","type":"topic","abstract":[{"type":"text","text":"Will return"},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the "},{"type":"codeVoice","code":"output"},{"text":" is equal to ","type":"text"},{"code":".void","type":"codeVoice"},{"type":"text","text":"."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/isVoidInput":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isVoidInput","kind":"symbol","title":"isVoidInput","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isVoidInput"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/syntaxsparrow\/closure\/isvoidinput","type":"topic","abstract":[{"type":"text","text":"Will return"},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the "},{"code":"input","type":"codeVoice"},{"text":" is equal to ","type":"text"},{"type":"codeVoice","code":".void"},{"type":"text","text":"."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/rawOutput":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawOutput"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Will return the return type string for the closure. Returns an empty string if no result is found."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/rawOutput","role":"symbol","kind":"symbol","title":"rawOutput","url":"\/documentation\/syntaxsparrow\/closure\/rawoutput"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/effectSpecifiers":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/effectSpecifiers","role":"symbol","abstract":[{"type":"text","text":"Struct representing the state of any effect specifiers on the initializer signature."}],"url":"\/documentation\/syntaxsparrow\/closure\/effectspecifiers","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"effectSpecifiers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow16EffectSpecifiersV","text":"EffectSpecifiers"},{"text":"?","kind":"text"}],"kind":"symbol","title":"effectSpecifiers"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/output":{"kind":"symbol","abstract":[{"type":"text","text":"Will return the closure output elements from the input "},{"code":"typeAnnotation","type":"codeVoice"},{"type":"text","text":" for the closure."}],"role":"symbol","title":"output","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/closure\/output","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/rawInput":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawInput"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/closure\/rawinput","title":"rawInput","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/rawInput","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Will return the input string for the closure. Returns an empty string if no result is found."}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/input":{"url":"\/documentation\/syntaxsparrow\/closure\/input","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"input","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/input","type":"topic","title":"input","abstract":[{"text":"Will return the closure input element from the input ","type":"text"},{"type":"codeVoice","code":"typeAnnotation"},{"text":" for the closure.","type":"text"}]},"doc://SyntaxSparrow/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Closure"}],"url":"\/documentation\/syntaxsparrow\/closure","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","title":"Closure","abstract":[{"text":"Represents a Swift closure expression.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Closure","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/declaration":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/declaration","abstract":[{"type":"text","text":"The full declaration string."}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"declaration","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/closure\/declaration","title":"declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/closure\/equatable-implementations","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/Equatable-Implementations","title":"Equatable Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/node":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/node","kind":"symbol","title":"node","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"FunctionTypeSyntax","preciseIdentifier":"s:11SwiftSyntax012FunctionTypeB0V","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/closure\/node","type":"topic","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}]},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/isAutoEscaping":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isAutoEscaping"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"abstract":[{"text":"Bool whether the closure is auto escaping.","type":"text"},{"type":"text","text":" "},{"text":"This would be ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" when the closure itself is optional as swift expects them to be auto-escaping."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isAutoEscaping","title":"isAutoEscaping","url":"\/documentation\/syntaxsparrow\/closure\/isautoescaping","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/Hashable-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/Hashable-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/closure\/hashable-implementations","title":"Hashable Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/init(node:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/init(node:)","kind":"symbol","title":"init(node:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FunctionTypeSyntax","preciseIdentifier":"s:11SwiftSyntax012FunctionTypeB0V"},{"text":")","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/closure\/init(node:)","type":"topic","abstract":[{"type":"text","text":"Creates a new "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","isActive":true,"type":"reference"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"FunctionTypeSyntax"},{"text":" node.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/isEscaping":{"url":"\/documentation\/syntaxsparrow\/closure\/isescaping","title":"isEscaping","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isEscaping","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Bool whether the closure has the "},{"type":"codeVoice","code":"@escaping"},{"type":"text","text":" attribute."},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This separate from the "},{"code":"isAutoEscaping","type":"codeVoice"},{"type":"text","text":" proeprty as you may want to know whether something has the attribute or not."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isEscaping"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/isVoidOutput":{"kind":"symbol","abstract":[{"type":"text","text":"Will return"},{"code":"true","type":"codeVoice"},{"text":" if the ","type":"text"},{"type":"codeVoice","code":"typeAnnotation"},{"type":"text","text":" is a closure and the input is a void block. i.e "},{"code":"() -> (Void)\/() -> (())","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/isVoidOutput","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/closure\/isvoidoutput","title":"isVoidOutput","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isVoidOutput"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}}}