{"metadata":{"modules":[{"name":"SyntaxSparrow"}],"title":"output","role":"symbol","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"externalID":"s:13SyntaxSparrow7ClosureV6outputAA10EntityTypeOvp","roleHeading":"Instance Property"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Will return the closure output elements from the input "},{"type":"codeVoice","code":"typeAnnotation"},{"type":"text","text":" for the closure."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/closure\/output"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EntityType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/output":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"output","kind":"identifier"},{"kind":"text","text":": "},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"url":"\/documentation\/syntaxsparrow\/closure\/output","role":"symbol","abstract":[{"type":"text","text":"Will return the closure output elements from the input "},{"type":"codeVoice","code":"typeAnnotation"},{"text":" for the closure.","type":"text"}],"type":"topic","title":"output","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"url":"\/documentation\/syntaxsparrow\/closure","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","type":"topic","kind":"symbol","title":"Closure","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Closure"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Closure"}],"abstract":[{"type":"text","text":"Represents a Swift closure expression."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"}}}