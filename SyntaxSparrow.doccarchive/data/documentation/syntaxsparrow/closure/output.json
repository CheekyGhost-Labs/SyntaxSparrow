{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/closure\/output"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"abstract":[{"type":"text","text":"Will return the closure output elements from the input "},{"type":"codeVoice","code":"typeAnnotation"},{"type":"text","text":" for the closure."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure"]]},"metadata":{"modules":[{"name":"SyntaxSparrow"}],"title":"output","externalID":"s:13SyntaxSparrow7ClosureV6outputAA10EntityTypeOvp","symbolKind":"property","roleHeading":"Instance Property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","url":"\/documentation\/syntaxsparrow\/closure","type":"topic","abstract":[{"type":"text","text":"Represents a Swift closure expression."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Closure","kind":"identifier"}],"title":"Closure","navigatorTitle":[{"text":"Closure","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","title":"EntityType","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","role":"symbol","title":"EntityType.simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"type":"codeVoice","code":"CVarArg"},{"text":" is not currently supported so it will use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure/output":{"url":"\/documentation\/syntaxsparrow\/closure\/output","title":"output","role":"symbol","abstract":[{"type":"text","text":"Will return the closure output elements from the input "},{"type":"codeVoice","code":"typeAnnotation"},{"text":" for the closure.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure\/output","kind":"symbol","type":"topic"}}}