{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Statement"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/init(node:)"],"title":"Initializers"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/childCollection","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/statements"],"title":"Instance Properties"},{"title":"Enumerations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Kind"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Hashable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/SyntaxChildCollecting-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlock","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A code block is primarily a list of code statements within parenthesis ","type":"text"},{"code":"{","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"}"},{"text":". For example, the ","type":"text"},{"type":"codeVoice","code":"get\/set\/willSet\/didSet"},{"type":"text","text":" accessors in a variable, a function body etc."}]},{"inlineContent":[{"type":"text","text":"An instance of the "},{"type":"codeVoice","code":"CodeBlock"},{"type":"text","text":" struct provides access to an array of statements held within. It also supports "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","isActive":true,"type":"reference"},{"text":" which can collect child declarations.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","navigatorTitle":[{"text":"CodeBlock","kind":"identifier"}],"roleHeading":"Structure","externalID":"s:13SyntaxSparrow9CodeBlockV","modules":[{"name":"SyntaxSparrow"}],"title":"CodeBlock","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CodeBlock","kind":"identifier"}]},"sections":[],"abstract":[{"type":"text","text":"Represents the swift code block element "},{"type":"codeVoice","code":"CodeBlockSyntax"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/codeblock"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/Hashable-Implementations":{"url":"\/documentation\/syntaxsparrow\/codeblock\/hashable-implementations","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Hashable-Implementations","title":"Hashable Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationCollection":{"navigatorTitle":[{"text":"DeclarationCollection","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeclarationCollection","kind":"identifier"}],"title":"DeclarationCollection","kind":"symbol","url":"\/documentation\/syntaxsparrow\/declarationcollection","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/SyntaxChildCollecting-Implementations":{"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/SyntaxChildCollecting-Implementations","role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/codeblock\/syntaxchildcollecting-implementations","kind":"article","type":"topic","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/SH":{"identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/Statement":{"kind":"symbol","navigatorTitle":[{"text":"Statement","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Statement","type":"topic","abstract":[],"role":"symbol","title":"CodeBlock.Statement","url":"\/documentation\/syntaxsparrow\/codeblock\/statement","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Statement"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/childCollection":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"childCollection","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow21DeclarationCollectionC","text":"DeclarationCollection","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/codeblock\/childcollection","role":"symbol","type":"topic","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection"},{"text":" utility instance any results will be collected into.","type":"text"}],"kind":"symbol","title":"childCollection","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/childCollection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/node":{"url":"\/documentation\/syntaxsparrow\/codeblock\/node","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/node","title":"node","role":"symbol","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CodeBlockSyntax","preciseIdentifier":"s:11SwiftSyntax09CodeBlockB0V","kind":"typeIdentifier"}],"abstract":[{"text":"The raw syntax node being represented by the instance.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Equatable-Implementations","url":"\/documentation\/syntaxsparrow\/codeblock\/equatable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxChildCollecting":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildCollecting"}],"title":"SyntaxChildCollecting","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildCollecting"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","url":"\/documentation\/syntaxsparrow\/syntaxchildcollecting","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/init(node:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/init(node:)","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Creates a new "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","isActive":true,"type":"reference"},{"type":"text","text":" instance from a "},{"type":"codeVoice","code":"CodeBlockSyntax"},{"text":" node.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/codeblock\/init(node:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax09CodeBlockB0V","text":"CodeBlockSyntax","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(node:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock":{"navigatorTitle":[{"text":"CodeBlock","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","title":"CodeBlock","url":"\/documentation\/syntaxsparrow\/codeblock","abstract":[{"text":"Represents the swift code block element ","type":"text"},{"type":"codeVoice","code":"CodeBlockSyntax"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodeBlock"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/Kind":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/Kind","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Kind","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/codeblock\/kind","navigatorTitle":[{"text":"Kind","kind":"identifier"}],"kind":"symbol","title":"CodeBlock.Kind","role":"symbol","abstract":[{"text":"The kind of accessor (","type":"text"},{"code":"get","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"set"},{"type":"text","text":")."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/CustomStringConvertible-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/CustomStringConvertible-Implementations","kind":"article","url":"\/documentation\/syntaxsparrow\/codeblock\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","role":"collectionGroup","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock/statements":{"url":"\/documentation\/syntaxsparrow\/codeblock\/statements","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock\/statements","title":"statements","role":"symbol","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"statements","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Statement","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV9StatementV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"text":"Array of statements within the code block.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"title":"DeclarationComponent","navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}],"url":"\/documentation\/syntaxsparrow\/declarationcomponent","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","abstract":[{"text":"Public protocol that any semantic elements not considered a declaration will conform to.","type":"text"},{"type":"text","text":" "},{"text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclarationComponent","kind":"identifier"}]},"doc://SyntaxSparrow/SQ":{"identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"}}}