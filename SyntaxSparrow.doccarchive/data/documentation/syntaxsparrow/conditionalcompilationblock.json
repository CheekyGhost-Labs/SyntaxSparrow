{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conditional compilation blocks are used to conditionally compile parts of the program"},{"type":"text","text":" "},{"type":"text","text":"based on the evaluation of one or more conditions."},{"type":"text","text":" "},{"type":"text","text":"Swift uses the keywords "},{"type":"codeVoice","code":"#if"},{"type":"text","text":", "},{"type":"codeVoice","code":"#elseif"},{"type":"text","text":", "},{"type":"codeVoice","code":"#else"},{"type":"text","text":", and "},{"type":"codeVoice","code":"#endif"},{"type":"text","text":" to define these blocks."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each instance of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},{"type":"text","text":" corresponds to a "},{"type":"codeVoice","code":"ConditionalCompilationBlock"},{"type":"text","text":" node in the Swift syntax tree."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This struct provides access to the branches within the conditional compilation block"},{"type":"text","text":" "},{"type":"text","text":"and the source location of the block."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxSourceLocationResolving"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"title":"ConditionalCompilationBlock","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV","modules":[{"name":"SyntaxSparrow"}],"navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"]},{"title":"Operators","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/init(node:context:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/branches","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/sourceLocation"]},{"title":"Instance Methods","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/hash(into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Declaration-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Equatable-Implementations"],"generated":true}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext":{"role":"symbol","title":"SyntaxExplorerContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxExplorerContext"}],"abstract":[{"type":"text","text":"Struct holding contextual instances and details created on a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"text","text":"These support structured concurrency as elements such as the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter"},{"type":"text","text":" are"},{"type":"text","text":" "},{"type":"text","text":"alo used by child evaluations and collectors at different times."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxExplorerContext"}],"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/branches":{"role":"symbol","title":"branches","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"branches"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Branch","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Array of conditional compilation block branches."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/branches","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branches"},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/hash(into:)":{"role":"symbol","title":"hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/hash(into:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/hash(into:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/==(_:_:)":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"ConditionalCompilationBlock","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ConditionalCompilationBlock","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/==(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/==(_:_:)"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","title":"Declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Declaration"}],"url":"\/documentation\/syntaxsparrow\/declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/sourceLocation":{"role":"symbol","title":"sourceLocation","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"sourceLocation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxSourceLocation","preciseIdentifier":"s:13SyntaxSparrow0A14SourceLocationV"}],"abstract":[{"type":"text","text":"The location of the declaration source within the parent "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/sourceLocation","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/sourcelocation"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxSourceLocationResolving":{"role":"symbol","title":"SyntaxSourceLocationResolving","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxSourceLocationResolving"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxSourceLocationResolving","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxSourceLocationResolving"}],"url":"\/documentation\/syntaxsparrow\/syntaxsourcelocationresolving"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Declaration-Implementations":{"role":"collectionGroup","title":"Declaration Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Declaration-Implementations","kind":"article","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/declaration-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/equatable-implementations"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"role":"symbol","title":"ConditionalCompilationBlock","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"role":"symbol","title":"ConditionalCompilationBlock.Branch","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Branch"}],"abstract":[{"type":"text","text":"Represents a branch within a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"role":"collection","title":"SyntaxSparrow","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/init(node:context:)":{"role":"symbol","title":"init(node:context:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IfConfigDeclSyntax","preciseIdentifier":"s:11SwiftSyntax012IfConfigDeclB0V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxExplorerContext","preciseIdentifier":"s:13SyntaxSparrow0A15ExplorerContextV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"IfConfigDeclSyntax"},{"type":"text","text":" node."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/init(node:context:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/init(node:context:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/description":{"role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/description","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/description"}}}