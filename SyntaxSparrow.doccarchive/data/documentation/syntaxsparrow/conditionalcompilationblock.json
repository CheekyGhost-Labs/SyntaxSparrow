{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"kind":"symbol","metadata":{"role":"symbol","roleHeading":"Structure","title":"ConditionalCompilationBlock","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"symbolKind":"struct","navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conditional compilation blocks are used to conditionally compile parts of the program"},{"type":"text","text":" "},{"text":"based on the evaluation of one or more conditions.","type":"text"},{"type":"text","text":" "},{"text":"Swift uses the keywords ","type":"text"},{"code":"#if","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"#elseif"},{"text":", ","type":"text"},{"code":"#else","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"#endif"},{"type":"text","text":" to define these blocks."}]},{"inlineContent":[{"text":"Each instance of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},{"text":" corresponds to a ","type":"text"},{"type":"codeVoice","code":"ConditionalCompilationBlock"},{"type":"text","text":" node in the Swift syntax tree."}],"type":"paragraph"},{"inlineContent":[{"text":"This struct provides access to the branches within the conditional compilation block","type":"text"},{"type":"text","text":" "},{"type":"text","text":"and the source location of the block."}],"type":"paragraph"}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"]}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/branches","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/node"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Hashable-Implementations"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock"]}],"references":{"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"title":"Declaration","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/declaration","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"title":"ConditionalCompilationBlock","abstract":[{"text":"Represents a Swift conditional compilation block declaration.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/init(node:)":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/init(node:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/init(node:)","title":"init(node:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"text":"IfConfigDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax012IfConfigDeclB0V"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Will initialize a new instance that will resolve details from the given node as they are requested."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/branches":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"branches","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","text":"Branch","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branches","title":"branches","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/branches","role":"symbol","abstract":[{"type":"text","text":"Array of conditional compilation block branches."}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/node":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/node","kind":"symbol","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/node","title":"node","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":": "},{"text":"IfConfigDeclSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax012IfConfigDeclB0V"}],"type":"topic","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}]},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"title":"ConditionalCompilationBlock.Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/CustomStringConvertible-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/customstringconvertible-implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/CustomStringConvertible-Implementations","title":"CustomStringConvertible Implementations","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Equatable-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Hashable-Implementations":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Hashable-Implementations","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/hashable-implementations","kind":"article","title":"Hashable Implementations","role":"collectionGroup","abstract":[]}}}