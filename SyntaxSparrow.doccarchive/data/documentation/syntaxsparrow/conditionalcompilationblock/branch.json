{"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node"]},{"title":"Enumerations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"],"generated":true,"title":"Default Implementations"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Branch","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each branch within a conditional compilation block starts with a keyword: "},{"code":"#if","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"#elseif"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"#else"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"A branch might also have a condition associated with the keyword, which determines whether","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the compiler will include the code within the branch during the compilation process."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, in  the following declaration the block has two branches"}]},{"syntax":"swift","code":["#if true","enum A {}","#else","enum B {}","#endif"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first branch has the keyword "},{"code":"#if","type":"codeVoice"},{"text":" and the condition ","type":"text"},{"type":"codeVoice","code":"true"}]}]},{"content":[{"inlineContent":[{"text":"The second branch has the keyword ","type":"text"},{"code":"#else","type":"codeVoice"},{"text":" and no condition","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Each instance of ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference"},{"text":" corresponds to a ","type":"text"},{"type":"codeVoice","code":"IfConfigClauseSyntax"},{"text":" node in the Swift syntax tree.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"code":"Branch","type":"codeVoice"},{"text":" struct provides access to the keyword, the optional condition, and the source location of the branch.","type":"text"}],"type":"paragraph"}]}],"sections":[],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Represents a branch within a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"text":".","type":"text"}],"metadata":{"title":"ConditionalCompilationBlock.Branch","roleHeading":"Structure","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Branch"}],"extendedModule":"SyntaxSparrow"},"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationCollection":{"abstract":[],"role":"symbol","title":"DeclarationCollection","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclarationCollection"}],"url":"\/documentation\/syntaxsparrow\/declarationcollection","navigatorTitle":[{"kind":"identifier","text":"DeclarationCollection"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"type":"topic","abstract":[{"type":"text","text":"Represents a branch within a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}],"title":"ConditionalCompilationBlock.Branch","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Branch","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","type":"topic","kind":"symbol","title":"ConditionalCompilationBlock","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Hashable-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/hashable-implementations","kind":"article","role":"collectionGroup","title":"Hashable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/childCollection":{"type":"topic","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection"},{"text":" utility instance any results will be collected into.","type":"text"}],"title":"childCollection","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/childcollection","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"childCollection","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DeclarationCollection","preciseIdentifier":"s:13SyntaxSparrow21DeclarationCollectionC"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"title":"Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration","abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"kind":"identifier","text":"Declaration"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"kind":"article","abstract":[],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","title":"SyntaxChildCollecting Implementations","type":"topic","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/CustomStringConvertible-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/customstringconvertible-implementations","kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"title":"SyntaxRepresenting","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxRepresenting","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/init(node:)":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/init(node:)","type":"topic","title":"init(node:)","abstract":[{"text":"Will initialize a new instance that will resolve details from the given node as they are requested.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V","text":"IfConfigClauseSyntax","kind":"typeIdentifier"},{"kind":"text","text":")"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/condition":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/condition","kind":"symbol","role":"symbol","title":"condition","abstract":[{"type":"text","text":"The branch condition (if any)."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"condition"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/keyword-swift.property":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.property","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","abstract":[{"type":"text","text":"The branch keyword, either "},{"type":"codeVoice","code":"\"#if\""},{"type":"text","text":", "},{"type":"codeVoice","code":"\"#elseif\""},{"text":", or ","type":"text"},{"type":"codeVoice","code":"\"#else\""},{"type":"text","text":"."}],"kind":"symbol","title":"keyword","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyword","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Keyword","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV7KeywordO"}],"role":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Equatable-Implementations":{"title":"Equatable Implementations","type":"topic","kind":"article","abstract":[],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxChildCollecting":{"url":"\/documentation\/syntaxsparrow\/syntaxchildcollecting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","kind":"symbol","type":"topic","title":"SyntaxChildCollecting","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxChildCollecting"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxChildCollecting","kind":"identifier"}],"abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Keyword-swift.enum":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum","abstract":[],"title":"ConditionalCompilationBlock.Branch.Keyword","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Keyword","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Keyword","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/node":{"abstract":[{"text":"The raw syntax node being represented by the instance.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V","text":"IfConfigClauseSyntax"}],"title":"node","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/node","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH","type":"unresolvable"}}}