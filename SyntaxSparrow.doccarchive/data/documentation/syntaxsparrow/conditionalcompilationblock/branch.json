{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"]}],"kind":"symbol","metadata":{"modules":[{"name":"SyntaxSparrow"}],"title":"ConditionalCompilationBlock.Branch","roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Branch"}],"externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","navigatorTitle":[{"text":"Branch","kind":"identifier"}],"extendedModule":"SyntaxSparrow","role":"symbol"},"abstract":[{"type":"text","text":"Represents a branch within a "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true,"type":"reference"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum"],"title":"Enumerations"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"],"generated":true,"title":"Default Implementations"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"inlineContent":[{"text":"Each branch within a conditional compilation block starts with a keyword: ","type":"text"},{"type":"codeVoice","code":"#if"},{"type":"text","text":", "},{"code":"#elseif","type":"codeVoice"},{"text":", or ","type":"text"},{"code":"#else","type":"codeVoice"},{"text":".","type":"text"},{"type":"text","text":" "},{"type":"text","text":"A branch might also have a condition associated with the keyword, which determines whether"},{"type":"text","text":" "},{"type":"text","text":"the compiler will include the code within the branch during the compilation process."}],"type":"paragraph"},{"inlineContent":[{"text":"For example, in  the following declaration the block has two branches","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["#if true","enum A {}","#else","enum B {}","#endif"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The first branch has the keyword "},{"code":"#if","type":"codeVoice"},{"type":"text","text":" and the condition "},{"type":"codeVoice","code":"true"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The second branch has the keyword "},{"code":"#else","type":"codeVoice"},{"type":"text","text":" and no condition"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Each instance of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"text":" corresponds to a ","type":"text"},{"type":"codeVoice","code":"IfConfigClauseSyntax"},{"type":"text","text":" node in the Swift syntax tree."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Branch"},{"type":"text","text":" struct provides access to the keyword, the optional condition, and the source location of the branch."}],"type":"paragraph"}],"kind":"content"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","abstract":[],"type":"topic","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Keyword-swift.enum":{"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Keyword"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Keyword"}],"title":"ConditionalCompilationBlock.Branch.Keyword","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxChildCollecting":{"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxChildCollecting"}],"title":"SyntaxChildCollecting","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildCollecting"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","url":"\/documentation\/syntaxsparrow\/syntaxchildcollecting","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/condition":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/condition","title":"condition","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"condition"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"The branch condition (if any)."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"title":"ConditionalCompilationBlock","abstract":[{"text":"Represents a Swift conditional compilation block declaration.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"title":"ConditionalCompilationBlock.Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/node":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/node","title":"node","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IfConfigClauseSyntax","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V"}],"type":"topic","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/keyword-swift.property":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.property","title":"keyword","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"keyword"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Keyword","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV7KeywordO"}],"type":"topic","abstract":[{"type":"text","text":"The branch keyword, either "},{"type":"codeVoice","code":"\"#if\""},{"type":"text","text":", "},{"code":"\"#elseif\"","type":"codeVoice"},{"type":"text","text":", or "},{"type":"codeVoice","code":"\"#else\""},{"type":"text","text":"."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/init(node:)":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/init(node:)","title":"init(node:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"IfConfigClauseSyntax","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Will initialize a new instance that will resolve details from the given node as they are requested."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)","role":"symbol"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/CustomStringConvertible-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationCollection":{"navigatorTitle":[{"text":"DeclarationCollection","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeclarationCollection","kind":"identifier"}],"title":"DeclarationCollection","kind":"symbol","url":"\/documentation\/syntaxsparrow\/declarationcollection","type":"topic","role":"symbol"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"title":"Declaration","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/declaration","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/equatable-implementations","title":"Equatable Implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/childCollection":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/childcollection","title":"childCollection","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"childCollection"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow21DeclarationCollectionC","text":"DeclarationCollection","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","isActive":true},{"type":"text","text":" utility instance any results will be collected into."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","role":"symbol"},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Hashable-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/hashable-implementations","title":"Hashable Implementations","kind":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","role":"collectionGroup"}}}