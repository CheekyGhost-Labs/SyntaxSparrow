{"kind":"symbol","metadata":{"roleHeading":"Structure","symbolKind":"struct","role":"symbol","externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","modules":[{"name":"SyntaxSparrow"}],"extendedModule":"SyntaxSparrow","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Branch"}],"title":"ConditionalCompilationBlock.Branch"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","kind":"relationships"}],"abstract":[{"text":"Represents a branch within a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Branch","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each branch within a conditional compilation block starts with a keyword: "},{"type":"codeVoice","code":"#if"},{"text":", ","type":"text"},{"code":"#elseif","type":"codeVoice"},{"type":"text","text":", or "},{"type":"codeVoice","code":"#else"},{"text":".","type":"text"},{"type":"text","text":" "},{"text":"A branch might also have a condition associated with the keyword, which determines whether","type":"text"},{"text":" ","type":"text"},{"text":"the compiler will include the code within the branch during the compilation process.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, in  the following declaration the block has two branches"}]},{"syntax":"swift","code":["#if true","enum A {}","#else","enum B {}","#endif"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The first branch has the keyword "},{"type":"codeVoice","code":"#if"},{"type":"text","text":" and the condition "},{"code":"true","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The second branch has the keyword ","type":"text"},{"code":"#else","type":"codeVoice"},{"type":"text","text":" and no condition"}]}]}]},{"inlineContent":[{"text":"Each instance of ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"text":" corresponds to a ","type":"text"},{"code":"IfConfigClauseSyntax","type":"codeVoice"},{"type":"text","text":" node in the Swift syntax tree."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Branch","type":"codeVoice"},{"text":" struct provides access to the keyword, the optional condition, and the source location of the branch.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"]]},"variants":[{"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum"],"title":"Enumerations"},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"],"generated":true}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Hashable-Implementations":{"type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/hashable-implementations","role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","kind":"article"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Keyword-swift.enum":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum","title":"ConditionalCompilationBlock.Branch.Keyword","abstract":[],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Keyword","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Keyword"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/CustomStringConvertible-Implementations":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/customstringconvertible-implementations","kind":"article"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/init(node:)":{"type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/init(node:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V","kind":"typeIdentifier","text":"IfConfigClauseSyntax"},{"kind":"text","text":")"}],"title":"init(node:)","abstract":[{"text":"Will initialize a new instance that will resolve details from the given node as they are requested.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/node":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node","title":"node","abstract":[{"text":"The raw syntax node being represented by the instance.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"text":": ","kind":"text"},{"text":"IfConfigClauseSyntax","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/node","kind":"symbol"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"Declaration","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/declaration","title":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"Declaration","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"title":"ConditionalCompilationBlock.Branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","kind":"symbol","abstract":[{"type":"text","text":"Represents a branch within a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Branch"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/childCollection":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","role":"symbol","abstract":[{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection"},{"type":"text","text":" utility instance any results will be collected into."}],"type":"topic","kind":"symbol","title":"childCollection","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"childCollection","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow21DeclarationCollectionC","text":"DeclarationCollection","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/childcollection"},"doc://SyntaxSparrow/SH":{"identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/condition":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"condition","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The branch condition (if any)."}],"title":"condition","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/condition","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationCollection":{"url":"\/documentation\/syntaxsparrow\/declarationcollection","title":"DeclarationCollection","abstract":[],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclarationCollection","kind":"identifier"}],"navigatorTitle":[{"text":"DeclarationCollection","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"type":"topic","title":"ConditionalCompilationBlock","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxChildCollecting":{"role":"symbol","abstract":[],"navigatorTitle":[{"text":"SyntaxChildCollecting","kind":"identifier"}],"title":"SyntaxChildCollecting","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxChildCollecting"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","url":"\/documentation\/syntaxsparrow\/syntaxchildcollecting"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/keyword-swift.property":{"role":"symbol","abstract":[{"text":"The branch keyword, either ","type":"text"},{"type":"codeVoice","code":"\"#if\""},{"type":"text","text":", "},{"type":"codeVoice","code":"\"#elseif\""},{"text":", or ","type":"text"},{"code":"\"#else\"","type":"codeVoice"},{"type":"text","text":"."}],"title":"keyword","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyword","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV7KeywordO","text":"Keyword"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"navigatorTitle":[{"text":"SyntaxRepresenting","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxRepresenting","kind":"identifier"}],"title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","abstract":[],"kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Equatable-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","title":"Equatable Implementations","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/equatable-implementations"}}}