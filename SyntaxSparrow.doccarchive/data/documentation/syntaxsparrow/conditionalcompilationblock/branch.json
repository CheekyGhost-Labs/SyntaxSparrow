{"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","interfaceLanguage":"swift"},"metadata":{"extendedModule":"SyntaxSparrow","externalID":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","roleHeading":"Structure","title":"ConditionalCompilationBlock.Branch","role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Branch","kind":"identifier"}],"modules":[{"name":"SyntaxSparrow"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum"],"title":"Enumerations"},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Branch"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Each branch within a conditional compilation block starts with a keyword: "},{"code":"#if","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"#elseif"},{"text":", or ","type":"text"},{"type":"codeVoice","code":"#else"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"A branch might also have a condition associated with the keyword, which determines whether","type":"text"},{"text":" ","type":"text"},{"text":"the compiler will include the code within the branch during the compilation process.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example, in  the following declaration the block has two branches","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["#if true","enum A {}","#else","enum B {}","#endif"],"syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"text":"The first branch has the keyword ","type":"text"},{"code":"#if","type":"codeVoice"},{"type":"text","text":" and the condition "},{"type":"codeVoice","code":"true"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The second branch has the keyword ","type":"text"},{"type":"codeVoice","code":"#else"},{"text":" and no condition","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each instance of "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true,"type":"reference"},{"text":" corresponds to a ","type":"text"},{"type":"codeVoice","code":"IfConfigClauseSyntax"},{"text":" node in the Swift syntax tree.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Branch"},{"text":" struct provides access to the keyword, the optional condition, and the source location of the branch.","type":"text"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"]}],"abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true,"type":"reference"},{"text":".","type":"text"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/childCollection":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/childCollection","abstract":[{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","type":"reference"},{"type":"text","text":" utility instance any results will be collected into."}],"kind":"symbol","title":"childCollection","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/childcollection","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"childCollection","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow21DeclarationCollectionC","text":"DeclarationCollection"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Keyword-swift.enum":{"kind":"symbol","role":"symbol","abstract":[],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Keyword"}],"navigatorTitle":[{"text":"Keyword","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Keyword-swift.enum","title":"ConditionalCompilationBlock.Branch.Keyword"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/CustomStringConvertible-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/CustomStringConvertible-Implementations","abstract":[],"title":"CustomStringConvertible Implementations","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/customstringconvertible-implementations","type":"topic"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/init(node:)":{"type":"topic","title":"init(node:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/init(node:)","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/init(node:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Will initialize a new instance that will resolve details from the given node as they are requested."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"IfConfigClauseSyntax","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://SyntaxSparrow/SH":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"kind":"symbol","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"type":"topic","title":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxChildCollecting":{"url":"\/documentation\/syntaxsparrow\/syntaxchildcollecting","role":"symbol","kind":"symbol","title":"SyntaxChildCollecting","navigatorTitle":[{"text":"SyntaxChildCollecting","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SyntaxChildCollecting","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxChildCollecting","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationCollection":{"url":"\/documentation\/syntaxsparrow\/declarationcollection","role":"symbol","kind":"symbol","title":"DeclarationCollection","navigatorTitle":[{"text":"DeclarationCollection","kind":"identifier"}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclarationCollection","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationCollection","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/keyword-swift.property":{"kind":"symbol","title":"keyword","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"keyword","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Keyword","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV7KeywordO"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/keyword-swift.property","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.property","abstract":[{"type":"text","text":"The branch keyword, either "},{"type":"codeVoice","code":"\"#if\""},{"type":"text","text":", "},{"type":"codeVoice","code":"\"#elseif\""},{"type":"text","text":", or "},{"code":"\"#else\"","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"kind":"symbol","title":"SyntaxRepresenting","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxRepresenting","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","navigatorTitle":[{"text":"SyntaxRepresenting","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"title":"ConditionalCompilationBlock","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Equatable-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Equatable-Implementations","title":"Equatable Implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/equatable-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/condition":{"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/condition","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/condition","abstract":[{"type":"text","text":"The branch condition (if any)."}],"kind":"symbol","title":"condition","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"condition"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","type":"topic","abstract":[],"title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/node":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/node","type":"topic","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"text":": ","kind":"text"},{"text":"IfConfigClauseSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014IfConfigClauseB0V"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/node","role":"symbol","title":"node","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/Hashable-Implementations":{"kind":"article","title":"Hashable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/Hashable-Implementations","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/hashable-implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","title":"ConditionalCompilationBlock.Branch"}}}