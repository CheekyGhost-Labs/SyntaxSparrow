{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"sections":[],"abstract":[{"text":"Will reset the collected child instances and re-assess the represented node to collect any supported child declarations.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collectChildren","kind":"identifier"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The view mode to use when parsing."}],"type":"paragraph"}],"name":"viewMode"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/collectchildren(viewmode:)"]}],"metadata":{"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"SyntaxSparrow"}],"symbolKind":"method","roleHeading":"Instance Method","title":"collectChildren(viewMode:)","extendedModule":"SyntaxSparrow","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"collectChildren","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"kind":"text","text":")"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE15collectChildren8viewModey05SwiftA00a8TreeViewI0O_tF::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV"},"kind":"symbol","identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/collectChildren(viewMode:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/collectChildren(viewMode:)":{"type":"topic","kind":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/collectchildren(viewmode:)","abstract":[{"type":"text","text":"Will reset the collected child instances and re-assess the represented node to collect any supported child declarations."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collectChildren"},{"text":"(","kind":"text"},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/collectChildren(viewMode:)","title":"collectChildren(viewMode:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"type":"topic","title":"ConditionalCompilationBlock","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"title":"ConditionalCompilationBlock.Branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","kind":"symbol","abstract":[{"type":"text","text":"Represents a branch within a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Branch"}],"type":"topic"}}}