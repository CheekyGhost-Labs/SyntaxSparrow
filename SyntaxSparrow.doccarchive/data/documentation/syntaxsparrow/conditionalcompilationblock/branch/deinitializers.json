{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"deinitializers"},{"text":": [","kind":"text"},{"text":"Deinitializer","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers"},"metadata":{"externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE14deinitializersSayAA13DeinitializerVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","extendedModule":"SyntaxSparrow","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deinitializers","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Deinitializer","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV"},{"kind":"text","text":"]"}],"roleHeading":"Instance Property","title":"deinitializers","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"The collected "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","isActive":true,"type":"reference"},{"type":"text","text":" declarations."}],"kind":"symbol","sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/deinitializers":{"title":"deinitializers","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The collected "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","isActive":true,"type":"reference"},{"type":"text","text":" declarations."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","text":"Deinitializer"},{"kind":"text","text":"]"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"kind":"symbol","type":"topic","title":"ConditionalCompilationBlock","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"role":"symbol","navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer":{"url":"\/documentation\/syntaxsparrow\/deinitializer","role":"symbol","navigatorTitle":[{"text":"Deinitializer","kind":"identifier"}],"title":"Deinitializer","type":"topic","abstract":[{"text":"Represents a Swift deinitializer declaration.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deinitializer"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","type":"topic","title":"SyntaxChildCollecting Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","type":"topic","title":"ConditionalCompilationBlock.Branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"Branch","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"}}}