{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"role":"symbol","title":"deinitializers","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE14deinitializersSayAA13DeinitializerVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","roleHeading":"Instance Property","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deinitializers"},{"kind":"text","text":": ["},{"text":"Deinitializer","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"SyntaxSparrow"},"abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Deinitializer","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV"},{"kind":"text","text":"] { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"title":"ConditionalCompilationBlock","abstract":[{"text":"Represents a Swift conditional compilation block declaration.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"title":"ConditionalCompilationBlock.Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","abstract":[],"type":"topic","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer":{"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deinitializer","kind":"identifier"}],"navigatorTitle":[{"text":"Deinitializer","kind":"identifier"}],"title":"Deinitializer","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","url":"\/documentation\/syntaxsparrow\/deinitializer","role":"symbol","abstract":[{"text":"Represents a Swift deinitializer declaration.","type":"text"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/deinitializers":{"abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","type":"reference","isActive":true},{"text":" declarations.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Deinitializer","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV"},{"text":"]","kind":"text"}],"title":"deinitializers","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}}}}