{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"abstract":[{"type":"text","text":"The collected "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer"},{"text":" declarations.","type":"text"}],"metadata":{"externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE14deinitializersSayAA13DeinitializerVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","symbolKind":"property","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"SyntaxSparrow","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Deinitializer","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV"},{"kind":"text","text":"]"}],"role":"symbol","title":"deinitializers","modules":[{"name":"SyntaxSparrow"}]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","text":"Deinitializer"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers"]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","interfaceLanguage":"swift"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"type":"topic","title":"ConditionalCompilationBlock","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/deinitializers":{"title":"deinitializers","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deinitializers"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","text":"Deinitializer","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}]},"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","abstract":[{"type":"text","text":"The collected "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer"},{"type":"text","text":" declarations."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","kind":"article","abstract":[],"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer":{"abstract":[{"text":"Represents a Swift deinitializer declaration.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/deinitializer","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Deinitializer","kind":"identifier"}],"title":"Deinitializer","navigatorTitle":[{"text":"Deinitializer","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"title":"ConditionalCompilationBlock.Branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","kind":"symbol","abstract":[{"type":"text","text":"Represents a branch within a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Branch"}],"type":"topic"}}}