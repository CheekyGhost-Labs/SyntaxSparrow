{"metadata":{"symbolKind":"property","externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE7importsSayAA6ImportVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","roleHeading":"Instance Property","role":"symbol","modules":[{"name":"SyntaxSparrow"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"imports","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ImportV","text":"Import"},{"text":"]","kind":"text"}],"title":"imports","extendedModule":"SyntaxSparrow"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"imports"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow6ImportV","text":"Import","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]}],"abstract":[{"text":"The collected ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import"},{"text":" declarations.","type":"text"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/imports","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/imports"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/imports":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/imports","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"imports"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ImportV","text":"Import"},{"kind":"text","text":"]"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","title":"imports","abstract":[{"type":"text","text":"The collected "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import","isActive":true},{"text":" declarations.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/imports","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","type":"topic","title":"ConditionalCompilationBlock.Branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"text":"Branch","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Import":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift import declaration."}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/import","title":"Import","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Import","kind":"identifier"}],"navigatorTitle":[{"text":"Import","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","type":"topic","title":"SyntaxChildCollecting Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"kind":"symbol","type":"topic","title":"ConditionalCompilationBlock","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"role":"symbol","navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock"}}}