{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/initializers"]}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"initializers","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Initializer","preciseIdentifier":"s:13SyntaxSparrow11InitializerV"},{"text":"]","kind":"text"}],"title":"initializers","externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE12initializersSayAA11InitializerVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","symbolKind":"property","role":"symbol","modules":[{"name":"SyntaxSparrow"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Property","extendedModule":"SyntaxSparrow"},"sections":[],"abstract":[{"text":"The collected ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","isActive":true},{"type":"text","text":" declarations."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"initializers","kind":"identifier"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","text":"Initializer","preciseIdentifier":"s:13SyntaxSparrow11InitializerV","kind":"typeIdentifier"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/initializers"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","navigatorTitle":[{"text":"Initializer","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Initializer"}],"url":"\/documentation\/syntaxsparrow\/initializer","role":"symbol","title":"Initializer","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/initializers":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"initializers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Initializer","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow11InitializerV"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/initializers","kind":"symbol","abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"type":"topic","role":"symbol","title":"initializers","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/initializers"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"title":"ConditionalCompilationBlock","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","title":"ConditionalCompilationBlock.Branch"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","type":"topic","abstract":[],"title":"SyntaxChildCollecting Implementations"}}}