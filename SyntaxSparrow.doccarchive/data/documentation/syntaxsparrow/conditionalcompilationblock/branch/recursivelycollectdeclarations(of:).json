{"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","kind":"typeIdentifier","text":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The type to collect"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of the inferred "},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":" type"}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Note: Declarations are returned ","type":"text"},{"type":"strong","inlineContent":[{"text":"in order of declaration","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"For example,","type":"text"}]},{"type":"codeListing","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"If you invoke the "},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"text":" helper on the root ","type":"text"},{"code":"SyntaxTree","type":"codeVoice"},{"text":" instance would return:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"type":"text","text":", "},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Structure<RootLevelStruct>","type":"codeVoice"},{"text":"]","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"if you invoke the helper on the "},{"type":"codeVoice","code":"tree.enumerations[0]"},{"text":" instance would return:","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":"]"}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/recursivelycollectdeclarations(of:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)"},"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"text":"on the current declaration","type":"text"}]},{"text":" for the given type and return them in a flattened array.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"method","role":"symbol","extendedModule":"SyntaxSparrow","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","roleHeading":"Instance Method","title":"recursivelyCollectDeclarations(of:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> ["},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"]","kind":"text"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/recursivelyCollectDeclarations(of:)":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/recursivelycollectdeclarations(of:)","role":"symbol","kind":"symbol","title":"recursivelyCollectDeclarations(of:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"type":"text","text":" for the given type and return them in a flattened array."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"title":"ConditionalCompilationBlock","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","type":"topic","abstract":[],"title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"kind":"symbol","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"type":"topic","title":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","title":"ConditionalCompilationBlock.Branch"}}}