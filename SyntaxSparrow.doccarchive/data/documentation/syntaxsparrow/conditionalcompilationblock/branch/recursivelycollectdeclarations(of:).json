{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"text":" for the given type and return them in a flattened array.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/recursivelycollectdeclarations(of:)"]}],"metadata":{"modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Method","title":"recursivelyCollectDeclarations(of:)","externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","symbolKind":"method","extendedModule":"SyntaxSparrow","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":".Type) -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"]","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","text":"Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"inlineContent":[{"type":"text","text":"The type to collect"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"Array of the inferred "},{"code":"Declaration","type":"codeVoice"},{"text":" type","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: Declarations are returned "},{"inlineContent":[{"type":"text","text":"in order of declaration"}],"type":"strong"}]},{"inlineContent":[{"text":"For example,","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"]},{"type":"paragraph","inlineContent":[{"text":"If you invoke the ","type":"text"},{"code":"recursivelyCollectDeclarations(Structure.self)","type":"codeVoice"},{"type":"text","text":" helper on the root "},{"type":"codeVoice","code":"SyntaxTree"},{"type":"text","text":" instance would return:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"type":"text","text":", "},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Structure<RootLevelStruct>","type":"codeVoice"},{"type":"text","text":"]"},{"text":" ","type":"text"},{"type":"text","text":"if you invoke the helper on the "},{"type":"codeVoice","code":"tree.enumerations[0]"},{"text":" instance would return:","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"[","type":"text"},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"type":"text","text":"]"}]}]}],"type":"unorderedList"}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","abstract":[],"type":"topic","title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"title":"Declaration","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/declaration","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/recursivelyCollectDeclarations(of:)":{"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"text":"on the current declaration","type":"text"}]},{"type":"text","text":" for the given type and return them in a flattened array."}],"title":"recursivelyCollectDeclarations(of:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/recursivelycollectdeclarations(of:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ConditionalCompilationBlock","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","navigatorTitle":[{"kind":"identifier","text":"ConditionalCompilationBlock"}],"title":"ConditionalCompilationBlock","abstract":[{"text":"Represents a Swift conditional compilation block declaration.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Branch"}],"title":"ConditionalCompilationBlock.Branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","isActive":true},{"type":"text","text":"."}]}}}