{"variants":[{"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"topicSections":[{"generated":true,"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/actors","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/classes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/conditionalCompilationBlocks","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/enumerations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/extensions","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/functions","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/imports","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/initializers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/operators","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/precedenceGroups","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/protocols","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/structures","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/subscripts","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/typealiases","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/variables"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/collectChildren(viewMode:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)"],"generated":true,"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch"]]},"kind":"article","metadata":{"roleHeading":"API Collection","modules":[{"name":"SyntaxSparrow"}],"title":"SyntaxChildCollecting Implementations","role":"collectionGroup"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer":{"title":"Deinitializer","type":"topic","url":"\/documentation\/syntaxsparrow\/deinitializer","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","navigatorTitle":[{"text":"Deinitializer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift deinitializer declaration."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deinitializer"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/structures":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/structures","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"structures","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Structure","preciseIdentifier":"s:13SyntaxSparrow9StructureV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/structures","title":"structures","kind":"symbol","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"The collected ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure","isActive":true},{"text":" declarations.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/recursivelyCollectDeclarations(of:)":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/recursivelycollectdeclarations(of:)","role":"symbol","kind":"symbol","title":"recursivelyCollectDeclarations(of:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/recursivelyCollectDeclarations(of:)","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"type":"text","text":" for the given type and return them in a flattened array."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Operator":{"abstract":[{"text":"Represents a Swift operator declaration.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Operator","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/operator","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Operator","navigatorTitle":[{"text":"Operator","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"Operator"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Function":{"type":"topic","title":"Function","navigatorTitle":[{"text":"Function","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a Swift function declaration."}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Function","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function","url":"\/documentation\/syntaxsparrow\/function"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/precedenceGroups":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[{"type":"text","text":"The collected "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/PrecedenceGroup"},{"type":"text","text":" declarations."}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/precedencegroups","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/precedenceGroups","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"precedenceGroups","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow15PrecedenceGroupV","text":"PrecedenceGroup","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","title":"precedenceGroups"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Subscript":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/subscript","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Subscript","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Subscript","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a Swift subscript declaration."}],"navigatorTitle":[{"text":"Subscript","kind":"identifier"}],"title":"Subscript","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/subscripts":{"abstract":[{"type":"text","text":"The collected "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Subscript","isActive":true},{"text":" declarations.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/subscripts","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"subscripts","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"subscripts"},{"kind":"text","text":": ["},{"text":"Subscript","preciseIdentifier":"s:13SyntaxSparrow9SubscriptV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/subscripts","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"title":"ConditionalCompilationBlock","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Enumeration":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Enumeration","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/enumeration","abstract":[{"type":"text","text":"Represents a Swift enumeration declaration."}],"navigatorTitle":[{"text":"Enumeration","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Enumeration","kind":"identifier"}],"title":"Enumeration","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/operators":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/operators","role":"symbol","title":"operators","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}]},"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"operators","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow8OperatorV","text":"Operator","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/operators","abstract":[{"text":"The collected ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Operator","type":"reference"},{"type":"text","text":" declarations."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/classes":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"classes"},{"text":": [","kind":"text"},{"text":"Class","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5ClassV"},{"text":"]","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"The collected ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Class","isActive":true},{"text":" declarations.","type":"text"}],"type":"topic","title":"classes","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/classes","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/classes"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/actors":{"abstract":[{"type":"text","text":"The collected "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Actor","isActive":true},{"text":" declarations.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/actors","kind":"symbol","title":"actors","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/actors","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actors","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow5ActorV","text":"Actor","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}]},"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/variables":{"type":"topic","title":"variables","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/variables","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/variables","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"variables","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Variable","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow8VariableV"},{"text":"]","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension":{"abstract":[{"type":"text","text":"Represents a Swift extension declaration."}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/extension","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Extension","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension","title":"Extension","navigatorTitle":[{"kind":"identifier","text":"Extension"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Actor":{"abstract":[{"type":"text","text":"Represents a class declaration in Swift source code."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Actor","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Actor"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/actor","title":"Actor","kind":"symbol","navigatorTitle":[{"text":"Actor","kind":"identifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Import":{"url":"\/documentation\/syntaxsparrow\/import","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Import"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Import"}],"abstract":[{"text":"Represents a Swift import declaration.","type":"text"}],"kind":"symbol","title":"Import"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ProtocolDecl":{"abstract":[{"type":"text","text":"Represents a Swift protocol declaration."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ProtocolDecl","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ProtocolDecl"}],"role":"symbol","title":"ProtocolDecl","navigatorTitle":[{"text":"ProtocolDecl","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/protocoldecl","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Typealias":{"url":"\/documentation\/syntaxsparrow\/typealias","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Typealias","kind":"identifier"}],"title":"Typealias","abstract":[{"text":"Represents a Swift typealias declaration.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Typealias"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/protocols":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/protocols","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"protocols"},{"kind":"text","text":": ["},{"text":"ProtocolDecl","preciseIdentifier":"s:13SyntaxSparrow12ProtocolDeclV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/protocols","type":"topic","conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"type":"text","text":"The collected "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ProtocolDecl","isActive":true},{"text":" declarations.","type":"text"}],"title":"protocols"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/deinitializers":{"title":"deinitializers","kind":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/deinitializers","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"deinitializers","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow13DeinitializerV","kind":"typeIdentifier","text":"Deinitializer"},{"text":"]","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","type":"reference","isActive":true},{"type":"text","text":" declarations."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","navigatorTitle":[{"text":"Initializer","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Initializer"}],"url":"\/documentation\/syntaxsparrow\/initializer","role":"symbol","title":"Initializer","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/enumerations":{"title":"enumerations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/enumerations","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/enumerations","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enumerations"},{"text":": [","kind":"text"},{"text":"Enumeration","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow11EnumerationV"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"type":"topic","abstract":[{"type":"text","text":"The collected "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Enumeration","type":"reference"},{"text":" declarations.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Variable":{"type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","kind":"symbol","title":"Variable","url":"\/documentation\/syntaxsparrow\/variable","abstract":[{"type":"text","text":"Represents a Swift variable declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variable"}],"navigatorTitle":[{"text":"Variable","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/imports":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/imports","title":"imports","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/imports","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"imports","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Import","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ImportV"},{"kind":"text","text":"]"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","abstract":[{"text":"The collected ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Import"},{"text":" declarations.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/functions":{"kind":"symbol","abstract":[{"type":"text","text":"The collected "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/functions","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/functions","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"functions","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Function","preciseIdentifier":"s:13SyntaxSparrow8FunctionV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"functions","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Structure":{"navigatorTitle":[{"kind":"identifier","text":"Structure"}],"title":"Structure","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure","abstract":[{"type":"text","text":"Represents a Swift struct declaration."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Structure"}],"url":"\/documentation\/syntaxsparrow\/structure"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/collectChildren(viewMode:)":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/collectchildren(viewmode:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/collectChildren(viewMode:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"("},{"text":"viewMode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":")","kind":"text"}],"title":"collectChildren(viewMode:)","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Will reset the collected child instances and re-assess the represented node to collect any supported child declarations.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Class":{"url":"\/documentation\/syntaxsparrow\/class","role":"symbol","kind":"symbol","title":"Class","navigatorTitle":[{"text":"Class","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Class"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Class","abstract":[{"type":"text","text":"Represents a class declaration in Swift source code."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/initializers":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"initializers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Initializer","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow11InitializerV"},{"text":"]","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/initializers","kind":"symbol","abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"type":"topic","role":"symbol","title":"initializers","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/initializers"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/typealiases":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/typealiases","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"typealiases"},{"kind":"text","text":": ["},{"text":"Typealias","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9TypealiasV"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/typealiases","type":"topic","abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"role":"symbol","title":"typealiases","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/extensions":{"abstract":[{"type":"text","text":"The collected "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension"},{"type":"text","text":" declarations."}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/extensions","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"extensions","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"extensions"},{"text":": [","kind":"text"},{"text":"Extension","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ExtensionV"},{"text":"]","kind":"text"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/extensions"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/PrecedenceGroup":{"url":"\/documentation\/syntaxsparrow\/precedencegroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/PrecedenceGroup","role":"symbol","type":"topic","navigatorTitle":[{"text":"PrecedenceGroup","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrecedenceGroup","kind":"identifier"}],"abstract":[{"code":"PrecedenceGroup","type":"codeVoice"},{"type":"text","text":" represents the metadata of an operator’s precedence group."}],"title":"PrecedenceGroup","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/conditionalCompilationBlocks":{"abstract":[{"type":"text","text":"The collected "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/conditionalcompilationblocks","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"conditionalCompilationBlocks"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow27ConditionalCompilationBlockV","text":"ConditionalCompilationBlock"},{"kind":"text","text":"]"}],"role":"symbol","title":"conditionalCompilationBlocks","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"code":"Declaration","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/conditionalCompilationBlocks","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","title":"ConditionalCompilationBlock.Branch"}}}