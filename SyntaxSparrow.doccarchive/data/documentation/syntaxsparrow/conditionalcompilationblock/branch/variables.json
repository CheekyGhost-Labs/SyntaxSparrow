{"abstract":[{"type":"text","text":"The collected "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","isActive":true},{"text":" declarations.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"variables","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","text":"Variable","preciseIdentifier":"s:13SyntaxSparrow8VariableV"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/variables"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/variables"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"externalID":"s:13SyntaxSparrow0A15ChildCollectingPA2A11DeclarationRzrlE9variablesSayAA8VariableVGvp::SYNTHESIZED::s:13SyntaxSparrow27ConditionalCompilationBlockV6BranchV","title":"variables","extendedModule":"SyntaxSparrow","role":"symbol","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"property","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"variables"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow8VariableV","kind":"typeIdentifier","text":"Variable"},{"kind":"text","text":"]"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/syntaxchildcollecting-implementations","role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/SyntaxChildCollecting-Implementations","type":"topic","abstract":[],"title":"SyntaxChildCollecting Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Variable":{"type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","kind":"symbol","title":"Variable","url":"\/documentation\/syntaxsparrow\/variable","abstract":[{"type":"text","text":"Represents a Swift variable declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Variable"}],"navigatorTitle":[{"text":"Variable","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch/variables":{"type":"topic","title":"variables","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/variables","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch\/variables","kind":"symbol","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Declaration"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"abstract":[{"text":"The collected ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Variable","isActive":true,"type":"reference"},{"text":" declarations.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"variables","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Variable","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow8VariableV"},{"text":"]","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift conditional compilation block declaration."}],"title":"ConditionalCompilationBlock","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ConditionalCompilationBlock"}],"navigatorTitle":[{"text":"ConditionalCompilationBlock","kind":"identifier"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ConditionalCompilationBlock/Branch":{"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","abstract":[{"text":"Represents a branch within a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Branch","kind":"identifier"}],"navigatorTitle":[{"text":"Branch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ConditionalCompilationBlock\/Branch","title":"ConditionalCompilationBlock.Branch"}}}