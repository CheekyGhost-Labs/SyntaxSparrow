{"metadata":{"extendedModule":"SyntaxSparrow","title":"recursivelyCollectDeclarations(of:)","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"method","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"]","kind":"text"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow13DeinitializerV","role":"symbol"},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/deinitializer\/recursivelycollectdeclarations(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer\/recursivelyCollectDeclarations(of:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"type":"text","text":" for the given type and return them in a flattened array."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer\/SyntaxChildCollecting-Implementations"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":".Type) -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":"] "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","text":"Declaration","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type to collect"}],"type":"paragraph"}],"name":"type"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"inlineContent":[{"text":"Array of the inferred ","type":"text"},{"code":"Declaration","type":"codeVoice"},{"text":" type","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Note: Declarations are returned "},{"inlineContent":[{"type":"text","text":"in order of declaration"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"syntax":"swift","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you invoke the ","type":"text"},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"type":"text","text":" helper on the root "},{"code":"SyntaxTree","type":"codeVoice"},{"text":" instance would return:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"[","type":"text"},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Structure<RootLevelStruct>"},{"type":"text","text":"]"},{"text":" ","type":"text"},{"type":"text","text":"if you invoke the helper on the "},{"type":"codeVoice","code":"tree.enumerations[0]"},{"text":" instance would return:","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"[","type":"text"},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":"]"}]}]}]}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer":{"url":"\/documentation\/syntaxsparrow\/deinitializer","role":"symbol","navigatorTitle":[{"text":"Deinitializer","kind":"identifier"}],"title":"Deinitializer","type":"topic","abstract":[{"text":"Represents a Swift deinitializer declaration.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Deinitializer"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer/SyntaxChildCollecting-Implementations":{"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer\/SyntaxChildCollecting-Implementations","type":"topic","role":"collectionGroup","title":"SyntaxChildCollecting Implementations","kind":"article","url":"\/documentation\/syntaxsparrow\/deinitializer\/syntaxchildcollecting-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Deinitializer/recursivelyCollectDeclarations(of:)":{"title":"recursivelyCollectDeclarations(of:)","url":"\/documentation\/syntaxsparrow\/deinitializer\/recursivelycollectdeclarations(of:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Deinitializer\/recursivelyCollectDeclarations(of:)","abstract":[{"text":"Will recursively iterate through the collected declarations ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"type":"text","text":" for the given type and return them in a flattened array."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"title":"Declaration","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","url":"\/documentation\/syntaxsparrow\/declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"type":"topic"}}}