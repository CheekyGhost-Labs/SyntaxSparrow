{"kind":"symbol","identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SyntaxSparrow"}],"title":"EntityType","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"symbolKind":"enum","role":"symbol","externalID":"s:13SyntaxSparrow10EntityTypeO","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"roleHeading":"Enumeration"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"text":"As support for more complex types are added they will be added as a dedicated enumeration case to the ","type":"text"},{"type":"codeVoice","code":"EntityType"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description"],"title":"Instance Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/array(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"kind":"text","text":"("},{"text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"text":")","kind":"text"}],"title":"EntityType.array(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/array(_:)","abstract":[{"text":"A ","type":"text"},{"code":"array","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true,"type":"reference"},{"type":"text","text":" type."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)","type":"topic","title":"EntityType.closure(_:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"type":"codeVoice","code":"Closure"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"closure","kind":"identifier"},{"kind":"text","text":"("},{"text":"Closure","preciseIdentifier":"s:13SyntaxSparrow7ClosureV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"url":"\/documentation\/syntaxsparrow\/setdecl","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"topic","kind":"symbol","title":"SetDecl","role":"symbol","navigatorTitle":[{"text":"SetDecl","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetDecl"}],"abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Set"},{"text":" type.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/tuple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"tuple"},{"kind":"text","text":"("},{"text":"Tuple","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5TupleV"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)","role":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"tuple"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"reference"},{"type":"text","text":" type."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","title":"EntityType.tuple(_:)","kind":"symbol"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"title":"EntityType.set(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"type":"text","text":" type."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/empty":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/empty","role":"symbol","abstract":[{"text":"An ","type":"text"},{"code":"empty","type":"codeVoice"},{"type":"text","text":" type refers to a when a parameter or property is partially declared and does not have a type defined."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","kind":"symbol","title":"EntityType.empty"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/init(_:)":{"url":"\/documentation\/syntaxsparrow\/entitytype\/init(_:)","title":"init(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)","abstract":[{"text":"Creates a new ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" instance from a "},{"code":"TypeSyntax","type":"codeVoice"},{"type":"text","text":" node."}],"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:11SwiftSyntax04TypeB0V","text":"TypeSyntax","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/dictionary(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","isActive":true,"type":"reference"},{"type":"text","text":" type."}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionary"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow14DictionaryDeclV","text":"DictionaryDecl","kind":"typeIdentifier"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/dictionary(_:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","title":"EntityType.dictionary(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/entitytype\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations","abstract":[],"kind":"article","role":"collectionGroup","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DictionaryDecl":{"abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" type."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DictionaryDecl"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","kind":"symbol","url":"\/documentation\/syntaxsparrow\/dictionarydecl","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DictionaryDecl"}],"title":"DictionaryDecl"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"url":"\/documentation\/syntaxsparrow\/tuple","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","title":"Tuple","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Tuple"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tuple"}],"abstract":[{"text":"Represents a Swift tuple.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/void(_:_:)":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/void(_:_:)","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"void"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"void"},{"text":" type is used when a parameter’s type resolves to ","type":"text"},{"code":"Void","type":"codeVoice"},{"type":"text","text":". It includes the raw declaration ("},{"type":"codeVoice","code":"\"Void\""},{"text":" or ","type":"text"},{"code":"\"()\"","type":"codeVoice"},{"type":"text","text":") includes if the type is optional."}],"title":"EntityType.void(_:_:)"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/result(_:)":{"title":"EntityType.result(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"result"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"result"},{"kind":"text","text":"("},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","text":"Result","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/description":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description","url":"\/documentation\/syntaxsparrow\/entitytype\/description","kind":"symbol","role":"symbol","abstract":[],"title":"description","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ArrayDecl":{"abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" type."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayDecl"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","kind":"symbol","url":"\/documentation\/syntaxsparrow\/arraydecl","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayDecl"}],"title":"ArrayDecl"}}}