{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype"]}],"metadata":{"modules":[{"name":"SyntaxSparrow"}],"symbolKind":"enum","role":"symbol","title":"EntityType","roleHeading":"Enumeration","externalID":"s:13SyntaxSparrow10EntityTypeO","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"languages":["swift"],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"text":"As support for more complex types are added they will be added as a dedicated enumeration case to the ","type":"text"},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"type":"conformsTo","title":"Conforms To"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)"],"title":"Enumeration Cases"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description"],"title":"Instance Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/dictionary(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"dictionary","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DictionaryDecl","preciseIdentifier":"s:13SyntaxSparrow14DictionaryDeclV"},{"kind":"text","text":")"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","isActive":true,"type":"reference"},{"type":"text","text":" type."}],"role":"symbol","type":"topic","title":"EntityType.dictionary(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/dictionary(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"topic","title":"EntityType","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"closure","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Closure","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7ClosureV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"type":"codeVoice","code":"Closure"},{"text":".","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.closure(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/empty":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"empty"}],"abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"empty"},{"text":" type refers to a when a parameter or property is partially declared and does not have a type defined.","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.empty","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/empty"},"doc://SyntaxSparrow/SQ":{"identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/void(_:_:)":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/void(_:_:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"void","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)","title":"EntityType.void(_:_:)","role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"void","type":"codeVoice"},{"text":" type is used when a parameter’s type resolves to ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":". It includes the raw declaration (","type":"text"},{"code":"\"Void\"","type":"codeVoice"},{"type":"text","text":" or "},{"code":"\"()\"","type":"codeVoice"},{"type":"text","text":") includes if the type is optional."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/result(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"result","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":")"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"result"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"code":"Result","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","title":"EntityType.result(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ArrayDecl":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","navigatorTitle":[{"kind":"identifier","text":"ArrayDecl"}],"abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Array"},{"text":" type.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayDecl"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/arraydecl","role":"symbol","title":"ArrayDecl"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"text":"SetDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"reference","isActive":true},{"text":" type.","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.set(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"abstract":[{"type":"text","text":"Represents a Swift tuple."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tuple"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","navigatorTitle":[{"text":"Tuple","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/tuple","title":"Tuple"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/init(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"TypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"text":")","kind":"text"}],"abstract":[{"text":"Creates a new ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"text":" instance from a ","type":"text"},{"code":"TypeSyntax","type":"codeVoice"},{"type":"text","text":" node."}],"role":"symbol","type":"topic","title":"init(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/init(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/tuple(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tuple","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Tuple","preciseIdentifier":"s:13SyntaxSparrow5TupleV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"code":"tuple","type":"codeVoice"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"reference","isActive":true},{"text":" type.","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.tuple(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)"},"doc://SyntaxSparrow/SH":{"identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/description":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","type":"topic","title":"description","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/description"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/Equatable-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"Equatable Implementations","kind":"article","url":"\/documentation\/syntaxsparrow\/entitytype\/equatable-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}],"title":"EntityType.simple(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DictionaryDecl":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","kind":"symbol","url":"\/documentation\/syntaxsparrow\/dictionarydecl","navigatorTitle":[{"text":"DictionaryDecl","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Dictionary"},{"type":"text","text":" type."}],"title":"DictionaryDecl","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DictionaryDecl","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/array(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"text":"(","kind":"text"},{"text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","type":"reference","isActive":true},{"text":" type.","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.array(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/array(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"url":"\/documentation\/syntaxsparrow\/setdecl","role":"symbol","title":"SetDecl","kind":"symbol","navigatorTitle":[{"text":"SetDecl","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetDecl"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Set"},{"type":"text","text":" type."}]},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"}}}