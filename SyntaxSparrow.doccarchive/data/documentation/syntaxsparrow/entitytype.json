{"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"An ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"kind":"symbol","topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description"],"title":"Instance Properties"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype"]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Enumeration","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","externalID":"s:13SyntaxSparrow10EntityTypeO","symbolKind":"enum","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/dictionary(_:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"dictionary"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"DictionaryDecl","preciseIdentifier":"s:13SyntaxSparrow14DictionaryDeclV"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/dictionary(_:)","title":"EntityType.dictionary(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/dictionary(_:)","role":"symbol","abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","type":"reference"},{"type":"text","text":" type."}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type can’t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"topic","title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/result(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","title":"EntityType.result(_:)","role":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"result","kind":"identifier"},{"kind":"text","text":"("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"result"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/init(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/init(_:)","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/init(_:)","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"TypeSyntax","preciseIdentifier":"s:11SwiftSyntax04TypeB0V"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Creates a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" instance from a "},{"code":"TypeSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"abstract":[{"text":"Represents a Swift ","type":"text"},{"type":"codeVoice","code":"Set"},{"text":" type.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SetDecl","kind":"identifier"}],"title":"SetDecl","navigatorTitle":[{"kind":"identifier","text":"SetDecl"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/setdecl","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DictionaryDecl":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DictionaryDecl","kind":"symbol","title":"DictionaryDecl","abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Dictionary"},{"text":" type.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DictionaryDecl","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/dictionarydecl","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DictionaryDecl"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/void(_:_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"void"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"void"},{"type":"text","text":" type is used when a parameter’s type resolves to "},{"type":"codeVoice","code":"Void"},{"type":"text","text":". It includes the raw declaration ("},{"type":"codeVoice","code":"\"Void\""},{"text":" or ","type":"text"},{"type":"codeVoice","code":"\"()\""},{"text":") includes if the type is optional.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/void(_:_:)","kind":"symbol","title":"EntityType.void(_:_:)","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/description":{"kind":"symbol","abstract":[],"role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/description","url":"\/documentation\/syntaxsparrow\/entitytype\/description","type":"topic"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/empty":{"url":"\/documentation\/syntaxsparrow\/entitytype\/empty","title":"EntityType.empty","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/empty","type":"topic","kind":"symbol","abstract":[{"text":"An ","type":"text"},{"code":"empty","type":"codeVoice"},{"text":" type refers to a when a parameter or property is partially declared and does not have a type defined.","type":"text"}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"empty","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"url":"\/documentation\/syntaxsparrow\/tuple","title":"Tuple","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift tuple."}],"navigatorTitle":[{"kind":"identifier","text":"Tuple"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Tuple","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/entitytype\/equatable-implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/Equatable-Implementations","title":"Equatable Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"reference","isActive":true},{"type":"text","text":" type."}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl"},{"text":")","kind":"text"}],"title":"EntityType.set(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"title":"EntityType.closure(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7ClosureV","text":"Closure"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"code":"Closure","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ArrayDecl":{"url":"\/documentation\/syntaxsparrow\/arraydecl","title":"ArrayDecl","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","kind":"symbol","type":"topic","abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Array","type":"codeVoice"},{"text":" type.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"ArrayDecl"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayDecl"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/tuple(_:)":{"title":"EntityType.tuple(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"tuple","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5TupleV","text":"Tuple"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","abstract":[{"text":"A ","type":"text"},{"code":"tuple","type":"codeVoice"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","isActive":true},{"type":"text","text":" type."}],"url":"\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/array(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"text":"(","kind":"text"},{"text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"text":")","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/array(_:)","kind":"symbol","title":"EntityType.array(_:)","role":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true},{"type":"text","text":" type."}]}}}