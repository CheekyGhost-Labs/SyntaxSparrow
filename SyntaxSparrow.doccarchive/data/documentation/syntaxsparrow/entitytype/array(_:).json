{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"text":" suffix.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"code":["func example(names: [String])","func example(names: Array<String>)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would have a type of "},{"code":".array(Array)","type":"codeVoice"},{"type":"text","text":" where the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl"},{"type":"text","text":" has the "},{"type":"codeVoice","code":"elementType"},{"type":"text","text":" of "},{"type":"codeVoice","code":".simple(\"String\")"},{"text":".","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/array(_:)"]}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","type":"reference"},{"text":" type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"metadata":{"role":"symbol","symbolKind":"case","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow10EntityTypeO5arrayyAcA9ArrayDeclVcACmF","title":"EntityType.array(_:)","roleHeading":"Case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"text":"(","kind":"text"},{"text":"ArrayDecl","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ArrayDecl":{"role":"symbol","title":"ArrayDecl","abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" type."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","url":"\/documentation\/syntaxsparrow\/arraydecl","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ArrayDecl"}],"navigatorTitle":[{"text":"ArrayDecl","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/array(_:)":{"url":"\/documentation\/syntaxsparrow\/entitytype\/array(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true,"type":"reference"},{"type":"text","text":" type."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","title":"EntityType.array(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"array","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV","text":"ArrayDecl"},{"kind":"text","text":")"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"}}}