{"metadata":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"array","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"ArrayDecl","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"kind":"text","text":")"}],"symbolKind":"case","roleHeading":"Case","modules":[{"name":"SyntaxSparrow"}],"title":"EntityType.array(_:)","role":"symbol","externalID":"s:13SyntaxSparrow10EntityTypeO5arrayyAcA9ArrayDeclVcACmF"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/array(_:)"]}],"kind":"symbol","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true},{"type":"text","text":" type."}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"array"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"kind":"text","text":")"}]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"type":"text","text":" suffix."}]},{"inlineContent":[{"text":"For example,","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["func example(names: [String])","func example(names: Array<String>)"]},{"inlineContent":[{"type":"text","text":"would have a type of "},{"type":"codeVoice","code":".array(Array)"},{"type":"text","text":" where the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true},{"text":" has the ","type":"text"},{"type":"codeVoice","code":"elementType"},{"type":"text","text":" of "},{"code":".simple(\"String\")","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/array(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"array"},{"kind":"text","text":"("},{"text":"ArrayDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ArrayDeclV"},{"text":")","kind":"text"}],"title":"EntityType.array(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/array(_:)","abstract":[{"text":"A ","type":"text"},{"code":"array","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","isActive":true,"type":"reference"},{"type":"text","text":" type."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/array(_:)","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/ArrayDecl":{"abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Array","type":"codeVoice"},{"type":"text","text":" type."}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ArrayDecl"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/ArrayDecl","kind":"symbol","url":"\/documentation\/syntaxsparrow\/arraydecl","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ArrayDecl"}],"title":"ArrayDecl"}}}