{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"A ","type":"text"},{"code":"closure","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"code":"Closure","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","metadata":{"symbolKind":"case","title":"EntityType.closure(_:)","roleHeading":"Case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow7ClosureV","kind":"typeIdentifier","text":"Closure"},{"kind":"text","text":")"}],"externalID":"s:13SyntaxSparrow10EntityTypeO7closureyAcA7ClosureVcACmF","role":"symbol","modules":[{"name":"SyntaxSparrow"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"closure","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Closure","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","preciseIdentifier":"s:13SyntaxSparrow7ClosureV"},{"text":")","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Closure","type":"codeVoice"},{"type":"text","text":" type supports "},{"code":"isOptional","type":"codeVoice"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"type":"text","text":" suffix."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"code":["func example(_ handler: (name: String, age: Int) -> Void) { ... }"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would have a type of "},{"code":".closure(Closure)","type":"codeVoice"},{"text":" where the ","type":"text"},{"code":"Closure","type":"codeVoice"},{"text":" has input arguments with types ","type":"text"},{"type":"codeVoice","code":".simple(\"String\"), .simple(\"Int\")"}]}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"title":"EntityType.closure(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7ClosureV","text":"Closure"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"code":"Closure","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type can’t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"topic","title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Closure"}],"url":"\/documentation\/syntaxsparrow\/closure","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","title":"Closure","abstract":[{"text":"Represents a Swift closure expression.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Closure","kind":"identifier"}]}}}