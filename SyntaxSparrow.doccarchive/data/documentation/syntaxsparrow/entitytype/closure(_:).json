{"sections":[],"metadata":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow7ClosureV","text":"Closure","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Case","modules":[{"name":"SyntaxSparrow"}],"title":"EntityType.closure(_:)","symbolKind":"case","externalID":"s:13SyntaxSparrow10EntityTypeO7closureyAcA7ClosureVcACmF"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"abstract":[{"type":"text","text":"A "},{"code":"closure","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"type":"codeVoice","code":"Closure"},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"closure","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Closure","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7ClosureV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Closure"},{"type":"text","text":" type supports "},{"code":"isOptional","type":"codeVoice"},{"text":" to derive if the type has the optional\/","type":"text"},{"type":"codeVoice","code":"?"},{"type":"text","text":" suffix."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example,"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func example(_ handler: (name: String, age: Int) -> Void) { ... }"]},{"inlineContent":[{"type":"text","text":"would have a type of "},{"code":".closure(Closure)","type":"codeVoice"},{"text":" where the ","type":"text"},{"code":"Closure","type":"codeVoice"},{"text":" has input arguments with types ","type":"text"},{"type":"codeVoice","code":".simple(\"String\"), .simple(\"Int\")"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"type":"topic","abstract":[{"type":"text","text":"Represents a Swift closure expression."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Closure","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/closure","navigatorTitle":[{"text":"Closure","kind":"identifier"}],"title":"Closure"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)","abstract":[{"text":"A ","type":"text"},{"code":"closure","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"code":"Closure","type":"codeVoice"},{"type":"text","text":"."}],"title":"EntityType.closure(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","role":"symbol","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Closure","preciseIdentifier":"s:13SyntaxSparrow7ClosureV"},{"text":")","kind":"text"}],"type":"topic"}}}