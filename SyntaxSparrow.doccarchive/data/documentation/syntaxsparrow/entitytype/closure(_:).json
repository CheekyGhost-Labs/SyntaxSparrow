{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"code":"Closure","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"metadata":{"title":"EntityType.closure(_:)","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"case","externalID":"s:13SyntaxSparrow10EntityTypeO7closureyAcA7ClosureVcACmF","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"closure"},{"kind":"text","text":"("},{"preciseIdentifier":"s:13SyntaxSparrow7ClosureV","text":"Closure","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Case"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"closure"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow7ClosureV","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","text":"Closure"},{"kind":"text","text":")"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"Closure","type":"codeVoice"},{"type":"text","text":" type supports "},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"text":" suffix.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"code":["func example(_ handler: (name: String, age: Int) -> Void) { ... }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"would have a type of ","type":"text"},{"type":"codeVoice","code":".closure(Closure)"},{"type":"text","text":" where the "},{"code":"Closure","type":"codeVoice"},{"text":" has input arguments with types ","type":"text"},{"type":"codeVoice","code":".simple(\"String\"), .simple(\"Int\")"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"topic","title":"EntityType","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Closure":{"type":"topic","kind":"symbol","navigatorTitle":[{"text":"Closure","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Closure","abstract":[{"type":"text","text":"Represents a Swift closure expression."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Closure"}],"title":"Closure","url":"\/documentation\/syntaxsparrow\/closure"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/closure(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/closure(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"closure","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Closure","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7ClosureV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"closure"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"type":"codeVoice","code":"Closure"},{"text":".","type":"text"}],"role":"symbol","type":"topic","title":"EntityType.closure(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}],"title":"EntityType.simple(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"}}}