{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"result","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","text":"Result","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type supports "},{"type":"codeVoice","code":"isOptional"},{"text":" to derive if the type has the optional\/","type":"text"},{"type":"codeVoice","code":"?"},{"text":" suffix.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example,"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func processResult(_ result: Result<String, Error>) { ... }"]},{"type":"paragraph","inlineContent":[{"text":"would have a type of ","type":"text"},{"code":".result(Result)","type":"codeVoice"},{"type":"text","text":" where the "},{"code":"Result","type":"codeVoice"},{"text":" type represents a computation that can either result in a value of type ","type":"text"},{"type":"codeVoice","code":"String"},{"text":" ","type":"text"},{"type":"text","text":"(the success case) or an "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" (the failure case)."}]}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/entitytype\/result(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"A ","type":"text"},{"code":"result","type":"codeVoice"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Case","externalID":"s:13SyntaxSparrow10EntityTypeO6resultyAcA6ResultVcACmF","symbolKind":"case","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","title":"EntityType.result(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"result"},{"kind":"text","text":"("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":")"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","role":"symbol","title":"EntityType.simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type can’t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"type":"codeVoice","code":"CVarArg"},{"text":" is not currently supported so it will use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","title":"EntityType","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/result(_:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A "},{"code":"result","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type resolves to a valid "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"title":"EntityType.result(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"result"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result":{"title":"Result","role":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Result","kind":"identifier"}],"abstract":[{"text":"Represents a Swift ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" type.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/result","navigatorTitle":[{"text":"Result","kind":"identifier"}],"kind":"symbol"}}}