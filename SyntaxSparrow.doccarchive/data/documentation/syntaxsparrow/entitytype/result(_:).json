{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"result","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","text":"Result"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" type supports "},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"text":" suffix.","type":"text"}]},{"inlineContent":[{"type":"text","text":"For example,"}],"type":"paragraph"},{"syntax":"swift","code":["func processResult(_ result: Result<String, Error>) { ... }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would have a type of "},{"type":"codeVoice","code":".result(Result)"},{"type":"text","text":" where the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type represents a computation that can either result in a value of type "},{"type":"codeVoice","code":"String"},{"text":" ","type":"text"},{"text":"(the success case) or an ","type":"text"},{"code":"Error","type":"codeVoice"},{"type":"text","text":" (the failure case)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A "},{"code":"result","type":"codeVoice"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/syntaxsparrow\/entitytype\/result(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"EntityType.result(_:)","symbolKind":"case","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","roleHeading":"Case","externalID":"s:13SyntaxSparrow10EntityTypeO6resultyAcA6ResultVcACmF","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"result"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"topic","title":"EntityType","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Result","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Result"}],"title":"Result","role":"symbol","url":"\/documentation\/syntaxsparrow\/result","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}],"title":"EntityType.simple(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/result(_:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/result(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"result","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":")"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"result"},{"text":" type is used when a parameter’s type resolves to a valid ","type":"text"},{"code":"Result","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","title":"EntityType.result(_:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)"}}}