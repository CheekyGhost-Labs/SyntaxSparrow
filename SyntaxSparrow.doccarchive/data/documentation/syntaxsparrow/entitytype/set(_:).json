{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"set"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"The "},{"code":"Set","type":"codeVoice"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"isOptional"},{"text":" to derive if the type has the optional\/","type":"text"},{"code":"?","type":"codeVoice"},{"type":"text","text":" suffix."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"syntax":"swift","code":["func example(names: Set<String>)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"would have a type of "},{"type":"codeVoice","code":".set(Set)"},{"type":"text","text":" where the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"type":"text","text":" has the "},{"type":"codeVoice","code":"elementType"},{"text":" of ","type":"text"},{"code":".simple(\"String\")","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/entitytype\/set(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"type":"text","text":" type."}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl"},{"kind":"text","text":")"}],"externalID":"s:13SyntaxSparrow10EntityTypeO3setyAcA7SetDeclVcACmF","roleHeading":"Case","title":"EntityType.set(_:)","modules":[{"name":"SyntaxSparrow"}],"role":"symbol"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"reference","isActive":true},{"text":" type.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"EntityType.set(_:)","kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SetDecl"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","url":"\/documentation\/syntaxsparrow\/setdecl","abstract":[{"text":"Represents a Swift ","type":"text"},{"type":"codeVoice","code":"Set"},{"type":"text","text":" type."}],"title":"SetDecl","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SetDecl"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"}}}