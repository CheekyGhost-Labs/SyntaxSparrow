{"sections":[],"metadata":{"symbolKind":"case","title":"EntityType.set(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"text":"SetDecl","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV"},{"kind":"text","text":")"}],"externalID":"s:13SyntaxSparrow10EntityTypeO3setyAcA7SetDeclVcACmF","modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Case","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","isActive":true},{"type":"text","text":" type."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"kind":"text","text":")"}]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Set"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"type":"codeVoice","code":"?"},{"text":" suffix.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example,"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func example(names: Set<String>)"]},{"inlineContent":[{"text":"would have a type of ","type":"text"},{"type":"codeVoice","code":".set(Set)"},{"type":"text","text":" where the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"reference","isActive":true},{"text":" has the ","type":"text"},{"type":"codeVoice","code":"elementType"},{"text":" of ","type":"text"},{"type":"codeVoice","code":".simple(\"String\")"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/set(_:)"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"url":"\/documentation\/syntaxsparrow\/setdecl","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"topic","kind":"symbol","title":"SetDecl","role":"symbol","navigatorTitle":[{"text":"SetDecl","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SetDecl"}],"abstract":[{"type":"text","text":"Represents a Swift "},{"type":"codeVoice","code":"Set"},{"text":" type.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"title":"EntityType.set(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"array"},{"text":" type is used when a parameter’s type is a valid ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"type":"text","text":" type."}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","type":"topic"}}}