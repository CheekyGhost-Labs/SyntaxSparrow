{"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"array"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","isActive":true},{"type":"text","text":" type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SetDecl","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Set"},{"type":"text","text":" supports "},{"code":"isOptional","type":"codeVoice"},{"text":" to derive if the type has the optional\/","type":"text"},{"type":"codeVoice","code":"?"},{"type":"text","text":" suffix."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"type":"codeListing","syntax":"swift","code":["func example(names: Set<String>)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"would have a type of "},{"code":".set(Set)","type":"codeVoice"},{"text":" where the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","isActive":true,"type":"reference"},{"type":"text","text":" has the "},{"code":"elementType","type":"codeVoice"},{"type":"text","text":" of "},{"code":".simple(\"String\")","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"}],"metadata":{"modules":[{"name":"SyntaxSparrow"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"set","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","kind":"typeIdentifier","text":"SetDecl"},{"text":")","kind":"text"}],"title":"EntityType.set(_:)","role":"symbol","externalID":"s:13SyntaxSparrow10EntityTypeO3setyAcA7SetDeclVcACmF","symbolKind":"case","roleHeading":"Case"},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"variants":[{"paths":["\/documentation\/syntaxsparrow\/entitytype\/set(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/set(_:)":{"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/set(_:)","abstract":[{"type":"text","text":"A "},{"code":"array","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl","type":"reference","isActive":true},{"type":"text","text":" type."}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/set(_:)","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"set"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow7SetDeclV","text":"SetDecl"},{"text":")","kind":"text"}],"title":"EntityType.set(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SetDecl":{"abstract":[{"text":"Represents a Swift ","type":"text"},{"type":"codeVoice","code":"Set"},{"text":" type.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SetDecl","kind":"identifier"}],"title":"SetDecl","navigatorTitle":[{"kind":"identifier","text":"SetDecl"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/setdecl","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SetDecl"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type can’t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"topic","title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]}}}