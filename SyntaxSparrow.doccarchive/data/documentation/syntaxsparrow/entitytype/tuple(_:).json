{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"kind":"symbol","metadata":{"title":"EntityType.tuple(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"tuple"},{"text":"(","kind":"text"},{"text":"Tuple","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5TupleV"},{"text":")","kind":"text"}],"role":"symbol","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow10EntityTypeO5tupleyAcA5TupleVcACmF","symbolKind":"case","roleHeading":"Case"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)"]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"tuple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Tuple","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5TupleV"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"Tuple"},{"text":" type supports ","type":"text"},{"type":"codeVoice","code":"isOptional"},{"type":"text","text":" to derive if the type has the optional\/"},{"code":"?","type":"codeVoice"},{"text":" suffix.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"syntax":"swift","code":["func example(withPerson person: (name: String, age: Int)) { ... }"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would have a type of "},{"code":".tuple(Tuple)","type":"codeVoice"},{"type":"text","text":" where the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"reference"},{"type":"text","text":" has "},{"type":"codeVoice","code":"Parameter"},{"text":"arguments with types ","type":"text"},{"type":"codeVoice","code":".simple(\"String\"), .simple(\"Int\")"}]}]}],"sections":[],"abstract":[{"text":"A ","type":"text"},{"code":"tuple","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","isActive":true},{"type":"text","text":" type."}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"navigatorTitle":[{"text":"Tuple","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","kind":"symbol","title":"Tuple","abstract":[{"type":"text","text":"Represents a Swift tuple."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Tuple","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/tuple","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/tuple(_:)":{"title":"EntityType.tuple(_:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tuple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Tuple","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow5TupleV"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/tuple(_:)","abstract":[{"type":"text","text":"A "},{"code":"tuple","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type is a valid "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple"},{"text":" type.","type":"text"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]}}}