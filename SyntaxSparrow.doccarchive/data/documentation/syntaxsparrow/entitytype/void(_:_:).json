{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"]]},"sections":[],"kind":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"void","type":"codeVoice"},{"type":"text","text":" type is used when a parameter’s type resolves to "},{"type":"codeVoice","code":"Void"},{"type":"text","text":". It includes the raw declaration ("},{"type":"codeVoice","code":"\"Void\""},{"text":" or ","type":"text"},{"code":"\"()\"","type":"codeVoice"},{"text":") includes if the type is optional.","type":"text"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)","interfaceLanguage":"swift"},"metadata":{"title":"EntityType.void(_:_:)","role":"symbol","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow10EntityTypeO4voidyACSS_SbtcACmF","symbolKind":"case","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"void"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":")","kind":"text"}],"roleHeading":"Case"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"void","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"type":"codeListing","syntax":"swift","code":["func example(_ handler: ()) { ... }","func example(_ handler: Void) { ... }","func example(_ handler: () -> Void) { ... }"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The first function would have a parameter with the type "},{"type":"codeVoice","code":".void"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The second function would have a parameter with the type ","type":"text"},{"type":"codeVoice","code":".void"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The third function would have a parameter with the type ","type":"text"},{"type":"codeVoice","code":".closure(Closure)"},{"text":" where the closure input and output are both ","type":"text"},{"code":".void","type":"codeVoice"}]}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/entitytype\/void(_:_:)"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/void(_:_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"void","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":")","kind":"text"}],"title":"EntityType.void(_:_:)","role":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/void(_:_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/void(_:_:)","abstract":[{"type":"text","text":"A "},{"code":"void","type":"codeVoice"},{"text":" type is used when a parameter’s type resolves to ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":". It includes the raw declaration (","type":"text"},{"code":"\"Void\"","type":"codeVoice"},{"type":"text","text":" or "},{"code":"\"()\"","type":"codeVoice"},{"text":") includes if the type is optional.","type":"text"}],"kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","title":"EntityType","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","role":"symbol","title":"EntityType.simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type can’t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"type":"codeVoice","code":"CVarArg"},{"text":" is not currently supported so it will use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]}}}