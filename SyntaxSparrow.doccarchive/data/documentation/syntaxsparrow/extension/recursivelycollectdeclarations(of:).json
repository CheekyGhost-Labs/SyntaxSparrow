{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/SyntaxChildCollecting-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/extension\/recursivelycollectdeclarations(of:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":".Type) -> ["},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"]","kind":"text"}],"modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Method","externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow9ExtensionV","extendedModule":"SyntaxSparrow","symbolKind":"method","role":"symbol","title":"recursivelyCollectDeclarations(of:)"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/recursivelyCollectDeclarations(of:)"},"sections":[],"abstract":[{"text":"Will recursively iterate through the collected declarations ","type":"text"},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"type":"text","text":" for the given type and return them in a flattened array."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","kind":"typeIdentifier","text":"Declaration"}]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The type to collect","type":"text"}]}]}]},{"content":[{"text":"Return Value","type":"heading","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"Array of the inferred "},{"code":"Declaration","type":"codeVoice"},{"text":" type","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Note: Declarations are returned ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"in order of declaration"}]}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example,"}],"type":"paragraph"},{"type":"codeListing","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If you invoke the ","type":"text"},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"text":" helper on the root ","type":"text"},{"type":"codeVoice","code":"SyntaxTree"},{"text":" instance would return:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<RootLevelStruct>"},{"text":"]","type":"text"},{"type":"text","text":" "},{"text":"if you invoke the helper on the ","type":"text"},{"type":"codeVoice","code":"tree.enumerations[0]"},{"text":" instance would return:","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"type":"text","text":"]"}]}]}],"type":"unorderedList"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension":{"abstract":[{"type":"text","text":"Represents a Swift extension declaration."}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/extension","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Extension","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension","title":"Extension","navigatorTitle":[{"kind":"identifier","text":"Extension"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"kind":"symbol","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"type":"topic","title":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension/SyntaxChildCollecting-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/SyntaxChildCollecting-Implementations","abstract":[],"role":"collectionGroup","type":"topic","title":"SyntaxChildCollecting Implementations","kind":"article","url":"\/documentation\/syntaxsparrow\/extension\/syntaxchildcollecting-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension/recursivelyCollectDeclarations(of:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"text":" for the given type and return them in a flattened array.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/extension\/recursivelycollectdeclarations(of:)","kind":"symbol","title":"recursivelyCollectDeclarations(of:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/recursivelyCollectDeclarations(of:)"}}}