{"sections":[],"metadata":{"extendedModule":"SyntaxSparrow","title":"recursivelyCollectDeclarations(of:)","externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow9ExtensionV","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/SyntaxChildCollecting-Implementations"]]},"variants":[{"paths":["\/documentation\/syntaxsparrow\/extension\/recursivelycollectdeclarations(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/recursivelyCollectDeclarations(of:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"] ","kind":"text"},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","kind":"typeIdentifier","text":"Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The type to collect"}],"type":"paragraph"}],"name":"type"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Array of the inferred "},{"code":"Declaration","type":"codeVoice"},{"text":" type","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: Declarations are returned "},{"inlineContent":[{"type":"text","text":"in order of declaration"}],"type":"strong"}]},{"inlineContent":[{"text":"For example,","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"type":"codeListing"},{"inlineContent":[{"text":"If you invoke the ","type":"text"},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"text":" helper on the root ","type":"text"},{"type":"codeVoice","code":"SyntaxTree"},{"type":"text","text":" instance would return:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"[","type":"text"},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"text":", ","type":"text"},{"code":"Structure<RootLevelStruct>","type":"codeVoice"},{"type":"text","text":"]"},{"text":" ","type":"text"},{"type":"text","text":"if you invoke the helper on the "},{"type":"codeVoice","code":"tree.enumerations[0]"},{"type":"text","text":" instance would return:"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"[","type":"text"},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"text":"]","type":"text"}],"type":"paragraph"}]}]}]}],"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"text":"on the current declaration","type":"text"}]},{"type":"text","text":" for the given type and return them in a flattened array."}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension":{"title":"Extension","role":"symbol","url":"\/documentation\/syntaxsparrow\/extension","abstract":[{"type":"text","text":"Represents a Swift extension declaration."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Extension","kind":"identifier"}],"navigatorTitle":[{"text":"Extension","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension/SyntaxChildCollecting-Implementations":{"abstract":[],"role":"collectionGroup","title":"SyntaxChildCollecting Implementations","type":"topic","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/SyntaxChildCollecting-Implementations","url":"\/documentation\/syntaxsparrow\/extension\/syntaxchildcollecting-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Extension/recursivelyCollectDeclarations(of:)":{"url":"\/documentation\/syntaxsparrow\/extension\/recursivelycollectdeclarations(of:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Extension\/recursivelyCollectDeclarations(of:)","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"type":"text","text":"on the current declaration"}]},{"text":" for the given type and return them in a flattened array.","type":"text"}],"title":"recursivelyCollectDeclarations(of:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> ["},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"]","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"title":"Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration","abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"kind":"identifier","text":"Declaration"}],"kind":"symbol","type":"topic"}}}