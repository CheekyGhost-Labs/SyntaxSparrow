{"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"The function output type, if any."},{"type":"text","text":" "},{"text":"This is the return type of the function.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function\/Signature-swift.struct"]]},"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"output","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"},{"text":"?","kind":"text"}],"modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow8FunctionV9SignatureV6outputAA10EntityTypeOSgvp","title":"output","role":"symbol","roleHeading":"Instance Property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/output"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"output"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function\/Signature-swift.struct\/output"},"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Function/Signature-swift.struct":{"type":"topic","role":"symbol","abstract":[{"text":"Struct representing a function signature.","type":"text"}],"title":"Function.Signature","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signature"}],"navigatorTitle":[{"text":"Signature","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function\/Signature-swift.struct"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Function":{"url":"\/documentation\/syntaxsparrow\/function","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Function","kind":"identifier"}],"title":"Function","abstract":[{"type":"text","text":"Represents a Swift function declaration."}],"navigatorTitle":[{"text":"Function","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Function/Signature-swift.struct/output":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"output"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType"},{"kind":"text","text":"?"}],"url":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/output","kind":"symbol","title":"output","role":"symbol","abstract":[{"text":"The function output type, if any.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This is the return type of the function."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Function\/Signature-swift.struct\/output","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"}}}