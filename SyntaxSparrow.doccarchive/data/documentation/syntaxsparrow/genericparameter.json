{"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenericParameter","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A generic type or function declaration includes a "},{"type":"codeVoice","code":"generic parameter clause"},{"type":"text","text":" which is composed of one or more parameters enclosed"},{"text":" ","type":"text"},{"type":"text","text":"by angle brackets: "},{"code":"<>","type":"codeVoice"},{"type":"text","text":". Each generic parameter has a name, but may also specify a type constraint."},{"text":" ","type":"text"},{"text":"For example, the following declaration has two generic parameters:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct MyStruct<T, U: Equatable>"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The first parameter is named "},{"type":"codeVoice","code":"\"T\""},{"type":"text","text":" with a "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" type."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The second parameter is named ","type":"text"},{"code":"\"U\"","type":"codeVoice"},{"text":" with a type constraint of ","type":"text"},{"code":"\"Equatable\"","type":"codeVoice"}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/genericparameter"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"symbolKind":"struct","roleHeading":"Structure","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"GenericParameter","kind":"identifier"}],"externalID":"s:13SyntaxSparrow16GenericParameterV","title":"GenericParameter","navigatorTitle":[{"text":"GenericParameter","kind":"identifier"}],"role":"symbol"},"sections":[],"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/init(node:)"],"title":"Initializers"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/type"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/fromParameterList(from:)"],"title":"Type Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Hashable-Implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter"},"abstract":[{"type":"text","text":"Class representing a "},{"code":"GenericParameter","type":"codeVoice"},{"text":" from a declaration.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DeclarationComponent","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"DeclarationComponent","navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}],"abstract":[{"type":"text","text":"Public protocol that any semantic elements not considered a declaration will conform to."},{"type":"text","text":" "},{"type":"text","text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","url":"\/documentation\/syntaxsparrow\/declarationcomponent"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/attributes":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"attributes"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow9AttributeV","text":"Attribute","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol","title":"attributes","abstract":[{"type":"text","text":"The generic parameter attributes."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/attributes","url":"\/documentation\/syntaxsparrow\/genericparameter\/attributes"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/Equatable-Implementations":{"kind":"article","role":"collectionGroup","title":"Equatable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Equatable-Implementations","url":"\/documentation\/syntaxsparrow\/genericparameter\/equatable-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/type":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","title":"type","abstract":[{"type":"text","text":"The generic parameter type, if any."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/type","url":"\/documentation\/syntaxsparrow\/genericparameter\/type"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/fromParameterList(from:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromParameterList","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax020GenericParameterListB0V","text":"GenericParameterListSyntax","kind":"typeIdentifier"},{"text":"?) -> [","kind":"text"},{"text":"GenericParameter","preciseIdentifier":"s:13SyntaxSparrow16GenericParameterV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","title":"fromParameterList(from:)","abstract":[{"type":"text","text":"Creates an array of "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter","isActive":true},{"type":"text","text":" instances from a "},{"code":"GenericParameterListSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/fromParameterList(from:)","url":"\/documentation\/syntaxsparrow\/genericparameter\/fromparameterlist(from:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/node":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"GenericParameterSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016GenericParameterB0V"}],"kind":"symbol","role":"symbol","title":"node","abstract":[{"text":"The raw syntax node being represented by the instance.","type":"text"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/node","url":"\/documentation\/syntaxsparrow\/genericparameter\/node"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ","type":"unresolvable"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericParameter"}],"kind":"symbol","role":"symbol","title":"GenericParameter","navigatorTitle":[{"text":"GenericParameter","kind":"identifier"}],"abstract":[{"text":"Class representing a ","type":"text"},{"code":"GenericParameter","type":"codeVoice"},{"type":"text","text":" from a declaration."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter","type":"topic","url":"\/documentation\/syntaxsparrow\/genericparameter"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/name":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"kind":"symbol","role":"symbol","title":"name","abstract":[{"type":"text","text":"The generic parameter name."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/name","url":"\/documentation\/syntaxsparrow\/genericparameter\/name"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/init(node:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016GenericParameterB0V","kind":"typeIdentifier","text":"GenericParameterSyntax"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","title":"init(node:)","abstract":[{"type":"text","text":"Creates a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"GenericParameterSyntax"},{"text":" node.","type":"text"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/init(node:)","url":"\/documentation\/syntaxsparrow\/genericparameter\/init(node:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/CustomStringConvertible-Implementations":{"kind":"article","role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/syntaxsparrow\/genericparameter\/customstringconvertible-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}],"kind":"symbol","role":"symbol","title":"SyntaxRepresenting","navigatorTitle":[{"text":"SyntaxRepresenting","kind":"identifier"}],"abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/Hashable-Implementations":{"kind":"article","role":"collectionGroup","title":"Hashable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Hashable-Implementations","url":"\/documentation\/syntaxsparrow\/genericparameter\/hashable-implementations"}}}