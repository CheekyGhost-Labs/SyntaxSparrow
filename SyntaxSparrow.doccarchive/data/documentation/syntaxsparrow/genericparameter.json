{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/syntaxsparrow\/genericparameter"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/init(node:)"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/type"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/fromParameterList(from:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","kind":"relationships"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter"},"kind":"symbol","sections":[],"metadata":{"externalID":"s:13SyntaxSparrow16GenericParameterV","role":"symbol","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"struct","navigatorTitle":[{"text":"GenericParameter","kind":"identifier"}],"roleHeading":"Structure","title":"GenericParameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericParameter"}]},"abstract":[{"type":"text","text":"Class representing a "},{"type":"codeVoice","code":"GenericParameter"},{"type":"text","text":" from a declaration."}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenericParameter","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A generic type or function declaration includes a "},{"type":"codeVoice","code":"generic parameter clause"},{"type":"text","text":" which is composed of one or more parameters enclosed"},{"text":" ","type":"text"},{"type":"text","text":"by angle brackets: "},{"type":"codeVoice","code":"<>"},{"type":"text","text":". Each generic parameter has a name, but may also specify a type constraint."},{"type":"text","text":" "},{"type":"text","text":"For example, the following declaration has two generic parameters:"}]},{"syntax":"swift","code":["struct MyStruct<T, U: Equatable>"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"The first parameter is named ","type":"text"},{"code":"\"T\"","type":"codeVoice"},{"text":" with a ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" type."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The second parameter is named "},{"type":"codeVoice","code":"\"U\""},{"text":" with a type constraint of ","type":"text"},{"type":"codeVoice","code":"\"Equatable\""}],"type":"paragraph"}]}]}],"kind":"content"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/Equatable-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Equatable-Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/syntaxsparrow\/genericparameter\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericparameter","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"GenericParameter","kind":"identifier"}],"abstract":[{"text":"Class representing a ","type":"text"},{"type":"codeVoice","code":"GenericParameter"},{"type":"text","text":" from a declaration."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter","type":"topic","navigatorTitle":[{"text":"GenericParameter","kind":"identifier"}],"title":"GenericParameter","role":"symbol"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/Hashable-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/syntaxsparrow\/genericparameter\/hashable-implementations","title":"Hashable Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/Hashable-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/CustomStringConvertible-Implementations":{"type":"topic","kind":"article","abstract":[],"title":"CustomStringConvertible Implementations","url":"\/documentation\/syntaxsparrow\/genericparameter\/customstringconvertible-implementations","role":"collectionGroup","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/CustomStringConvertible-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/attributes":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The generic parameter attributes."}],"title":"attributes","url":"\/documentation\/syntaxsparrow\/genericparameter\/attributes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"attributes"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Attribute","preciseIdentifier":"s:13SyntaxSparrow9AttributeV"},{"kind":"text","text":"]"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/attributes"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/node":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016GenericParameterB0V","kind":"typeIdentifier","text":"GenericParameterSyntax"}],"title":"node","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}],"url":"\/documentation\/syntaxsparrow\/genericparameter\/node","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/node"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","role":"symbol","title":"DeclarationComponent","kind":"symbol","url":"\/documentation\/syntaxsparrow\/declarationcomponent","type":"topic","abstract":[{"text":"Public protocol that any semantic elements not considered a declaration will conform to.","type":"text"},{"text":" ","type":"text"},{"text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeclarationComponent"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/init(node:)":{"url":"\/documentation\/syntaxsparrow\/genericparameter\/init(node:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016GenericParameterB0V","text":"GenericParameterSyntax","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/init(node:)","title":"init(node:)","abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter","isActive":true},{"type":"text","text":" instance from an "},{"code":"GenericParameterSyntax","type":"codeVoice"},{"type":"text","text":" node."}]},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/fromParameterList(from:)":{"url":"\/documentation\/syntaxsparrow\/genericparameter\/fromparameterlist(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"fromParameterList"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax020GenericParameterListB0V","text":"GenericParameterListSyntax"},{"kind":"text","text":"?) -> ["},{"kind":"typeIdentifier","text":"GenericParameter","preciseIdentifier":"s:13SyntaxSparrow16GenericParameterV"},{"text":"]","kind":"text"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/fromParameterList(from:)","title":"fromParameterList(from:)","abstract":[{"type":"text","text":"Creates an array of "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter","type":"reference"},{"type":"text","text":" instances from a "},{"type":"codeVoice","code":"GenericParameterListSyntax"},{"type":"text","text":" node."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"navigatorTitle":[{"text":"SyntaxRepresenting","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxRepresenting","kind":"identifier"}],"title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","abstract":[],"kind":"symbol"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/type":{"type":"topic","kind":"symbol","abstract":[{"text":"The generic parameter type, if any.","type":"text"}],"title":"type","url":"\/documentation\/syntaxsparrow\/genericparameter\/type","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/type"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericParameter/name":{"type":"topic","kind":"symbol","abstract":[{"text":"The generic parameter name.","type":"text"}],"title":"name","url":"\/documentation\/syntaxsparrow\/genericparameter\/name","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericParameter\/name"}}}