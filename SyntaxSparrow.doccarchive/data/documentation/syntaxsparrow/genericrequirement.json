{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericRequirement"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A generic type ofr function can specify one or more requirements as part of a "},{"code":"generic where clause","type":"codeVoice"},{"text":" before the opening curly brace ","type":"text"},{"code":"{","type":"codeVoice"},{"type":"text","text":" of itâ€™s"},{"type":"text","text":" "},{"type":"text","text":"body."},{"type":"text","text":" "},{"text":"Each generic requirement establishes a relation between two type identifiers.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, in the following declaration, two generic requirements are defined:","type":"text"}]},{"type":"codeListing","code":["func difference<C1: Collection, C3: Collection>(between lhs: C1, and rhs: C2) -> [C1.Element]","    where C1.Element: Equatable, C1.Element == C2.Element { ... }"],"syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The first requirement defines a ","type":"text"},{"type":"codeVoice","code":"conformance"},{"type":"text","text":" relation between the types identified in "},{"code":"C1.Element","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Equatable","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The first requirement defines a ","type":"text"},{"type":"codeVoice","code":"sameType"},{"type":"text","text":" relation between the types identified in "},{"code":"C1.Element","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"C2.Element"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"A requirement may also be a "},{"code":"layout","type":"codeVoice"},{"type":"text","text":" relation, which specifies a constraint on the memory layout of an associated type."},{"type":"text","text":" "},{"text":"For example, the following declaration defines a ","type":"text"},{"type":"codeVoice","code":"layout"},{"type":"text","text":" relation"}],"type":"paragraph"},{"code":["protocol P where Self: AnyObject {...}"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The layout relation defines an "},{"type":"codeVoice","code":"AnyObject"},{"type":"text","text":" constraint: Specifying that an associated type must be a class type."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" All "},{"code":"layout","type":"codeVoice"},{"text":" relation requirements will have a ","type":"text"},{"type":"codeVoice","code":"leftTypeIdentifier"},{"text":" of ","type":"text"},{"type":"codeVoice","code":"Self"},{"text":". While not explicitly defined in the requirement itself,","type":"text"},{"text":" ","type":"text"},{"text":"it is a","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"pre-requisite for the declaration."}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/genericrequirement"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","role":"symbol","roleHeading":"Structure","externalID":"s:13SyntaxSparrow18GenericRequirementV","navigatorTitle":[{"text":"GenericRequirement","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenericRequirement","kind":"identifier"}],"modules":[{"name":"SyntaxSparrow"}],"title":"GenericRequirement"},"abstract":[{"type":"text","text":"Class representing a generic requirement on a declaration."}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/leftTypeIdentifier","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/relation-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/rightTypeIdentifier"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/fromRequirementList(from:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Relation-swift.enum"],"title":"Enumerations"},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Hashable-Implementations"],"title":"Default Implementations","generated":true}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"title":"SyntaxRepresenting","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SyntaxRepresenting","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/genericrequirement\/equatable-implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"url":"\/documentation\/syntaxsparrow\/declarationcomponent","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"DeclarationComponent","kind":"identifier"}],"abstract":[{"type":"text","text":"Public protocol that any semantic elements not considered a declaration will conform to."},{"type":"text","text":" "},{"text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc","type":"text"}],"title":"DeclarationComponent","navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/init(node:)":{"url":"\/documentation\/syntaxsparrow\/genericrequirement\/init(node:)","kind":"symbol","role":"symbol","title":"init(node:)","abstract":[{"type":"text","text":"Creates a new "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","type":"reference","isActive":true},{"text":" instance from an ","type":"text"},{"type":"codeVoice","code":"GenericRequirementSyntax"},{"type":"text","text":" node."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"text":"GenericRequirementSyntax","preciseIdentifier":"s:11SwiftSyntax018GenericRequirementB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/init(node:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/CustomStringConvertible-Implementations":{"kind":"article","url":"\/documentation\/syntaxsparrow\/genericrequirement\/customstringconvertible-implementations","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/CustomStringConvertible-Implementations","role":"collectionGroup","abstract":[],"title":"CustomStringConvertible Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/fromRequirementList(from:)":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/fromrequirementlist(from:)","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/fromRequirementList(from:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromRequirementList","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"kind":"text","text":": "},{"text":"GenericRequirementListSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax022GenericRequirementListB0V"},{"kind":"text","text":"?) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow18GenericRequirementV","kind":"typeIdentifier","text":"GenericRequirement"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Creates and returns generic requirements initialized from a"},{"type":"text","text":" "},{"text":"generic requirement list syntax node.","type":"text"}],"title":"fromRequirementList(from:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/relation-swift.property":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.property","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/relation-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"relation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Relation","preciseIdentifier":"s:13SyntaxSparrow18GenericRequirementV8RelationO"}],"abstract":[{"text":"The relation between the two identified types.","type":"text"}],"title":"relation"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Relation-swift.enum":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Relation-swift.enum","abstract":[{"type":"text","text":"A relation between the two types identified"},{"type":"text","text":" "},{"text":"in the generic requirement.","type":"text"}],"title":"GenericRequirement.Relation","url":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum","navigatorTitle":[{"kind":"identifier","text":"Relation"}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Relation","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/leftTypeIdentifier":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/lefttypeidentifier","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/leftTypeIdentifier","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"leftTypeIdentifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"abstract":[{"text":"The identifier for the left-hand side type.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"type":"text","text":" When the relation is "},{"type":"codeVoice","code":".layout"},{"text":" the value will always be ","type":"text"},{"type":"codeVoice","code":"Self"},{"type":"text","text":". While this is accurate, it is worth noting that it is not directly"},{"text":" ","type":"text"},{"text":"declared in he requirement","type":"text"}],"title":"leftTypeIdentifier"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/node":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/node","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/node","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"text":": ","kind":"text"},{"text":"GenericRequirementSyntax","preciseIdentifier":"s:11SwiftSyntax018GenericRequirementB0V","kind":"typeIdentifier"}],"abstract":[{"text":"The raw syntax node being represented by the instance.","type":"text"}],"title":"node"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Hashable-Implementations":{"kind":"article","url":"\/documentation\/syntaxsparrow\/genericrequirement\/hashable-implementations","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Hashable-Implementations","role":"collectionGroup","abstract":[],"title":"Hashable Implementations"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"GenericRequirement","kind":"identifier"}],"title":"GenericRequirement","url":"\/documentation\/syntaxsparrow\/genericrequirement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"GenericRequirement"}],"abstract":[{"type":"text","text":"Class representing a generic requirement on a declaration."}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/rightTypeIdentifier":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/righttypeidentifier","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/rightTypeIdentifier","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rightTypeIdentifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"abstract":[{"text":"The identifier for the right-hand side type.","type":"text"}],"title":"rightTypeIdentifier"}}}