{"abstract":[{"text":"Class representing a generic requirement on a declaration.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenericRequirement","kind":"identifier"}]}]},{"content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"A generic type ofr function can specify one or more requirements as part of a ","type":"text"},{"code":"generic where clause","type":"codeVoice"},{"type":"text","text":" before the opening curly brace "},{"type":"codeVoice","code":"{"},{"type":"text","text":" of itâ€™s"},{"text":" ","type":"text"},{"type":"text","text":"body."},{"type":"text","text":" "},{"type":"text","text":"Each generic requirement establishes a relation between two type identifiers."}]},{"type":"paragraph","inlineContent":[{"text":"For example, in the following declaration, two generic requirements are defined:","type":"text"}]},{"code":["func difference<C1: Collection, C3: Collection>(between lhs: C1, and rhs: C2) -> [C1.Element]","    where C1.Element: Equatable, C1.Element == C2.Element { ... }"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The first requirement defines a "},{"type":"codeVoice","code":"conformance"},{"type":"text","text":" relation between the types identified in "},{"type":"codeVoice","code":"C1.Element"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Equatable"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The first requirement defines a ","type":"text"},{"type":"codeVoice","code":"sameType"},{"type":"text","text":" relation between the types identified in "},{"type":"codeVoice","code":"C1.Element"},{"text":" and ","type":"text"},{"code":"C2.Element","type":"codeVoice"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A requirement may also be a "},{"type":"codeVoice","code":"layout"},{"text":" relation, which specifies a constraint on the memory layout of an associated type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example, the following declaration defines a "},{"type":"codeVoice","code":"layout"},{"text":" relation","type":"text"}]},{"code":["protocol P where Self: AnyObject {...}"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The layout relation defines an ","type":"text"},{"type":"codeVoice","code":"AnyObject"},{"text":" constraint: Specifying that an associated type must be a class type.","type":"text"},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" All "},{"type":"codeVoice","code":"layout"},{"text":" relation requirements will have a ","type":"text"},{"code":"leftTypeIdentifier","type":"codeVoice"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Self"},{"type":"text","text":". While not explicitly defined in the requirement itself,"},{"text":" ","type":"text"},{"type":"text","text":"it is a"},{"text":" ","type":"text"},{"type":"text","text":"pre-requisite for the declaration."}]}]}],"type":"unorderedList"}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/genericrequirement"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/init(node:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/leftTypeIdentifier","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/relation-swift.property","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/rightTypeIdentifier"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/fromRequirementList(from:)"],"title":"Type Methods"},{"title":"Enumerations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Relation-swift.enum"]},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/CustomStringConvertible-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Hashable-Implementations"],"generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"sections":[],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"GenericRequirement"}],"symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"GenericRequirement"}],"externalID":"s:13SyntaxSparrow18GenericRequirementV","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","title":"GenericRequirement","roleHeading":"Structure"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Hashable-Implementations":{"kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Hashable-Implementations","type":"topic","url":"\/documentation\/syntaxsparrow\/genericrequirement\/hashable-implementations","role":"collectionGroup","title":"Hashable Implementations","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxRepresenting":{"url":"\/documentation\/syntaxsparrow\/syntaxrepresenting","title":"SyntaxRepresenting","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxRepresenting","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SyntaxRepresenting"}],"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxRepresenting"}]},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","type":"unresolvable","title":"Swift.CustomStringConvertible"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/node":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":": "},{"text":"GenericRequirementSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax018GenericRequirementB0V"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/node","type":"topic","url":"\/documentation\/syntaxsparrow\/genericrequirement\/node","role":"symbol","title":"node","abstract":[{"type":"text","text":"The raw syntax node being represented by the instance."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/DeclarationComponent":{"title":"DeclarationComponent","navigatorTitle":[{"kind":"identifier","text":"DeclarationComponent"}],"url":"\/documentation\/syntaxsparrow\/declarationcomponent","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/DeclarationComponent","abstract":[{"text":"Public protocol that any semantic elements not considered a declaration will conform to.","type":"text"},{"type":"text","text":" "},{"text":"A declaration component is considered a semantic element that supports or decorates a declaration such as attributes, modifiers, generic parameter\/requirement, parameters, etc","type":"text"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeclarationComponent","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/init(node:)":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/init(node:)","kind":"symbol","url":"\/documentation\/syntaxsparrow\/genericrequirement\/init(node:)","abstract":[{"type":"text","text":"Creates a new "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","isActive":true,"type":"reference"},{"text":" instance from an ","type":"text"},{"type":"codeVoice","code":"GenericRequirementSyntax"},{"text":" node.","type":"text"}],"title":"init(node:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax018GenericRequirementB0V","text":"GenericRequirementSyntax","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Equatable-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/genericrequirement\/equatable-implementations","title":"Equatable Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/leftTypeIdentifier":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"leftTypeIdentifier","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/leftTypeIdentifier","url":"\/documentation\/syntaxsparrow\/genericrequirement\/lefttypeidentifier","type":"topic","role":"symbol","title":"leftTypeIdentifier","abstract":[{"type":"text","text":"The identifier for the left-hand side type."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" When the relation is ","type":"text"},{"code":".layout","type":"codeVoice"},{"type":"text","text":" the value will always be "},{"type":"codeVoice","code":"Self"},{"type":"text","text":". While this is accurate, it is worth noting that it is not directly"},{"type":"text","text":" "},{"type":"text","text":"declared in he requirement"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Relation-swift.enum":{"role":"symbol","type":"topic","kind":"symbol","title":"GenericRequirement.Relation","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Relation-swift.enum","abstract":[{"text":"A relation between the two types identified","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"in the generic requirement."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"Relation","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum","navigatorTitle":[{"kind":"identifier","text":"Relation"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/CustomStringConvertible-Implementations":{"kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/CustomStringConvertible-Implementations","type":"topic","url":"\/documentation\/syntaxsparrow\/genericrequirement\/customstringconvertible-implementations","role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/fromRequirementList(from:)":{"url":"\/documentation\/syntaxsparrow\/genericrequirement\/fromrequirementlist(from:)","role":"symbol","title":"fromRequirementList(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromRequirementList"},{"kind":"text","text":"("},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"GenericRequirementListSyntax","preciseIdentifier":"s:11SwiftSyntax022GenericRequirementListB0V"},{"kind":"text","text":"?) -> ["},{"text":"GenericRequirement","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow18GenericRequirementV"},{"text":"]","kind":"text"}],"abstract":[{"text":"Creates and returns generic requirements initialized from a","type":"text"},{"text":" ","type":"text"},{"text":"generic requirement list syntax node.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/fromRequirementList(from:)","kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/relation-swift.property":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"relation","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow18GenericRequirementV8RelationO","text":"Relation","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/relation-swift.property","url":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.property","type":"topic","role":"symbol","title":"relation","abstract":[{"type":"text","text":"The relation between the two identified types."}]},"doc://SyntaxSparrow/SH":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement":{"url":"\/documentation\/syntaxsparrow\/genericrequirement","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","role":"symbol","abstract":[{"type":"text","text":"Class representing a generic requirement on a declaration."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericRequirement"}],"title":"GenericRequirement","navigatorTitle":[{"text":"GenericRequirement","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/rightTypeIdentifier":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"rightTypeIdentifier","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/rightTypeIdentifier","url":"\/documentation\/syntaxsparrow\/genericrequirement\/righttypeidentifier","type":"topic","role":"symbol","title":"rightTypeIdentifier","abstract":[{"type":"text","text":"The identifier for the right-hand side type."}]},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable"}}}