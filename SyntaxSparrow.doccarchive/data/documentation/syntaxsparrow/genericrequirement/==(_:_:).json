{"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/genericrequirement\/==(_:_:)"]}],"metadata":{"symbolKind":"op","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"extendedModule":"SyntaxSparrow","title":"==(_:_:)","role":"symbol","roleHeading":"Operator","externalID":"s:13SyntaxSparrow0A12RepresentingPAAE2eeoiySbx_xtFZ::SYNTHESIZED::s:13SyntaxSparrow18GenericRequirementV","modules":[{"name":"SyntaxSparrow"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"lhs","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":", ","kind":"text"},{"text":"rhs","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"platforms":["macOS"]}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/==(_:_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"Equatable.==(_:_:)"},{"text":".","type":"text"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/Equatable-Implementations":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/Equatable-Implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations","url":"\/documentation\/syntaxsparrow\/genericrequirement\/equatable-implementations","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement":{"title":"GenericRequirement","type":"topic","url":"\/documentation\/syntaxsparrow\/genericrequirement","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement","role":"symbol","navigatorTitle":[{"text":"GenericRequirement","kind":"identifier"}],"abstract":[{"text":"Class representing a generic requirement on a declaration.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GenericRequirement","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/GenericRequirement/==(_:_:)":{"role":"symbol","abstract":[],"kind":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"=="},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/genericrequirement\/==(_:_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/GenericRequirement\/==(_:_:)"}}}