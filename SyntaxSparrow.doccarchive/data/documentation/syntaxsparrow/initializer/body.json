{"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body"},"sections":[],"abstract":[{"type":"text","text":"Struct representing the body of the function."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV","text":"CodeBlock","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"For example in the following declaration:"}],"type":"paragraph"},{"type":"codeListing","code":["init() {","    print(\"hello\")","    print(\"world\")","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"would provide a ","type":"text"},{"type":"codeVoice","code":"body"},{"type":"text","text":" that is not "},{"type":"codeVoice","code":"nil"},{"text":" and would have 2 statements within it.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/initializer\/body"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV","text":"CodeBlock"},{"kind":"text","text":"?"}],"title":"body","externalID":"s:13SyntaxSparrow11InitializerV4bodyAA9CodeBlockVSgvp","symbolKind":"property"},"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer/body":{"title":"body","type":"topic","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body","url":"\/documentation\/syntaxsparrow\/initializer\/body","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV","text":"CodeBlock"},{"kind":"text","text":"?"}],"kind":"symbol","abstract":[{"type":"text","text":"Struct representing the body of the function."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","title":"CodeBlock","abstract":[{"type":"text","text":"Represents the swift code block element "},{"type":"codeVoice","code":"CodeBlockSyntax"},{"text":".","type":"text"}],"url":"\/documentation\/syntaxsparrow\/codeblock","kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodeBlock"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CodeBlock","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"title":"Initializer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Initializer"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/initializer","abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Initializer","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer"}}}