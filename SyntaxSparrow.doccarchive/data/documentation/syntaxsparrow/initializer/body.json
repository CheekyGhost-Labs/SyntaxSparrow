{"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"CodeBlock","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV"},{"kind":"text","text":"?"}],"title":"body","externalID":"s:13SyntaxSparrow11InitializerV4bodyAA9CodeBlockVSgvp","roleHeading":"Instance Property","symbolKind":"property","role":"symbol","modules":[{"name":"SyntaxSparrow"}]},"abstract":[{"type":"text","text":"Struct representing the body of the function."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","text":"CodeBlock","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV"},{"kind":"text","text":"? { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"For example in the following declaration:","type":"text"}]},{"code":["init() {","    print(\"hello\")","    print(\"world\")","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"would provide a "},{"code":"body","type":"codeVoice"},{"text":" that is not ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" and would have 2 statements within it.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/initializer\/body"]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer"]]},"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}],"url":"\/documentation\/syntaxsparrow\/initializer","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Initializer"}],"title":"Initializer","navigatorTitle":[{"text":"Initializer","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer/body":{"url":"\/documentation\/syntaxsparrow\/initializer\/body","title":"body","abstract":[{"text":"Struct representing the body of the function.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"CodeBlock","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV"},{"text":"?","kind":"text"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","role":"symbol","title":"CodeBlock","kind":"symbol","url":"\/documentation\/syntaxsparrow\/codeblock","type":"topic","abstract":[{"type":"text","text":"Represents the swift code block element "},{"type":"codeVoice","code":"CodeBlockSyntax"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CodeBlock","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CodeBlock","kind":"identifier"}]}}}