{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Instance Property","title":"body","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"body","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV","text":"CodeBlock"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:13SyntaxSparrow11InitializerV4bodyAA9CodeBlockVSgvp","symbolKind":"property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"body"},{"kind":"text","text":": "},{"text":"CodeBlock","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock"},{"text":"? { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"For example in the following declaration:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["init() {","    print(\"hello\")","    print(\"world\")","}"]},{"inlineContent":[{"type":"text","text":"would provide a "},{"code":"body","type":"codeVoice"},{"text":" that is not ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" and would have 2 statements within it.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/initializer\/body"]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Struct representing the body of the function."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer/body":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"text":": ","kind":"text"},{"text":"CodeBlock","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9CodeBlockV"},{"kind":"text","text":"?"}],"kind":"symbol","title":"body","url":"\/documentation\/syntaxsparrow\/initializer\/body","abstract":[{"type":"text","text":"Struct representing the body of the function."}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/body","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"url":"\/documentation\/syntaxsparrow\/initializer","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","title":"Initializer","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Initializer"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Initializer"}],"abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/CodeBlock":{"role":"symbol","url":"\/documentation\/syntaxsparrow\/codeblock","abstract":[{"text":"Represents the swift code block element ","type":"text"},{"code":"CodeBlockSyntax","type":"codeVoice"},{"text":".","type":"text"}],"title":"CodeBlock","kind":"symbol","navigatorTitle":[{"text":"CodeBlock","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/CodeBlock","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CodeBlock"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"}}}