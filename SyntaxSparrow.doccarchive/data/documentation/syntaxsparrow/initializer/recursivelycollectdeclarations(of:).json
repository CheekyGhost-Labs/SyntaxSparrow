{"sections":[],"metadata":{"extendedModule":"SyntaxSparrow","roleHeading":"Instance Method","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":".Type) -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T"},{"text":"]","kind":"text"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow11InitializerV","role":"symbol","symbolKind":"method","title":"recursivelyCollectDeclarations(of:)"},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/recursivelyCollectDeclarations(of:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"type":"text","text":" for the given type and return them in a flattened array."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/initializer\/recursivelycollectdeclarations(of:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/SyntaxChildCollecting-Implementations"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","text":"T","kind":"typeIdentifier"},{"text":"] ","kind":"text"},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","text":"Declaration"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The type to collect","type":"text"}],"type":"paragraph"}],"name":"type"}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"inlineContent":[{"type":"text","text":"Array of the inferred "},{"type":"codeVoice","code":"Declaration"},{"text":" type","type":"text"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Note: Declarations are returned ","type":"text"},{"inlineContent":[{"type":"text","text":"in order of declaration"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"type":"codeListing","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you invoke the "},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"text":" helper on the root ","type":"text"},{"type":"codeVoice","code":"SyntaxTree"},{"text":" instance would return:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"type":"text","text":", "},{"code":"Structure<RootLevelStruct>","type":"codeVoice"},{"type":"text","text":"]"},{"text":" ","type":"text"},{"type":"text","text":"if you invoke the helper on the "},{"type":"codeVoice","code":"tree.enumerations[0]"},{"type":"text","text":" instance would return:"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"[","type":"text"},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"text":", ","type":"text"},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"text":"]","type":"text"}],"type":"paragraph"}]}]}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"title":"Declaration","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","url":"\/documentation\/syntaxsparrow\/declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer/SyntaxChildCollecting-Implementations":{"kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/SyntaxChildCollecting-Implementations","role":"collectionGroup","abstract":[],"type":"topic","title":"SyntaxChildCollecting Implementations","url":"\/documentation\/syntaxsparrow\/initializer\/syntaxchildcollecting-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer/recursivelyCollectDeclarations(of:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer\/recursivelyCollectDeclarations(of:)","url":"\/documentation\/syntaxsparrow\/initializer\/recursivelycollectdeclarations(of:)","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"inlineContent":[{"text":"on the current declaration","type":"text"}],"type":"strong"},{"text":" for the given type and return them in a flattened array.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":".Type) -> [","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":"]","kind":"text"}],"title":"recursivelyCollectDeclarations(of:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Initializer":{"title":"Initializer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Initializer"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/initializer","abstract":[{"type":"text","text":"Represents a Swift initializer declaration."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Initializer","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Initializer"}}}