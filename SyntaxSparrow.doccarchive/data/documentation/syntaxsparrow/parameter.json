{"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"title":"Conforms To"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Parameter","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"A parameter is a variable in a method or function definition that accepts input from the caller of the method or function. In Swift, function"},{"text":" ","type":"text"},{"type":"text","text":"parameters can have a"},{"type":"text","text":" "},{"type":"text","text":"variety of attributes, including labels, types, default values, and special attributes like "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"An instance of the ","type":"text"},{"type":"codeVoice","code":"Parameter"},{"text":" struct provides access to:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"The parameterâ€™s attributes, name(s), type, and raw type.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Whether the parameter accepts a variadic argument or is optional.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the parameter is marked with "},{"type":"codeVoice","code":"inout"},{"text":" or its label is omitted.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The default argument of the parameter, if any."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"A parameter has common properties, and then a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" property which further describes the input by including associated"},{"type":"text","text":" "},{"type":"text","text":"properties as needed."},{"type":"text","text":" "},{"text":"For example, a parameter with the type","type":"text"},{"code":".closure","type":"codeVoice"},{"type":"text","text":" will have a "},{"code":"Closure","type":"codeVoice"},{"type":"text","text":" provided, where as a parameter with the "},{"type":"codeVoice","code":".tuple"},{"type":"text","text":" type will have a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple"},{"type":"text","text":" associated properties."}],"type":"paragraph"},{"inlineContent":[{"text":"This struct also includes functionality to create a ","type":"text"},{"type":"codeVoice","code":"Parameter"},{"text":" instance from either a ","type":"text"},{"code":"FunctionParameterSyntax","type":"codeVoice"},{"text":" node or a","type":"text"},{"type":"text","text":" "},{"code":"TupleTypeElementSyntax","type":"codeVoice"},{"type":"text","text":" node."}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"topicSections":[{"title":"Operators","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)"],"title":"Instance Methods"},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations"]}],"metadata":{"title":"Parameter","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","roleHeading":"Structure","symbolKind":"struct","externalID":"s:13SyntaxSparrow9ParameterV","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parameter","kind":"identifier"}],"navigatorTitle":[{"text":"Parameter","kind":"identifier"}]},"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/attributes":{"title":"attributes","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"attributes","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow9AttributeV","text":"Attribute","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","url":"\/documentation\/syntaxsparrow\/parameter\/attributes","type":"topic","abstract":[{"type":"text","text":"Array of attributes found in the declaration."}],"kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isVariadic":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isVariadic"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"isVariadic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","url":"\/documentation\/syntaxsparrow\/parameter\/isvariadic","role":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter accepts a variadic argument."}],"type":"topic"},"doc://SyntaxSparrow/SQ":{"identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"url":"\/documentation\/syntaxsparrow\/tuple","title":"Tuple","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Represents a Swift tuple."}],"navigatorTitle":[{"kind":"identifier","text":"Tuple"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Tuple","kind":"identifier"}]},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/==(_:_:)":{"url":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)","role":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ParameterV","text":"Parameter"},{"text":", ","kind":"text"},{"text":"Parameter","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"==(_:_:)","type":"topic","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isOptional":{"role":"symbol","type":"topic","kind":"symbol","title":"isOptional","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","abstract":[{"text":"Will return a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" flag indicating if the closure declaration is marked as optional. ","type":"text"},{"type":"codeVoice","code":"?"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isOptional","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/parameter\/isoptional"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"kind":"symbol","abstract":[{"type":"text","text":"The node being represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"type":"codeVoice","code":"Paramater.init"},{"type":"text","text":" methods."},{"text":" ","type":"text"},{"text":"You can use the ","type":"text"},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"type":"text","text":" cast method to resolve the expected one."},{"text":" ","type":"text"},{"type":"text","text":"For example:"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/node","title":"node","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/rawType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","title":"rawType","url":"\/documentation\/syntaxsparrow\/parameter\/rawtype","abstract":[{"type":"text","text":"The raw type string."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawType"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/description":{"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"description","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/name":{"kind":"symbol","abstract":[{"text":"The first, external name of the parameter.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/name","title":"name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-3u22t":{"kind":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","type":"reference","isActive":true},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"text":" node.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-3u22t","title":"init(node:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TupleTypeElementSyntax","preciseIdentifier":"s:11SwiftSyntax016TupleTypeElementB0V","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/secondName":{"kind":"symbol","abstract":[{"text":"The second internal name of the parameter.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/secondname","title":"secondName","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"secondName","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isInOut":{"kind":"symbol","abstract":[{"text":"Bool whether the parameter is marked with ","type":"text"},{"code":"inout","type":"codeVoice"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/isinout","title":"isInOut","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isInOut","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/Equatable-Implementations":{"kind":"article","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations","title":"Equatable Implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/modifiers":{"kind":"symbol","abstract":[{"text":"Array of modifiers found in the declaration.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/modifiers","title":"modifiers","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"modifiers","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow8ModifierV","text":"Modifier"},{"kind":"text","text":"]"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-25bpg":{"kind":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","type":"reference"},{"text":" instance from an ","type":"text"},{"type":"codeVoice","code":"FunctionParameterSyntax"},{"type":"text","text":" node."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-25bpg","title":"init(node:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"text":"FunctionParameterSyntax","preciseIdentifier":"s:11SwiftSyntax017FunctionParameterB0V","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/defaultArgument":{"title":"defaultArgument","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"defaultArgument","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/parameter\/defaultargument","kind":"symbol","abstract":[{"text":"The default argument of the parameter (if any).","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"title":"Parameter","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","url":"\/documentation\/syntaxsparrow\/parameter","role":"symbol","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-55sny":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","isActive":true},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"text":" node.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-55sny","title":"init(node:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"text":"EnumCaseParameterSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017EnumCaseParameterB0V"},{"text":")","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" resolve from the parameter"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"url":"\/documentation\/syntaxsparrow\/parameter\/type","title":"type","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","type":"topic","role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/hash(into:)":{"abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)","title":"hash(into:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)","type":"topic","role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isLabelOmitted":{"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","abstract":[{"type":"text","text":"Bool whether the parameter name is marked as no label "},{"type":"codeVoice","code":"_"},{"text":".","type":"text"}],"url":"\/documentation\/syntaxsparrow\/parameter\/islabelomitted","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isLabelOmitted"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","title":"isLabelOmitted","role":"symbol"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"topic","title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]}}}