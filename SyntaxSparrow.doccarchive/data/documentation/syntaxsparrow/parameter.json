{"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"modules":[{"name":"SyntaxSparrow"}],"role":"symbol","title":"Parameter","roleHeading":"Structure","externalID":"s:13SyntaxSparrow9ParameterV","navigatorTitle":[{"text":"Parameter","kind":"identifier"}],"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Parameter","kind":"identifier"}]},"kind":"symbol","topicSections":[{"title":"Operators","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parameter","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"A parameter is a variable in a method or function definition that accepts input from the caller of the method or function. In Swift, function","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parameters can have a"},{"text":" ","type":"text"},{"type":"text","text":"variety of attributes, including labels, types, default values, and special attributes like "},{"code":"inout","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the "},{"code":"Parameter","type":"codeVoice"},{"text":" struct provides access to:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The parameterâ€™s attributes, name(s), type, and raw type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the parameter accepts a variadic argument or is optional."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Whether the parameter is marked with ","type":"text"},{"code":"inout","type":"codeVoice"},{"type":"text","text":" or its label is omitted."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The default argument of the parameter, if any."}]}]}]},{"inlineContent":[{"type":"text","text":"A parameter has common properties, and then a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" property which further describes the input by including associated","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties as needed."},{"text":" ","type":"text"},{"type":"text","text":"For example, a parameter with the type"},{"code":".closure","type":"codeVoice"},{"type":"text","text":" will have a "},{"code":"Closure","type":"codeVoice"},{"text":" provided, where as a parameter with the ","type":"text"},{"type":"codeVoice","code":".tuple"},{"type":"text","text":" type will have a"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","isActive":true},{"text":" associated properties.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This struct also includes functionality to create a ","type":"text"},{"code":"Parameter","type":"codeVoice"},{"type":"text","text":" instance from either a "},{"code":"FunctionParameterSyntax","type":"codeVoice"},{"text":" node or a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"type":"text","text":" node."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/attributes":{"url":"\/documentation\/syntaxsparrow\/parameter\/attributes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"attributes","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9AttributeV","text":"Attribute"},{"kind":"text","text":"]"}],"kind":"symbol","title":"attributes","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","abstract":[{"type":"text","text":"Array of attributes found in the declaration."}],"role":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/==(_:_:)":{"title":"==(_:_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)","role":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow9ParameterV","text":"Parameter","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isVariadic":{"title":"isVariadic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter accepts a variadic argument."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isVariadic","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/parameter\/isvariadic"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"navigatorTitle":[{"text":"Tuple","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","kind":"symbol","title":"Tuple","abstract":[{"type":"text","text":"Represents a Swift tuple."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Tuple","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/tuple","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","title":"type","url":"\/documentation\/syntaxsparrow\/parameter\/type","type":"topic","role":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" resolve from the parameter"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/modifiers":{"title":"modifiers","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/modifiers","abstract":[{"type":"text","text":"Array of modifiers found in the declaration."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"modifiers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow8ModifierV","text":"Modifier"},{"kind":"text","text":"]"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/hash(into:)":{"title":"hash(into:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/name":{"title":"name","kind":"symbol","abstract":[{"text":"The first, external name of the parameter.","type":"text"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/name","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-25bpg":{"title":"init(node:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","role":"symbol","abstract":[{"type":"text","text":"Creates a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"FunctionParameterSyntax"},{"text":" node.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"kind":"text","text":": "},{"text":"FunctionParameterSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017FunctionParameterB0V"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-25bpg","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/secondName":{"role":"symbol","kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/secondname","abstract":[{"type":"text","text":"The second internal name of the parameter."}],"title":"secondName","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"secondName","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"url":"\/documentation\/syntaxsparrow\/parameter","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","title":"Parameter","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isInOut":{"title":"isInOut","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","role":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter is marked with "},{"code":"inout","type":"codeVoice"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isInOut","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/isinout","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-55sny":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny","title":"init(node:)","role":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","type":"reference"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"type":"text","text":" node."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EnumCaseParameterSyntax","preciseIdentifier":"s:11SwiftSyntax017EnumCaseParameterB0V"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-55sny"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/rawType":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The raw type string."}],"url":"\/documentation\/syntaxsparrow\/parameter\/rawtype","kind":"symbol","title":"rawType","role":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"title":"node","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","role":"symbol","abstract":[{"type":"text","text":"The node being represented by the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"type":"codeVoice","code":"Paramater.init"},{"type":"text","text":" methods."},{"text":" ","type":"text"},{"text":"You can use the ","type":"text"},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"type":"text","text":" cast method to resolve the expected one."},{"text":" ","type":"text"},{"text":"For example:","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/node","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/defaultArgument":{"title":"defaultArgument","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","role":"symbol","abstract":[{"text":"The default argument of the parameter (if any).","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultArgument"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/defaultargument","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isOptional":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","title":"isOptional","role":"symbol","abstract":[{"text":"Will return a ","type":"text"},{"type":"codeVoice","code":"Bool"},{"text":" flag indicating if the closure declaration is marked as optional. ","type":"text"},{"type":"codeVoice","code":"?"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isOptional","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/isoptional"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isLabelOmitted":{"title":"isLabelOmitted","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","role":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter name is marked as no label "},{"type":"codeVoice","code":"_"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isLabelOmitted"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/islabelomitted","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-3u22t":{"title":"init(node:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","role":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","isActive":true},{"type":"text","text":" instance from an "},{"code":"TupleTypeElementSyntax","type":"codeVoice"},{"type":"text","text":" node."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax016TupleTypeElementB0V","kind":"typeIdentifier","text":"TupleTypeElementSyntax"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-3u22t","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/description":{"title":"description","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/description","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable"}}}