{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parameter is a variable in a method or function definition that accepts input from the caller of the method or function. In Swift, function parameters can have a"},{"type":"text","text":" "},{"type":"text","text":"variety of attributes, including labels, types, default values, and special attributes like "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"An instance of the "},{"type":"codeVoice","code":"Parameter"},{"type":"text","text":" struct provides access to:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The parameter’s attributes, name(s), type, and raw type."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the parameter accepts a variadic argument or is optional."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the parameter is marked with "},{"type":"codeVoice","code":"inout"},{"type":"text","text":" or its label is omitted."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The default argument of the parameter, if any."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parameter has common properties, and then a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" property which further describes the input by including associated properties as needed."},{"type":"text","text":" "},{"type":"text","text":"For example, a parameter with the type"},{"type":"codeVoice","code":".closure"},{"type":"text","text":" will have a "},{"type":"codeVoice","code":"Closure"},{"type":"text","text":" provided, where as a parameter with the "},{"type":"codeVoice","code":".tuple"},{"type":"text","text":" type will have a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple"},{"type":"text","text":" associated properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This struct also includes functionality to create a "},{"type":"codeVoice","code":"Parameter"},{"type":"text","text":" instance from either a "},{"type":"codeVoice","code":"FunctionParameterSyntax"},{"type":"text","text":" node or a "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"type":"text","text":" node."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"title":"Parameter","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:13SyntaxSparrow9ParameterV","modules":[{"name":"SyntaxSparrow"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(_:)-102g6","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(_:)-75pj4"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description"]},{"title":"Instance Methods","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations"],"generated":true}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"role":"symbol","title":"Tuple","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tuple"}],"abstract":[{"type":"text","text":"Represents a Swift tuple."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Tuple"}],"url":"\/documentation\/syntaxsparrow\/tuple"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/description":{"role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/description"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(_:)-102g6":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"FunctionParameterSyntax","preciseIdentifier":"s:11SwiftSyntax017FunctionParameterB0V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"FunctionParameterSyntax"},{"type":"text","text":" node."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(_:)-102g6","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/init(_:)-102g6"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"role":"collection","title":"SyntaxSparrow","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"role":"symbol","title":"EntityType.simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/hash(into:)":{"role":"symbol","title":"hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(_:)-75pj4":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"TupleTypeElementSyntax","preciseIdentifier":"s:11SwiftSyntax016TupleTypeElementB0V"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"type":"text","text":" node."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(_:)-75pj4","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/init(_:)-75pj4"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/==(_:_:)":{"role":"symbol","title":"==(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"role":"symbol","title":"EntityType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"url":"\/documentation\/syntaxsparrow\/entitytype"}}}