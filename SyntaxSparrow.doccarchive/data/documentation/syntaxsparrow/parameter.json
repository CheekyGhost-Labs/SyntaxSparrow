{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},"abstract":[{"text":"Represents a Swift function or method parameter.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"metadata":{"title":"Parameter","roleHeading":"Structure","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"symbolKind":"struct","externalID":"s:13SyntaxSparrow9ParameterV","navigatorTitle":[{"text":"Parameter","kind":"identifier"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Parameter","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"A parameter is a variable in a method or function definition that accepts input from the caller of the method or function. In Swift, function","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"parameters can have a"},{"text":" ","type":"text"},{"text":"variety of attributes, including labels, types, default values, and special attributes like ","type":"text"},{"code":"inout","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"An instance of the "},{"type":"codeVoice","code":"Parameter"},{"type":"text","text":" struct provides access to:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The parameter’s attributes, name(s), type, and raw type."}]}]},{"content":[{"inlineContent":[{"text":"Whether the parameter accepts a variadic argument or is optional.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the parameter is marked with "},{"code":"inout","type":"codeVoice"},{"text":" or its label is omitted.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The default argument of the parameter, if any."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"A parameter has common properties, and then a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" property which further describes the input by including associated"},{"text":" ","type":"text"},{"type":"text","text":"properties as needed."},{"text":" ","type":"text"},{"text":"For example, a parameter with the type","type":"text"},{"code":".closure","type":"codeVoice"},{"type":"text","text":" will have a "},{"type":"codeVoice","code":"Closure"},{"text":" provided, where as a parameter with the ","type":"text"},{"code":".tuple","type":"codeVoice"},{"type":"text","text":" type will have a"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple"},{"text":" associated properties.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This struct also includes functionality to create a "},{"code":"Parameter","type":"codeVoice"},{"type":"text","text":" instance from either a "},{"type":"codeVoice","code":"FunctionParameterSyntax"},{"type":"text","text":" node or a"},{"text":" ","type":"text"},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"text":" node.","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/parameter"]}],"topicSections":[{"title":"Operators","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)"]},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations"]}],"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"topic","title":"EntityType","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/hash(into:)":{"type":"topic","title":"hash(into:)","url":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parameter","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"title":"Parameter","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type can’t does not have any nested or related syntax."},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}],"title":"EntityType.simple(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-25bpg":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017FunctionParameterB0V","text":"FunctionParameterSyntax"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"code":"FunctionParameterSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"type":"topic","role":"symbol","title":"init(node:)","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-25bpg","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"url":"\/documentation\/syntaxsparrow\/parameter\/node","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","kind":"symbol","role":"symbol","title":"node","abstract":[{"type":"text","text":"The node being represented by the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","type":"reference","isActive":true},{"text":" instance.","type":"text"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"Note:","type":"text"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"code":"Paramater.init","type":"codeVoice"},{"text":" methods.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"You can use the "},{"code":"as(SyntaxProtocol.Protocol)","type":"codeVoice"},{"type":"text","text":" cast method to resolve the expected one."},{"type":"text","text":" "},{"text":"For example:","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B0V","text":"Syntax","kind":"typeIdentifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"abstract":[{"text":"The ","type":"text"},{"code":"EntityType","type":"codeVoice"},{"text":" resolve from the parameter","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","type":"topic","title":"type","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/type","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/secondName":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"secondName"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The second internal name of the parameter."}],"type":"topic","title":"secondName","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/secondname"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/name":{"url":"\/documentation\/syntaxsparrow\/parameter\/name","title":"name","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","abstract":[{"text":"The first, external name of the parameter.","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-55sny":{"kind":"symbol","abstract":[{"text":"Creates a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"code":"TupleTypeElementSyntax","type":"codeVoice"},{"type":"text","text":" node."}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-55sny","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017EnumCaseParameterB0V","text":"EnumCaseParameterSyntax"},{"text":")","kind":"text"}],"title":"init(node:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/rawType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","title":"rawType","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/rawtype","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The raw type string."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/Equatable-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations","type":"topic","title":"Equatable Implementations","url":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isOptional":{"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/isoptional","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"isOptional","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"isOptional","abstract":[{"type":"text","text":"Will return a "},{"code":"Bool","type":"codeVoice"},{"text":" flag indicating if the closure declaration is marked as optional. ","type":"text"},{"type":"codeVoice","code":"?"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isLabelOmitted":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isLabelOmitted","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/parameter\/islabelomitted","kind":"symbol","abstract":[{"text":"Bool whether the parameter name is marked as no label ","type":"text"},{"type":"codeVoice","code":"_"},{"type":"text","text":"."}],"type":"topic","role":"symbol","title":"isLabelOmitted","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/==(_:_:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Parameter","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"==(_:_:)","url":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isInOut":{"kind":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter is marked with "},{"code":"inout","type":"codeVoice"}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/isinout","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isInOut"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isInOut"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isVariadic":{"url":"\/documentation\/syntaxsparrow\/parameter\/isvariadic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","type":"topic","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Bool whether the parameter accepts a variadic argument."}],"title":"isVariadic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"isVariadic","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-3u22t":{"url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-3u22t","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","title":"init(node:)","abstract":[{"type":"text","text":"Creates a new "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","isActive":true,"type":"reference"},{"type":"text","text":" instance from an "},{"code":"TupleTypeElementSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"text":"TupleTypeElementSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016TupleTypeElementB0V"},{"kind":"text","text":")"}],"type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/description":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/description","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","title":"description"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/modifiers":{"kind":"symbol","abstract":[{"type":"text","text":"Array of modifiers found in the declaration."}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/modifiers","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"modifiers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Modifier","preciseIdentifier":"s:13SyntaxSparrow8ModifierV","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"title":"modifiers"},"doc://SyntaxSparrow/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/attributes":{"title":"attributes","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"attributes"},{"kind":"text","text":": ["},{"text":"Attribute","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow9AttributeV"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Array of attributes found in the declaration."}],"url":"\/documentation\/syntaxsparrow\/parameter\/attributes","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"abstract":[{"type":"text","text":"Represents a Swift tuple."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Tuple"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","navigatorTitle":[{"text":"Tuple","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/tuple","title":"Tuple"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/defaultArgument":{"type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"defaultArgument","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"abstract":[{"type":"text","text":"The default argument of the parameter (if any)."}],"title":"defaultArgument","url":"\/documentation\/syntaxsparrow\/parameter\/defaultargument","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"}}}