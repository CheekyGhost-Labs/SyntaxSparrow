{"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)"],"title":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"]},{"title":"Instance Methods","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations"],"generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parameter"}]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parameter is a variable in a method or function definition that accepts input from the caller of the method or function. In Swift, function"},{"text":" ","type":"text"},{"type":"text","text":"parameters can have a"},{"type":"text","text":" "},{"type":"text","text":"variety of attributes, including labels, types, default values, and special attributes like "},{"type":"codeVoice","code":"inout"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"An instance of the ","type":"text"},{"code":"Parameter","type":"codeVoice"},{"text":" struct provides access to:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The parameterâ€™s attributes, name(s), type, and raw type."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Whether the parameter accepts a variadic argument or is optional."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Whether the parameter is marked with "},{"code":"inout","type":"codeVoice"},{"text":" or its label is omitted.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The default argument of the parameter, if any."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A parameter has common properties, and then a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" property which further describes the input by including associated"},{"text":" ","type":"text"},{"type":"text","text":"properties as needed."},{"text":" ","type":"text"},{"type":"text","text":"For example, a parameter with the type"},{"code":".closure","type":"codeVoice"},{"text":" will have a ","type":"text"},{"code":"Closure","type":"codeVoice"},{"type":"text","text":" provided, where as a parameter with the "},{"code":".tuple","type":"codeVoice"},{"type":"text","text":" type will have a"},{"text":" ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","type":"reference","isActive":true},{"type":"text","text":" associated properties."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This struct also includes functionality to create a "},{"type":"codeVoice","code":"Parameter"},{"type":"text","text":" instance from either a "},{"code":"FunctionParameterSyntax","type":"codeVoice"},{"text":" node or a","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"text":" node.","type":"text"}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parameter","kind":"identifier"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"text":"Parameter","kind":"identifier"}],"modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Structure","externalID":"s:13SyntaxSparrow9ParameterV","title":"Parameter"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/parameter"]}],"sections":[],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/Equatable-Implementations":{"type":"topic","role":"collectionGroup","kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/Equatable-Implementations","url":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"abstract":[{"text":"Represents a Swift function or method parameter.","type":"text"}],"role":"symbol","title":"Parameter","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter","navigatorTitle":[{"text":"Parameter","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-55sny":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017EnumCaseParameterB0V","text":"EnumCaseParameterSyntax"},{"kind":"text","text":")"}],"title":"init(node:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-55sny","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-55sny","abstract":[{"type":"text","text":"Creates a new "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"text":" node.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/rawType":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"rawType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?"}],"title":"rawType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/rawType","url":"\/documentation\/syntaxsparrow\/parameter\/rawtype","abstract":[{"text":"The raw type string.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Tuple":{"url":"\/documentation\/syntaxsparrow\/tuple","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Tuple","title":"Tuple","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Tuple"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Tuple"}],"abstract":[{"text":"Represents a Swift tuple.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isLabelOmitted":{"title":"isLabelOmitted","abstract":[{"text":"Bool whether the parameter name is marked as no label ","type":"text"},{"type":"codeVoice","code":"_"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isLabelOmitted","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/syntaxsparrow\/parameter\/islabelomitted","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isLabelOmitted","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/secondName":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"secondName"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"title":"secondName","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/secondName","url":"\/documentation\/syntaxsparrow\/parameter\/secondname","abstract":[{"text":"The second internal name of the parameter.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-25bpg":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"node","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax017FunctionParameterB0V","text":"FunctionParameterSyntax"},{"kind":"text","text":")"}],"title":"init(node:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-25bpg","url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-25bpg","abstract":[{"text":"Creates a new ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance from an "},{"code":"FunctionParameterSyntax","type":"codeVoice"},{"type":"text","text":" node."}]},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/description":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"description","url":"\/documentation\/syntaxsparrow\/parameter\/description","kind":"symbol","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/description","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/defaultArgument":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultArgument","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"title":"defaultArgument","url":"\/documentation\/syntaxsparrow\/parameter\/defaultargument","kind":"symbol","abstract":[{"type":"text","text":"The default argument of the parameter (if any)."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/defaultArgument","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/==(_:_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV"},{"kind":"text","text":", "},{"text":"Parameter","preciseIdentifier":"s:13SyntaxSparrow9ParameterV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"kind":"symbol","title":"==(_:_:)","url":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)","abstract":[],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/==(_:_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/init(node:)-3u22t":{"abstract":[{"text":"Creates a new ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","isActive":true,"type":"reference"},{"text":" instance from an ","type":"text"},{"type":"codeVoice","code":"TupleTypeElementSyntax"},{"type":"text","text":" node."}],"role":"symbol","title":"init(node:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/init(node:)-3u22t","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"node"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax016TupleTypeElementB0V","text":"TupleTypeElementSyntax"},{"text":")","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/parameter\/init(node:)-3u22t"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/attributes":{"title":"attributes","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"attributes"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SyntaxSparrow9AttributeV","text":"Attribute","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Array of attributes found in the declaration."}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/attributes","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/attributes"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isOptional":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOptional"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"title":"isOptional","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isOptional","url":"\/documentation\/syntaxsparrow\/parameter\/isoptional","abstract":[{"type":"text","text":"Will return a "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":" flag indicating if the closure declaration is marked as optional. "},{"type":"codeVoice","code":"?"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/hash(into:)":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Hasher","kind":"typeIdentifier","preciseIdentifier":"s:s6HasherV"},{"kind":"text","text":")"}],"title":"hash(into:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/hash(into:)","url":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/modifiers":{"type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"modifiers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Modifier","preciseIdentifier":"s:13SyntaxSparrow8ModifierV"},{"kind":"text","text":"]"}],"title":"modifiers","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/modifiers","url":"\/documentation\/syntaxsparrow\/parameter\/modifiers","abstract":[{"type":"text","text":"Array of modifiers found in the declaration."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isInOut":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"isInOut"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","title":"isInOut","url":"\/documentation\/syntaxsparrow\/parameter\/isinout","abstract":[{"type":"text","text":"Bool whether the parameter is marked with "},{"type":"codeVoice","code":"inout"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isInOut","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/isVariadic":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isVariadic","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"isVariadic","kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/isvariadic","abstract":[{"text":"Bool whether the parameter accepts a variadic argument.","type":"text"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/isVariadic","role":"symbol"},"doc://SyntaxSparrow/SQ":{"identifier":"doc:\/\/SyntaxSparrow\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"type":"topic","abstract":[{"type":"text","text":"The node being represented by the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","isActive":true,"type":"reference"},{"text":" instance.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"code":"Paramater.init","type":"codeVoice"},{"type":"text","text":" methods."},{"text":" ","type":"text"},{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"text":" cast method to resolve the expected one.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example:"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"node","kind":"identifier"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"url":"\/documentation\/syntaxsparrow\/parameter\/node","title":"node","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"title":"type","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"type":"topic","abstract":[{"type":"text","text":"The "},{"code":"EntityType","type":"codeVoice"},{"type":"text","text":" resolve from the parameter"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/type","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/name":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"name","kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/name","abstract":[{"text":"The first, external name of the parameter.","type":"text"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/name","role":"symbol"}}}