{"abstract":[{"type":"text","text":"The node being represented by the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","type":"reference","isActive":true},{"type":"text","text":" instance."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" The node type will be one of the types supported by the ","type":"text"},{"code":"Paramater.init","type":"codeVoice"},{"type":"text","text":" methods."},{"text":" ","type":"text"},{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"text":" cast method to resolve the expected one.","type":"text"},{"type":"text","text":" "},{"text":"For example:","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/parameter\/node"]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Property","title":"node","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"externalID":"s:13SyntaxSparrow9ParameterV4node05SwiftA00A0Vvp","role":"symbol","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"node","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B0V","kind":"typeIdentifier","text":"Syntax"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"codeListing","code":["let node = parameter.node \/\/ The parameter node","node.as(FunctionParameterSyntax.self) \/\/ Casts to function parameter syntax node or returns `nil`","node.as(TupleTypeElementSyntax.self) \/\/ Casts to tuple element parameter syntax node or returns `nil`","node.as(EnumCaseParameterSyntax.self) \/\/ Casts to an enum associated value parameter syntax node or returns `nil`"],"syntax":"swift"}],"kind":"content"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"kind":"symbol","abstract":[{"type":"text","text":"The node being represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"type":"codeVoice","code":"Paramater.init"},{"type":"text","text":" methods."},{"text":" ","type":"text"},{"text":"You can use the ","type":"text"},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"type":"text","text":" cast method to resolve the expected one."},{"text":" ","type":"text"},{"type":"text","text":"For example:"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/node","title":"node","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"text":"Syntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B0V"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"title":"Parameter","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","url":"\/documentation\/syntaxsparrow\/parameter","role":"symbol","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"type":"topic"}}}