{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["let node = parameter.node \/\/ The parameter node","node.as(FunctionParameterSyntax.self) \/\/ Casts to function parameter syntax node or returns `nil`","node.as(TupleTypeElementSyntax.self) \/\/ Casts to tuple element parameter syntax node or returns `nil`","node.as(EnumCaseParameterSyntax.self) \/\/ Casts to an enum associated value parameter syntax node or returns `nil`"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter\/node"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The node being represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"type":"codeVoice","code":"Paramater.init"},{"type":"text","text":" methods."},{"type":"text","text":" "},{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"type":"text","text":" cast method to resolve the expected one."},{"type":"text","text":" "},{"type":"text","text":"For example:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"title":"node","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:13SyntaxSparrow9ParameterV4node05SwiftA00A0Vvp","modules":[{"name":"SyntaxSparrow"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"role":"collection","title":"SyntaxSparrow","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"role":"symbol","title":"Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/node":{"role":"symbol","title":"node","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"node"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Syntax","preciseIdentifier":"s:11SwiftSyntax0B0V"}],"abstract":[{"type":"text","text":"The node being represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"type":"text","text":" The node type will be one of the types supported by the "},{"type":"codeVoice","code":"Paramater.init"},{"type":"text","text":" methods."},{"type":"text","text":" "},{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"as(SyntaxProtocol.Protocol)"},{"type":"text","text":" cast method to resolve the expected one."},{"type":"text","text":" "},{"type":"text","text":"For example:"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/node","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/parameter\/node"}}}