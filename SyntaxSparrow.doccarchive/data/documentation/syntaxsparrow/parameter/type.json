{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"kind":"text","text":": "},{"text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"For example, in the following declaration:","type":"text"}]},{"code":["func greet(_ person: Person, with phrases: String, dimensions: (height: Double, weight: Double))"],"syntax":"swift","type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The first parameter type will be ","type":"text"},{"code":".simple(\"Person\")","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The second parameter type will be ","type":"text"},{"code":".simple(\"String\")","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The third parameter type will be "},{"type":"codeVoice","code":".dimensions(Tuple)"},{"type":"text","text":" where the associated tuple has parameters with types "},{"type":"codeVoice","code":".simple(\"Double\")"},{"type":"text","text":" and"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"Double\")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"See: "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/parameter\/type"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"},"metadata":{"roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType","kind":"typeIdentifier"}],"title":"type","externalID":"s:13SyntaxSparrow9ParameterV4typeAA10EntityTypeOvp"},"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"EntityType"},{"text":" resolve from the parameter","type":"text"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","title":"EntityType","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"title":"Parameter","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"navigatorTitle":[{"text":"Parameter","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter","kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","role":"symbol","title":"EntityType.simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"type":"codeVoice","code":"CVarArg"},{"text":" is not currently supported so it will use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"title":"type","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EntityType"},{"text":" resolve from the parameter","type":"text"}],"url":"\/documentation\/syntaxsparrow\/parameter\/type","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"}}}