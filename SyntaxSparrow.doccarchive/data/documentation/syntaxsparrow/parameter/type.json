{"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" resolve from the parameter"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","interfaceLanguage":"swift"},"metadata":{"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier"}],"modules":[{"name":"SyntaxSparrow"}],"title":"type","externalID":"s:13SyntaxSparrow9ParameterV4typeAA10EntityTypeOvp","role":"symbol","roleHeading":"Instance Property"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","text":"EntityType"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"For example, in the following declaration:","type":"text"}]},{"syntax":"swift","code":["func greet(_ person: Person, with phrases: String, dimensions: (height: Double, weight: Double))"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The first parameter type will be "},{"type":"codeVoice","code":".simple(\"Person\")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The second parameter type will be ","type":"text"},{"code":".simple(\"String\")","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The third parameter type will be "},{"code":".dimensions(Tuple)","type":"codeVoice"},{"type":"text","text":" where the associated tuple has parameters with types "},{"code":".simple(\"Double\")","type":"codeVoice"},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"Double\")"}]}]},{"content":[{"inlineContent":[{"text":"See: ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter\/type"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","title":"type","url":"\/documentation\/syntaxsparrow\/parameter\/type","type":"topic","role":"symbol","abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" resolve from the parameter"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"url":"\/documentation\/syntaxsparrow\/parameter","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","title":"Parameter","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"text":" ","type":"text"},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"EntityType","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"text":" ","type":"text"},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}]}}}