{"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"text":"The ","type":"text"},{"code":"EntityType","type":"codeVoice"},{"text":" resolve from the parameter","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"metadata":{"title":"type","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"}],"modules":[{"name":"SyntaxSparrow"}],"role":"symbol","symbolKind":"property","externalID":"s:13SyntaxSparrow9ParameterV4typeAA10EntityTypeOvp","roleHeading":"Instance Property"},"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter\/type"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","text":"EntityType","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"For example, in the following declaration:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func greet(_ person: Person, with phrases: String, dimensions: (height: Double, weight: Double))"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The first parameter type will be "},{"type":"codeVoice","code":".simple(\"Person\")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The second parameter type will be "},{"type":"codeVoice","code":".simple(\"String\")"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The third parameter type will be "},{"code":".dimensions(Tuple)","type":"codeVoice"},{"type":"text","text":" where the associated tuple has parameters with types "},{"type":"codeVoice","code":".simple(\"Double\")"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"Double\")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"See: "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true}]}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"},"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"title":"type","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"type":"topic","abstract":[{"type":"text","text":"The "},{"code":"EntityType","type":"codeVoice"},{"type":"text","text":" resolve from the parameter"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/parameter\/type","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"abstract":[{"text":"Represents a Swift function or method parameter.","type":"text"}],"role":"symbol","title":"Parameter","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"url":"\/documentation\/syntaxsparrow\/parameter","navigatorTitle":[{"text":"Parameter","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","url":"\/documentation\/syntaxsparrow\/entitytype","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"abstract":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"By default a "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}],"kind":"symbol","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"}}}