{"kind":"symbol","abstract":[{"type":"text","text":"The "},{"code":"EntityType","type":"codeVoice"},{"text":" resolve from the parameter","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter"]]},"metadata":{"role":"symbol","title":"type","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"externalID":"s:13SyntaxSparrow9ParameterV4typeAA10EntityTypeOvp","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"property","roleHeading":"Instance Property"},"variants":[{"paths":["\/documentation\/syntaxsparrow\/parameter\/type"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"type"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"For example, in the following declaration:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func greet(_ person: Person, with phrases: String, dimensions: (height: Double, weight: Double))"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The first parameter type will be ","type":"text"},{"type":"codeVoice","code":".simple(\"Person\")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The second parameter type will be "},{"type":"codeVoice","code":".simple(\"String\")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The third parameter type will be ","type":"text"},{"type":"codeVoice","code":".dimensions(Tuple)"},{"text":" where the associated tuple has parameters with types ","type":"text"},{"type":"codeVoice","code":".simple(\"Double\")"},{"text":" and","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"Double\")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"See: ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"}]}]}],"type":"unorderedList"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter":{"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parameter"}],"navigatorTitle":[{"kind":"identifier","text":"Parameter"}],"title":"Parameter","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter","url":"\/documentation\/syntaxsparrow\/parameter","role":"symbol","abstract":[{"type":"text","text":"Represents a Swift function or method parameter."}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"type":"topic","abstract":[{"type":"text","text":"An "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" ","type":"text"},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"text":"By default a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)"},{"type":"text","text":" type will be used with a string representation of the declared type."},{"type":"text","text":" "},{"type":"text","text":"Initial support for some complex types, such as closures, tuples, and results is provided."},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"title":"EntityType","navigatorTitle":[{"kind":"identifier","text":"EntityType"}],"kind":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Parameter/type":{"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EntityType"},{"type":"text","text":" resolve from the parameter"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"url":"\/documentation\/syntaxsparrow\/parameter\/type","title":"type","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Parameter\/type","type":"topic","role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"code":"CVarArg","type":"codeVoice"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"topic","title":"EntityType.simple(_:)","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"simple"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}]}}}