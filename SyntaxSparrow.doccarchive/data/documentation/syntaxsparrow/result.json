{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/result"]}],"abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" type.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/==(_:_:)"],"title":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/failureType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/successType"]},{"title":"Instance Methods","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/hash(into:)"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result"},"relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Result","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Result"}],"role":"symbol","roleHeading":"Structure","title":"Result","externalID":"s:13SyntaxSparrow6ResultV","symbolKind":"struct","modules":[{"name":"SyntaxSparrow"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Result"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Swift, the "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" type is used to model the success\/failure of an operation. The "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" struct encapsulates a "},{"code":"Result","type":"codeVoice"},{"text":" type from","type":"text"},{"text":" ","type":"text"},{"text":"a Swift source file and provides access to the success and failure types.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The success and failure types are represented as ","type":"text"},{"code":"EntityType","type":"codeVoice"},{"type":"text","text":" instances."},{"text":" ","type":"text"},{"text":"For example, for the ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type "},{"type":"codeVoice","code":"Result<String, Error>"},{"text":", the success type will be ","type":"text"},{"code":".simple(\"String\")","type":"codeVoice"},{"type":"text","text":" and the failure type will be"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"Error\")"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"This struct provides functionality to create a ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" instance from a ","type":"text"},{"code":"SimpleTypeIdentifierSyntax","type":"codeVoice"},{"type":"text","text":" node. If the "},{"type":"codeVoice","code":"node.firstToken.tokenKind"},{"type":"text","text":" is"},{"text":" ","type":"text"},{"type":"text","text":"not "},{"code":"\"Result\"","type":"codeVoice"},{"type":"text","text":", the initializer will return "},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/description":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/description","abstract":[],"title":"description","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"type":"topic","url":"\/documentation\/syntaxsparrow\/result\/description","kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/failureType":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"failureType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/failureType","title":"failureType","url":"\/documentation\/syntaxsparrow\/result\/failuretype","abstract":[{"text":"The failure type from the ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/isOptional":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isOptional","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","type":"topic","kind":"symbol","title":"isOptional","url":"\/documentation\/syntaxsparrow\/result\/isoptional","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/isOptional","abstract":[{"code":"Bool","type":"codeVoice"},{"text":" whether the result type is optional.","type":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/Equatable-Implementations":{"url":"\/documentation\/syntaxsparrow\/result\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/Equatable-Implementations","type":"topic","kind":"article","abstract":[],"role":"collectionGroup"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/==(_:_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"kind":"text","text":"("},{"preciseIdentifier":"s:13SyntaxSparrow6ResultV","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/==(_:_:)","title":"==(_:_:)","url":"\/documentation\/syntaxsparrow\/result\/==(_:_:)","abstract":[]},"doc://SyntaxSparrow/SQ":{"type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/init(_:)":{"title":"init(_:)","url":"\/documentation\/syntaxsparrow\/result\/init(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Creates a new "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","isActive":true},{"type":"text","text":" instance from a "},{"code":"IdentifierTypeSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/init(_:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"text":"IdentifierTypeSyntax","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax014IdentifierTypeB0V"},{"text":")","kind":"text"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result":{"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","abstract":[{"type":"text","text":"Represents a Swift "},{"code":"Result","type":"codeVoice"},{"text":" type.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Result","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/result","kind":"symbol","navigatorTitle":[{"text":"Result","kind":"identifier"}],"title":"Result"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/hash(into:)":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/hash(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Hasher","preciseIdentifier":"s:s6HasherV"},{"text":")","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/result\/hash(into:)","type":"topic","title":"hash(into:)","role":"symbol"},"doc://SyntaxSparrow/SH":{"title":"Swift.Hashable","type":"unresolvable","identifier":"doc:\/\/SyntaxSparrow\/SH"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/successType":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/successType","title":"successType","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"successType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"abstract":[{"text":"The success type from the ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":"."}],"url":"\/documentation\/syntaxsparrow\/result\/successtype","type":"topic"}}}