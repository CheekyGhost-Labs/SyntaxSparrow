{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/result"]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","doc:\/\/SyntaxSparrow\/SQ","doc:\/\/SyntaxSparrow\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"metadata":{"title":"Result","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Result"}],"role":"symbol","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow6ResultV","navigatorTitle":[{"kind":"identifier","text":"Result"}],"symbolKind":"struct","roleHeading":"Structure"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Represents a Swift ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" type.","type":"text"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Result"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"In Swift, the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type is used to model the success\/failure of an operation. The "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" struct encapsulates a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type from"},{"type":"text","text":" "},{"type":"text","text":"a Swift source file and provides access to the success and failure types."}],"type":"paragraph"},{"inlineContent":[{"text":"The success and failure types are represented as ","type":"text"},{"code":"EntityType","type":"codeVoice"},{"text":" instances.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"For example, for the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type "},{"code":"Result<String, Error>","type":"codeVoice"},{"text":", the success type will be ","type":"text"},{"type":"codeVoice","code":".simple(\"String\")"},{"text":" and the failure type will be","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"Error\")"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This struct provides functionality to create a "},{"code":"Result","type":"codeVoice"},{"text":" instance from a ","type":"text"},{"type":"codeVoice","code":"SimpleTypeIdentifierSyntax"},{"type":"text","text":" node. If the "},{"type":"codeVoice","code":"node.firstToken.tokenKind"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"not "},{"code":"\"Result\"","type":"codeVoice"},{"type":"text","text":", the initializer will return "},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}]}],"topicSections":[{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/==(_:_:)"],"title":"Operators"},{"title":"Initializers","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/description","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/failureType","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/isOptional","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/successType"]},{"identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/hash(into:)"],"title":"Instance Methods"},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/Equatable-Implementations"]}],"references":{"doc://SyntaxSparrow/SH":{"identifier":"doc:\/\/SyntaxSparrow\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/Equatable-Implementations":{"title":"Equatable Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/Equatable-Implementations","role":"collectionGroup","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/syntaxsparrow\/result\/equatable-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/hash(into:)":{"title":"hash(into:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/hash(into:)","role":"symbol","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"hash","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:s6HasherV","kind":"typeIdentifier","text":"Hasher"},{"text":")","kind":"text"}],"url":"\/documentation\/syntaxsparrow\/result\/hash(into:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result":{"url":"\/documentation\/syntaxsparrow\/result","navigatorTitle":[{"text":"Result","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result","abstract":[{"text":"Represents a Swift ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type."}],"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Result"}],"title":"Result"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/==(_:_:)":{"title":"==(_:_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/==(_:_:)","role":"symbol","kind":"symbol","abstract":[],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"==","kind":"identifier"},{"kind":"text","text":" "},{"text":"(","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:13SyntaxSparrow6ResultV"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/syntaxsparrow\/result\/==(_:_:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/successType":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"successType","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/successType","kind":"symbol","type":"topic","abstract":[{"text":"The success type from the ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/syntaxsparrow\/result\/successtype","title":"successType","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/description":{"title":"description","type":"topic","url":"\/documentation\/syntaxsparrow\/result\/description","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/description","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"description","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"abstract":[],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/failureType":{"title":"failureType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/failureType","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The failure type from the "},{"type":"codeVoice","code":"Result"},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"failureType","kind":"identifier"},{"kind":"text","text":": "},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"url":"\/documentation\/syntaxsparrow\/result\/failuretype"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/isOptional":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/isOptional","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isOptional","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"type":"topic","title":"isOptional","abstract":[{"code":"Bool","type":"codeVoice"},{"text":" whether the result type is optional.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/result\/isoptional","role":"symbol"},"doc://SyntaxSparrow/SQ":{"identifier":"doc:\/\/SyntaxSparrow\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Result/init(_:)":{"title":"init(_:)","type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/result\/init(_:)","abstract":[{"text":"Creates a new ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result"},{"type":"text","text":" instance from a "},{"code":"IdentifierTypeSyntax","type":"codeVoice"},{"text":" node.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax014IdentifierTypeB0V","kind":"typeIdentifier","text":"IdentifierTypeSyntax"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Result\/init(_:)"},"doc://SyntaxSparrow/s23CustomStringConvertibleP":{"identifier":"doc:\/\/SyntaxSparrow\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible","type":"unresolvable"}}}