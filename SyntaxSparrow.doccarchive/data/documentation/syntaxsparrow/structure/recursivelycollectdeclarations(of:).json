{"abstract":[{"text":"Will recursively iterate through the collected declarations ","type":"text"},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"type":"text","text":" for the given type and return them in a flattened array."}],"sections":[],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"recursivelyCollectDeclarations(of:)","extendedModule":"SyntaxSparrow","externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow9StructureV","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"text":"]","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure\/recursivelyCollectDeclarations(of:)"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":".Type) -> ["},{"text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"kind":"text","text":"] "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","text":"Declaration","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The type to collect","type":"text"}]}],"name":"type"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"Array of the inferred ","type":"text"},{"type":"codeVoice","code":"Declaration"},{"text":" type","type":"text"}],"type":"paragraph"}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"Note: Declarations are returned ","type":"text"},{"inlineContent":[{"type":"text","text":"in order of declaration"}],"type":"strong"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example,"}]},{"type":"codeListing","syntax":"swift","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you invoke the "},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"type":"text","text":" helper on the root "},{"code":"SyntaxTree","type":"codeVoice"},{"text":" instance would return:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"["},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Structure<RootLevelStruct>","type":"codeVoice"},{"text":"]","type":"text"},{"type":"text","text":" "},{"text":"if you invoke the helper on the ","type":"text"},{"code":"tree.enumerations[0]","type":"codeVoice"},{"text":" instance would return:","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"[","type":"text"},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":"]"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/structure\/recursivelycollectdeclarations(of:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure\/SyntaxChildCollecting-Implementations"]]},"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"kind":"symbol","navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"abstract":[{"text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc","type":"text"}],"type":"topic","title":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","role":"symbol","url":"\/documentation\/syntaxsparrow\/declaration"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Structure":{"navigatorTitle":[{"kind":"identifier","text":"Structure"}],"title":"Structure","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure","abstract":[{"type":"text","text":"Represents a Swift struct declaration."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Structure"}],"url":"\/documentation\/syntaxsparrow\/structure"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Structure/SyntaxChildCollecting-Implementations":{"url":"\/documentation\/syntaxsparrow\/structure\/syntaxchildcollecting-implementations","role":"collectionGroup","title":"SyntaxChildCollecting Implementations","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure\/SyntaxChildCollecting-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Structure/recursivelyCollectDeclarations(of:)":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"recursivelyCollectDeclarations"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"text":" for the given type and return them in a flattened array.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/structure\/recursivelycollectdeclarations(of:)","title":"recursivelyCollectDeclarations(of:)","role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Structure\/recursivelyCollectDeclarations(of:)"}}}