{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Property","title":"viewMode","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"}],"externalID":"s:13SyntaxSparrow0A15ExplorerContextV8viewMode05SwiftA00a8TreeViewF0Ovp","role":"symbol","symbolKind":"property"},"sections":[],"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":" { get }","kind":"text"}],"languages":["swift"]}]},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"text":" is crucial in shaping the behavior of the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" during syntax tree traversal. It is critical to choose","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the appropriate view mode considering the state of the source code being analyzed."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"strict","type":"codeVoice"},{"type":"text","text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,"},{"text":" ","type":"text"},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"compilation."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tolerant"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"text":" ","type":"text"},{"text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of","type":"text"},{"type":"text","text":" "},{"type":"text","text":"partial code snippets."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"type":"text","text":": This mode aims to strike a balance between "},{"code":"strict","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"text":". It attempts to fix up minor errors in the source code while","type":"text"},{"type":"text","text":" "},{"text":"parsing, allowing","type":"text"},{"type":"text","text":" "},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"type":"codeVoice","code":"strict"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"text":" ","type":"text"},{"type":"text","text":"with code that may"},{"text":" ","type":"text"},{"text":"contain minor errors, but is largely well-formed.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" holds the chosen "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"text":" value for the instance and its child nodes.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext/viewMode":{"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode","role":"symbol","title":"viewMode","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"title":"SyntaxTree","navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTree"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SparrowSourceLocationConverter":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SparrowSourceLocationConverter"}],"abstract":[],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SparrowSourceLocationConverter"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","title":"SparrowSourceLocationConverter","url":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext":{"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext","title":"SyntaxExplorerContext","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Struct holding contextual instances and details created on a "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","isActive":true,"type":"reference"},{"text":" instance.","type":"text"},{"text":" ","type":"text"},{"text":"These support structured concurrency as elements such as the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","isActive":true},{"type":"text","text":" are"},{"type":"text","text":" "},{"text":"alo used by child evaluations and collectors at different times.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SyntaxExplorerContext"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxExplorerContext","kind":"identifier"}]}}}