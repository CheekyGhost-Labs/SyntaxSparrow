{"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"symbolKind":"property","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","externalID":"s:13SyntaxSparrow0A15ExplorerContextV8viewMode05SwiftA00a8TreeViewF0Ovp","title":"viewMode","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":" { get }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"text":" is crucial in shaping the behavior of the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"type":"text","text":"the appropriate view mode considering the state of the source code being analyzed."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"strict"},{"type":"text","text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,"},{"text":" ","type":"text"},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"type":"text","text":" "},{"text":"compilation.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tolerant"},{"type":"text","text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the"},{"text":" ","type":"text"},{"text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"partial code snippets."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"text":": This mode aims to strike a balance between ","type":"text"},{"type":"codeVoice","code":"strict"},{"type":"text","text":" and "},{"code":"tolerant","type":"codeVoice"},{"text":". It attempts to fix up minor errors in the source code while","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parsing, allowing"},{"text":" ","type":"text"},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"type":"codeVoice","code":"strict"},{"text":" mode and throws an error. This mode can be useful when working","type":"text"},{"text":" ","type":"text"},{"text":"with code that may","type":"text"},{"type":"text","text":" "},{"type":"text","text":"contain minor errors, but is largely well-formed."}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" holds the chosen "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"text":" value for the instance and its child nodes.","type":"text"}],"type":"paragraph"}]}],"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext":{"abstract":[{"text":"Struct holding contextual instances and details created on a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"},{"type":"text","text":" instance."},{"type":"text","text":" "},{"text":"These support structured concurrency as elements such as the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","isActive":true},{"text":" are","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"alo used by child evaluations and collectors at different times."}],"role":"symbol","title":"SyntaxExplorerContext","type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxExplorerContext"}],"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext","navigatorTitle":[{"text":"SyntaxExplorerContext","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext/viewMode":{"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode","kind":"symbol","role":"symbol","title":"viewMode","abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" handles unexpected or invalid tokens."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"}],"type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"url":"\/documentation\/syntaxsparrow\/syntaxtree","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","title":"SyntaxTree","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTree"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SyntaxTree","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SparrowSourceLocationConverter":{"abstract":[],"url":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SparrowSourceLocationConverter","kind":"identifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","role":"symbol","type":"topic","title":"SparrowSourceLocationConverter","navigatorTitle":[{"text":"SparrowSourceLocationConverter","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"}}}