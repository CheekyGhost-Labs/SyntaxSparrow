{"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"title":"viewMode","roleHeading":"Instance Property","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"symbolKind":"property","externalID":"s:13SyntaxSparrow0A15ExplorerContextV8viewMode05SwiftA00a8TreeViewF0Ovp"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":" { get }","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"text":" ","type":"text"},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"strict"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"text":" ","type":"text"},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"type":"text","text":" "},{"text":"compilation.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tolerant"},{"type":"text","text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the"},{"type":"text","text":" "},{"text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of","type":"text"},{"type":"text","text":" "},{"text":"partial code snippets.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"type":"text","text":": This mode aims to strike a balance between "},{"code":"strict","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"tolerant","type":"codeVoice"},{"text":". It attempts to fix up minor errors in the source code while","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"code":"strict","type":"codeVoice"},{"text":" mode and throws an error. This mode can be useful when working","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with code that may"},{"text":" ","type":"text"},{"type":"text","text":"contain minor errors, but is largely well-formed."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" holds the chosen "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" value for the instance and its child nodes."}]}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"title":"SyntaxTree","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTree"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SparrowSourceLocationConverter":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SparrowSourceLocationConverter"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SparrowSourceLocationConverter"}],"type":"topic","abstract":[],"role":"symbol","url":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter","title":"SparrowSourceLocationConverter"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext/viewMode":{"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode","role":"symbol","title":"viewMode","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" handles unexpected or invalid tokens."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext","abstract":[{"type":"text","text":"Struct holding contextual instances and details created on a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","isActive":true},{"type":"text","text":" instance."},{"type":"text","text":" "},{"text":"These support structured concurrency as elements such as the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter","isActive":true},{"text":" are","type":"text"},{"type":"text","text":" "},{"type":"text","text":"alo used by child evaluations and collectors at different times."}],"type":"topic","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxExplorerContext","kind":"identifier"}],"title":"SyntaxExplorerContext","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxExplorerContext"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"}}}