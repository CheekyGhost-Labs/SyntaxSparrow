{"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode"},"metadata":{"externalID":"s:13SyntaxSparrow0A15ExplorerContextV8viewMode05SwiftA00a8TreeViewF0Ovp","symbolKind":"property","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"}],"role":"symbol","title":"viewMode","modules":[{"name":"SyntaxSparrow"}]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":" { get }","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"text":" is crucial in shaping the behavior of the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"strict"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"type":"text","text":" "},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"type":"text","text":" "},{"type":"text","text":"compilation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tolerant"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"text":" ","type":"text"},{"text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of","type":"text"},{"type":"text","text":" "},{"text":"partial code snippets.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fixedUp"},{"text":": This mode aims to strike a balance between ","type":"text"},{"code":"strict","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"text":" ","type":"text"},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"type":"text","text":"for smoother traversal. However, for major errors, it behaves like the "},{"code":"strict","type":"codeVoice"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"type":"text","text":" "},{"type":"text","text":"with code that may"},{"type":"text","text":" "},{"type":"text","text":"contain minor errors, but is largely well-formed."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" holds the chosen ","type":"text"},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" value for the instance and its child nodes."}]}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext"]]},"kind":"symbol","references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext":{"title":"SyntaxExplorerContext","navigatorTitle":[{"text":"SyntaxExplorerContext","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext","abstract":[{"type":"text","text":"Struct holding contextual instances and details created on a "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","isActive":true,"type":"reference"},{"text":" instance.","type":"text"},{"text":" ","type":"text"},{"text":"These support structured concurrency as elements such as the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter"},{"type":"text","text":" are"},{"text":" ","type":"text"},{"type":"text","text":"alo used by child evaluations and collectors at different times."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SyntaxExplorerContext","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SparrowSourceLocationConverter":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SparrowSourceLocationConverter"}],"kind":"symbol","navigatorTitle":[{"text":"SparrowSourceLocationConverter","kind":"identifier"}],"type":"topic","title":"SparrowSourceLocationConverter","url":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter","abstract":[],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SparrowSourceLocationConverter"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"title":"SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","role":"symbol","navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxTree","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContext/viewMode":{"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContext\/viewMode","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"title":"viewMode"}}}