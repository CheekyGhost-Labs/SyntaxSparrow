{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"strict"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful"},{"text":" ","type":"text"},{"type":"text","text":"compilation."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tolerant"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"type":"text","text":" "},{"type":"text","text":"partial code snippets."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fixedUp"},{"text":": This mode aims to strike a balance between ","type":"text"},{"type":"codeVoice","code":"strict"},{"text":" and ","type":"text"},{"code":"tolerant","type":"codeVoice"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"type":"text","text":" "},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"type":"text","text":"for smoother traversal. However, for major errors, it behaves like the "},{"type":"codeVoice","code":"strict"},{"text":" mode and throws an error. This mode can be useful when working","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with code that may"},{"text":" ","type":"text"},{"text":"contain minor errors, but is largely well-formed.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" holds the chosen ","type":"text"},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" value for the instance and its child nodes."}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding"]]},"metadata":{"required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"symbolKind":"property","externalID":"s:13SyntaxSparrow0A24ExplorerContextProvidingP8viewMode05SwiftA00a8TreeViewG0Ovp","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","title":"viewMode","roleHeading":"Instance Property"},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding\/viewMode","interfaceLanguage":"swift"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContextProviding":{"url":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding","title":"SyntaxExplorerContextProviding","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding","kind":"symbol","type":"topic","abstract":[],"navigatorTitle":[{"text":"SyntaxExplorerContextProviding","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxExplorerContextProviding"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContextProviding/viewMode":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"required":true,"type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/viewmode","abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding\/viewMode","title":"viewMode","kind":"symbol"}}}