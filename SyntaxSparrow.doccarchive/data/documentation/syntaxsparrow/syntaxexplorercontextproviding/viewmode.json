{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding\/viewMode"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"strict"},{"type":"text","text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,"},{"type":"text","text":" "},{"type":"text","text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful"},{"type":"text","text":" "},{"type":"text","text":"compilation."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"tolerant"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"text":" ","type":"text"},{"text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of","type":"text"},{"text":" ","type":"text"},{"text":"partial code snippets.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"text":": This mode aims to strike a balance between ","type":"text"},{"type":"codeVoice","code":"strict"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"text":". It attempts to fix up minor errors in the source code while","type":"text"},{"type":"text","text":" "},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"type":"text","text":"for smoother traversal. However, for major errors, it behaves like the "},{"type":"codeVoice","code":"strict"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"type":"text","text":" "},{"text":"with code that may","type":"text"},{"type":"text","text":" "},{"text":"contain minor errors, but is largely well-formed.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"viewMode","type":"codeVoice"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" holds the chosen "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" value for the instance and its child nodes."}]}]}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding"]]},"sections":[],"metadata":{"modules":[{"name":"SyntaxSparrow"}],"required":true,"symbolKind":"property","externalID":"s:13SyntaxSparrow0A24ExplorerContextProvidingP8viewMode05SwiftA00a8TreeViewG0Ovp","title":"viewMode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"roleHeading":"Instance Property","role":"symbol"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContextProviding/viewMode":{"title":"viewMode","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/viewmode","abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding\/viewMode"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxExplorerContextProviding":{"title":"SyntaxExplorerContextProviding","role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxExplorerContextProviding","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"SyntaxExplorerContextProviding","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxExplorerContextProviding"}}}