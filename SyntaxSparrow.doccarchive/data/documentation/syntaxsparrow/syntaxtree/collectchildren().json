{"metadata":{"symbolKind":"method","title":"collectChildren()","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"()"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:13SyntaxSparrow0A4TreeC15collectChildrenyyF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"collectChildren","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"code":["struct MyStruct {","  struct NestedStruct { ... }","  enum NestedEnum { ... }","}","enum MyEnum {","  case example","  static func performOperation() { ... }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"After invoking ","type":"text"},{"type":"codeVoice","code":"walk"},{"text":", the results will be:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"structures","type":"codeVoice"},{"text":" will contain: ","type":"text"},{"type":"codeVoice","code":"[MyStruct]"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"enumerations"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[MyEnum]"},{"text":" ","type":"text"},{"text":"Furthermore, ","type":"text"},{"code":"MyStruct","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"MyEnum"},{"type":"text","text":" will provide access to their child semantics."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"MyStruct.structures"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[NestedStruct]"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"MyStruct.enumerations"},{"text":" will contain: ","type":"text"},{"code":"[NestedEnum]","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"MyEnum.functions"},{"text":" will contain: ","type":"text"},{"type":"codeVoice","code":"[performOperation]"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Thus, "},{"type":"codeVoice","code":"walk"},{"text":" facilitates a hierarchical exploration of the syntax tree.","type":"text"}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"abstract":[{"text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"text":" ","type":"text"},{"type":"text","text":"Consider the following example:"}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/collectChildren()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"()"}],"role":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","url":"\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()","type":"topic","kind":"symbol","abstract":[{"text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"text":"Consider the following example:","type":"text"}],"title":"collectChildren()"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"title":"SyntaxTree","navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTree"}]}}}