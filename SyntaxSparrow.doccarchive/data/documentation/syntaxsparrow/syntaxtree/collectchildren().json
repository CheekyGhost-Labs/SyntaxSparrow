{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["struct MyStruct {","  struct NestedStruct { ... }","  enum NestedEnum { ... }","}","enum MyEnum {","  case example","  static func performOperation() { ... }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After invoking "},{"type":"codeVoice","code":"walk"},{"type":"text","text":", the results will be:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"structures"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[MyStruct]"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"enumerations"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[MyEnum]"},{"type":"text","text":" "},{"type":"text","text":"Furthermore, "},{"type":"codeVoice","code":"MyStruct"},{"type":"text","text":" and "},{"type":"codeVoice","code":"MyEnum"},{"type":"text","text":" will provide access to their child semantics."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MyStruct.structures"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[NestedStruct]"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MyStruct.enumerations"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[NestedEnum]"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MyEnum.functions"},{"type":"text","text":" will contain: "},{"type":"codeVoice","code":"[performOperation]"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Thus, "},{"type":"codeVoice","code":"walk"},{"type":"text","text":" facilitates a hierarchical exploration of the syntax tree."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays."},{"type":"text","text":" "},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"type":"text","text":"Consider the following example:"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"title":"collectChildren()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:13SyntaxSparrow0A4TreeC15collectChildrenyyKF","modules":[{"name":"SyntaxSparrow"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/collectChildren()":{"role":"symbol","title":"collectChildren()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays."},{"type":"text","text":" "},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"type":"text","text":"Consider the following example:"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"role":"collection","title":"SyntaxSparrow","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"role":"symbol","title":"SyntaxTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxTree"}],"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxTree"}],"url":"\/documentation\/syntaxsparrow\/syntaxtree"}}}