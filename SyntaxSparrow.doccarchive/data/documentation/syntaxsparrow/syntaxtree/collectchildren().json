{"abstract":[{"type":"text","text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays."},{"text":" ","type":"text"},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"type":"text","text":"Consider the following example:"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"text":"()","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["struct MyStruct {","  struct NestedStruct { ... }","  enum NestedEnum { ... }","}","enum MyEnum {","  case example","  static func performOperation() { ... }","}"]},{"inlineContent":[{"text":"After invoking ","type":"text"},{"type":"codeVoice","code":"walk"},{"type":"text","text":", the results will be:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"structures","type":"codeVoice"},{"text":" will contain: ","type":"text"},{"type":"codeVoice","code":"[MyStruct]"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"enumerations"},{"text":" will contain: ","type":"text"},{"type":"codeVoice","code":"[MyEnum]"},{"text":" ","type":"text"},{"type":"text","text":"Furthermore, "},{"type":"codeVoice","code":"MyStruct"},{"type":"text","text":" and "},{"type":"codeVoice","code":"MyEnum"},{"text":" will provide access to their child semantics.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"MyStruct.structures"},{"text":" will contain: ","type":"text"},{"code":"[NestedStruct]","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"MyStruct.enumerations","type":"codeVoice"},{"type":"text","text":" will contain: "},{"code":"[NestedEnum]","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"MyEnum.functions"},{"text":" will contain: ","type":"text"},{"code":"[performOperation]","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Thus, "},{"type":"codeVoice","code":"walk"},{"type":"text","text":" facilitates a hierarchical exploration of the syntax tree."}]}]}],"metadata":{"roleHeading":"Instance Method","externalID":"s:13SyntaxSparrow0A4TreeC15collectChildrenyyF","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"collectChildren","kind":"identifier"},{"kind":"text","text":"()"}],"symbolKind":"method","title":"collectChildren()","role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/collectChildren()":{"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"()"}],"title":"collectChildren()","url":"\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()","role":"symbol","type":"topic","abstract":[{"text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"type":"text","text":"Consider the following example:"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"title":"SyntaxTree","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"}}}