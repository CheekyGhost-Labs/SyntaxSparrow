{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"declaration(of:fromSyntax:viewMode:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"declaration"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"fromSyntax"},{"text":": ","kind":"text"},{"text":"DeclSyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","text":"T"},{"text":"?","kind":"text"}],"role":"symbol","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ","extendedModule":"SyntaxSparrow","symbolKind":"method","roleHeading":"Type Method"},"abstract":[{"text":"Will assess and process the given declaration syntax protocol and convert it into the provided declaration type (if possible).","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/declaration(of:fromsyntax:viewmode:)"]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/declaration(of:fromSyntax:viewMode:)","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"declaration"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"type"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","text":"T"},{"text":".Type, ","kind":"text"},{"text":"fromSyntax","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"declarationSyntax","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"DeclSyntaxProtocol","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"viewMode"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":" = .fixedUp) -> ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"? "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","text":"Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration"},{"type":"text","text":" conforming type to parse into."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The raw "},{"type":"codeVoice","code":"DeclSyntaxProtocol"},{"type":"text","text":" from "},{"type":"codeVoice","code":"SwiftSyntax"}],"type":"paragraph"}],"name":"declarationSyntax"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The view mode to use when iterating children or related parsing processes","type":"text"}]}],"name":"viewMode"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"T","type":"codeVoice"},{"type":"text","text":" or "},{"type":"codeVoice","code":"nil"}]}]}],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/declaration(of:fromSyntax:viewMode:)":{"title":"declaration(of:fromSyntax:viewMode:)","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree\/declaration(of:fromsyntax:viewmode:)","abstract":[{"text":"Will assess and process the given declaration syntax protocol and convert it into the provided declaration type (if possible).","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"declaration","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"fromSyntax"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DeclSyntaxProtocol","preciseIdentifier":"s:11SwiftSyntax04DeclB8ProtocolP"},{"kind":"text","text":", "},{"text":"viewMode","kind":"externalParam"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A4TreeC11declaration2of04fromA08viewModexSgxm_05SwiftA004DeclA8Protocol_pAI0ac4ViewH0OtAA11DeclarationRzlFZ1TL_xmfp","text":"T"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/declaration(of:fromSyntax:viewMode:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"title":"Declaration","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","url":"\/documentation\/syntaxsparrow\/declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"title":"SyntaxTree","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","kind":"symbol"}}}