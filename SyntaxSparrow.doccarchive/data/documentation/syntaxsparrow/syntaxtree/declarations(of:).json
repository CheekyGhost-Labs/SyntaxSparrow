{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"declarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":" "},{"text":"type","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) -> ["},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":"] "},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Declaration","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration"},{"text":" conforming type to parse into.","type":"text"}]}]}]},{"content":[{"type":"heading","level":2,"text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Array containing any instances matching the "},{"code":"T","type":"codeVoice"},{"type":"text","text":" constraint"}]}],"kind":"content"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Note:"}]},{"text":" You need to have run ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","isActive":true,"type":"reference"},{"text":" first to obtain accurate results.","type":"text"}]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/declarations(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/declarations(of:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Will assess the given declaration type and return the corresponding array of items from the current syntax tree."}],"metadata":{"role":"symbol","title":"declarations(of:)","extendedModule":"SyntaxSparrow","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"declarations"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"externalID":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF","modules":[{"name":"SyntaxSparrow"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"title":"SyntaxTree","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/declarations(of:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/declarations(of:)","title":"declarations(of:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"declarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp","text":"T","kind":"typeIdentifier"},{"kind":"text","text":".Type) -> ["},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A4TreeC12declarations2ofSayxGxm_tAA11DeclarationRzlF1TL_xmfp"},{"kind":"text","text":"]"}],"abstract":[{"text":"Will assess the given declaration type and return the corresponding array of items from the current syntax tree.","type":"text"}],"url":"\/documentation\/syntaxsparrow\/syntaxtree\/declarations(of:)"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"title":"Declaration","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","url":"\/documentation\/syntaxsparrow\/declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/collectChildren()":{"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/collectChildren()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"collectChildren"},{"kind":"text","text":"()"}],"title":"collectChildren()","url":"\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()","role":"symbol","type":"topic","abstract":[{"text":"This method walks through the syntax tree and collects root-level semantic declarations into their respective arrays.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The exploration will stop at the respective source level for each semantic structure, as some declarations also support further exploration."},{"type":"text","text":" "},{"type":"text","text":"Consider the following example:"}]}}}