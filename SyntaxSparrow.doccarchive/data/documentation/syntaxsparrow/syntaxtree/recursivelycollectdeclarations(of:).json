{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"type","kind":"internalParam"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"kind":"text","text":"] "},{"kind":"keyword","text":"where"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","preciseIdentifier":"s:13SyntaxSparrow11DeclarationP","kind":"typeIdentifier","text":"Declaration"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type to collect"}]}]}]},{"content":[{"anchor":"return-value","level":2,"text":"Return Value","type":"heading"},{"inlineContent":[{"type":"text","text":"Array of the inferred "},{"type":"codeVoice","code":"Declaration"},{"type":"text","text":" type"}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Note: Declarations are returned ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"in order of declaration"}]}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example,","type":"text"}]},{"syntax":"swift","code":["enum Container {","   struct NestedStruct {","       struct NestedStructTwo {","           enum NestedContainer {}","       }","   }","}","struct RootLevelStruct {}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If you invoke the ","type":"text"},{"type":"codeVoice","code":"recursivelyCollectDeclarations(Structure.self)"},{"text":" helper on the root ","type":"text"},{"code":"SyntaxTree","type":"codeVoice"},{"text":" instance would return:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"["},{"type":"codeVoice","code":"Structure<NesedStruct>"},{"text":", ","type":"text"},{"code":"Structure<NestedStructTwo>","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Structure<RootLevelStruct>"},{"text":"]","type":"text"},{"type":"text","text":" "},{"type":"text","text":"if you invoke the helper on the "},{"code":"tree.enumerations[0]","type":"codeVoice"},{"text":" instance would return:","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"[","type":"text"},{"code":"Structure<NesedStruct>","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Structure<NestedStructTwo>"},{"text":"]","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/SyntaxChildCollecting-Implementations"]]},"abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"type":"strong","inlineContent":[{"text":"on the current declaration","type":"text"}]},{"text":" for the given type and return them in a flattened array.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/recursivelyCollectDeclarations(of:)"},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/recursivelycollectdeclarations(of:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","extendedModule":"SyntaxSparrow","modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF::SYNTHESIZED::s:13SyntaxSparrow0A4TreeC","symbolKind":"method","roleHeading":"Instance Method","title":"recursivelyCollectDeclarations(of:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"title":"SyntaxTree","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/SyntaxChildCollecting-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","title":"SyntaxChildCollecting Implementations","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/SyntaxChildCollecting-Implementations","url":"\/documentation\/syntaxsparrow\/syntaxtree\/syntaxchildcollecting-implementations"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Declaration":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol that any public semantic declarations will conform to. A declaration is considered a semantic element that represents items such as struct, protocol, class, enum, etc"}],"title":"Declaration","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Declaration","url":"\/documentation\/syntaxsparrow\/declaration","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Declaration"}],"navigatorTitle":[{"text":"Declaration","kind":"identifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/recursivelyCollectDeclarations(of:)":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"recursivelyCollectDeclarations","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp"},{"text":".Type) -> [","kind":"text"},{"preciseIdentifier":"s:13SyntaxSparrow0A15ChildCollectingPAAE30recursivelyCollectDeclarations2ofSayqd__Gqd__m_tAA11DeclarationRd__lF1TL_qd__mfp","kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]"}],"title":"recursivelyCollectDeclarations(of:)","abstract":[{"type":"text","text":"Will recursively iterate through the collected declarations "},{"inlineContent":[{"type":"text","text":"on the current declaration"}],"type":"strong"},{"text":" for the given type and return them in a flattened array.","type":"text"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/recursivelyCollectDeclarations(of:)","url":"\/documentation\/syntaxsparrow\/syntaxtree\/recursivelycollectdeclarations(of:)"}}}