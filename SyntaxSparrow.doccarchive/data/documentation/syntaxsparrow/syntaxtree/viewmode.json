{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode"},"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"text":" is crucial in shaping the behavior of the ","type":"text"},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"type":"text","text":"the appropriate view mode considering the state of the source code being analyzed."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"strict"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful"},{"text":" ","type":"text"},{"text":"compilation.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"tolerant","type":"codeVoice"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"type":"text","text":" "},{"type":"text","text":"partial code snippets."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fixedUp"},{"type":"text","text":": This mode aims to strike a balance between "},{"code":"strict","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"tolerant"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"text":" ","type":"text"},{"text":"parsing, allowing","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for smoother traversal. However, for major errors, it behaves like the "},{"type":"codeVoice","code":"strict"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"type":"text","text":" "},{"type":"text","text":"with code that may"},{"text":" ","type":"text"},{"type":"text","text":"contain minor errors, but is largely well-formed."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" holds the chosen "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"text":" value for the instance and its child nodes.","type":"text"}]}]}],"metadata":{"title":"viewMode","externalID":"s:13SyntaxSparrow0A4TreeC8viewMode05SwiftA00ac4ViewE0Ovp","symbolKind":"property","roleHeading":"Instance Property","modules":[{"name":"SyntaxSparrow"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"role":"symbol"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/viewMode":{"url":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode","title":"viewMode","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"url":"\/documentation\/syntaxsparrow\/syntaxtree","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","title":"SyntaxTree","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SyntaxTree"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SyntaxTree","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"url":"\/documentation\/syntaxsparrow","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","role":"collection","title":"SyntaxSparrow"}}}