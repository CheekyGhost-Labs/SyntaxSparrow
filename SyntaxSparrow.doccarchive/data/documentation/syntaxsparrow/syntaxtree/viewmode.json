{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"metadata":{"roleHeading":"Instance Property","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","title":"viewMode","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"externalID":"s:13SyntaxSparrow0A4TreeC8viewMode05SwiftA00ac4ViewE0Ovp","symbolKind":"property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" during syntax tree traversal. It is critical to choose","type":"text"},{"type":"text","text":" "},{"type":"text","text":"the appropriate view mode considering the state of the source code being analyzed."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"strict"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful"},{"type":"text","text":" "},{"text":"compilation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tolerant"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"text":" ","type":"text"},{"text":"partial code snippets.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"type":"text","text":": This mode aims to strike a balance between "},{"type":"codeVoice","code":"strict"},{"text":" and ","type":"text"},{"code":"tolerant","type":"codeVoice"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"text":" ","type":"text"},{"text":"parsing, allowing","type":"text"},{"type":"text","text":" "},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"type":"codeVoice","code":"strict"},{"text":" mode and throws an error. This mode can be useful when working","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with code that may"},{"type":"text","text":" "},{"type":"text","text":"contain minor errors, but is largely well-formed."}]}]}]},{"inlineContent":[{"text":"The ","type":"text"},{"code":"viewMode","type":"codeVoice"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" holds the chosen ","type":"text"},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"text":" value for the instance and its child nodes.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" handles unexpected or invalid tokens."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"abstract":[],"title":"SyntaxSparrow","kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","role":"collection"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"title":"SyntaxTree","navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SyntaxTree"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/viewMode":{"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"title":"viewMode","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","type":"topic","kind":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"}}}