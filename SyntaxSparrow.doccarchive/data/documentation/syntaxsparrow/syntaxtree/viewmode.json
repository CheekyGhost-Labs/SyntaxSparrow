{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"strict","type":"codeVoice"},{"text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,","type":"text"},{"type":"text","text":" "},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"compilation."}]}]},{"content":[{"inlineContent":[{"code":"tolerant","type":"codeVoice"},{"type":"text","text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the"},{"type":"text","text":" "},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"type":"text","text":" "},{"text":"partial code snippets.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"text":": This mode aims to strike a balance between ","type":"text"},{"code":"strict","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"text":". It attempts to fix up minor errors in the source code while","type":"text"},{"type":"text","text":" "},{"text":"parsing, allowing","type":"text"},{"text":" ","type":"text"},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"type":"codeVoice","code":"strict"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"type":"text","text":" "},{"text":"with code that may","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"contain minor errors, but is largely well-formed."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"viewMode","type":"codeVoice"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"text":" holds the chosen ","type":"text"},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" value for the instance and its child nodes."}]}]}],"kind":"symbol","abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","title":"viewMode","modules":[{"name":"SyntaxSparrow"}],"symbolKind":"property","role":"symbol","externalID":"s:13SyntaxSparrow0A4TreeC8viewMode05SwiftA00ac4ViewE0Ovp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"viewMode"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode"}]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"title":"SyntaxTree","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SyntaxTree","kind":"identifier"}],"navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/viewMode":{"role":"symbol","abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"kind":"symbol","title":"viewMode","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","url":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","text":"SyntaxTreeViewMode","kind":"typeIdentifier"}],"type":"topic"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","kind":"symbol","title":"SyntaxSparrow","role":"collection","abstract":[],"type":"topic"}}}