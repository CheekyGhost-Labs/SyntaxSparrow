{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"type":"text","text":" "},{"type":"text","text":"the appropriate view mode considering the state of the source code being analyzed."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"strict"},{"type":"text","text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,"},{"type":"text","text":" "},{"type":"text","text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful"},{"type":"text","text":" "},{"type":"text","text":"compilation."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"tolerant"},{"type":"text","text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the"},{"type":"text","text":" "},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"type":"text","text":" "},{"type":"text","text":"partial code snippets."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"fixedUp"},{"type":"text","text":": This mode aims to strike a balance between "},{"type":"codeVoice","code":"strict"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"type":"text","text":" "},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"type":"text","text":"for smoother traversal. However, for major errors, it behaves like the "},{"type":"codeVoice","code":"strict"},{"type":"text","text":" mode and throws an error. This mode can be useful when working"},{"type":"text","text":" "},{"type":"text","text":"with code that may"},{"type":"text","text":" "},{"type":"text","text":"contain minor errors, but is largely well-formed."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"viewMode"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" holds the chosen "},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" value for the instance and its child nodes."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"title":"viewMode","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"s:13SyntaxSparrow0A4TreeC8viewMode05SwiftA00ac4ViewE0Ovp","modules":[{"name":"SyntaxSparrow"}]},"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"role":"collection","title":"SyntaxSparrow","abstract":[],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/viewMode":{"role":"symbol","title":"viewMode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"abstract":[{"type":"text","text":"The mode in which the syntax tree is traversed. This influences how the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" handles unexpected or invalid tokens."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"role":"symbol","title":"SyntaxTree","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SyntaxTree"}],"abstract":[{"type":"text","text":"Represents a syntax tree in Swift."}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SyntaxTree"}],"url":"\/documentation\/syntaxsparrow\/syntaxtree"}}}