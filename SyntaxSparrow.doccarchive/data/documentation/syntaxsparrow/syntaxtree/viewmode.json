{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewMode","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier","text":"SyntaxTreeViewMode"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"SyntaxTreeViewMode","type":"codeVoice"},{"type":"text","text":" is crucial in shaping the behavior of the "},{"type":"codeVoice","code":"SyntaxExplorer"},{"type":"text","text":" during syntax tree traversal. It is critical to choose"},{"text":" ","type":"text"},{"text":"the appropriate view mode considering the state of the source code being analyzed.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"code":"strict","type":"codeVoice"},{"type":"text","text":": In this mode, the explorer expects well-formed and valid Swift syntax. If it encounters unexpected or invalid tokens,"},{"text":" ","type":"text"},{"text":"it throws an error and halts the traversal. This mode should be used when the source code is known to be error-free, such as after successful","type":"text"},{"text":" ","type":"text"},{"text":"compilation.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"tolerant","type":"codeVoice"},{"text":": In this mode, the explorer is more lenient and tries to recover from unexpected or invalid tokens, continuing the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"traversal as best as it can. This mode should be used when the source code might contain errors, such as during editing or in the case of"},{"type":"text","text":" "},{"type":"text","text":"partial code snippets."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"fixedUp","type":"codeVoice"},{"type":"text","text":": This mode aims to strike a balance between "},{"type":"codeVoice","code":"strict"},{"type":"text","text":" and "},{"type":"codeVoice","code":"tolerant"},{"type":"text","text":". It attempts to fix up minor errors in the source code while"},{"text":" ","type":"text"},{"type":"text","text":"parsing, allowing"},{"type":"text","text":" "},{"text":"for smoother traversal. However, for major errors, it behaves like the ","type":"text"},{"type":"codeVoice","code":"strict"},{"text":" mode and throws an error. This mode can be useful when working","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with code that may"},{"type":"text","text":" "},{"type":"text","text":"contain minor errors, but is largely well-formed."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"The ","type":"text"},{"code":"viewMode","type":"codeVoice"},{"type":"text","text":" property of the "},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" holds the chosen ","type":"text"},{"type":"codeVoice","code":"SyntaxTreeViewMode"},{"type":"text","text":" value for the instance and its child nodes."}],"type":"paragraph"}]}],"abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"viewMode","modules":[{"name":"SyntaxSparrow"}],"role":"symbol","externalID":"s:13SyntaxSparrow0A4TreeC8viewMode05SwiftA00ac4ViewE0Ovp","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO","kind":"typeIdentifier"}],"symbolKind":"property"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/syntaxsparrow\/syntaxtree\/viewmode"]}],"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree/viewMode":{"title":"viewMode","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree\/viewMode","kind":"symbol","url":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode","abstract":[{"text":"The mode in which the syntax tree is traversed. This influences how the ","type":"text"},{"code":"SyntaxExplorer","type":"codeVoice"},{"text":" handles unexpected or invalid tokens.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"viewMode","kind":"identifier"},{"kind":"text","text":": "},{"text":"SyntaxTreeViewMode","kind":"typeIdentifier","preciseIdentifier":"s:11SwiftSyntax0B12TreeViewModeO"}],"role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/SyntaxTree":{"title":"SyntaxTree","type":"topic","url":"\/documentation\/syntaxsparrow\/syntaxtree","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/SyntaxTree","role":"symbol","navigatorTitle":[{"text":"SyntaxTree","kind":"identifier"}],"abstract":[{"text":"Represents a syntax tree in Swift.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SyntaxTree","kind":"identifier"}]}}}