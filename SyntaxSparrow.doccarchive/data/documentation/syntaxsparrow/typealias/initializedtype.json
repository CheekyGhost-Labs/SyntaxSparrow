{"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"initializedType","symbolKind":"property","role":"symbol","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initializedType"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType"}],"modules":[{"name":"SyntaxSparrow"}],"externalID":"s:13SyntaxSparrow9TypealiasV15initializedTypeAA06EntityE0Ovp"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"initializedType","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","text":"EntityType"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"For example, in the following declarations"}],"type":"paragraph"},{"syntax":"swift","code":["typealias Sample = Int","typealias OtherSample","typealias CustomThing = (name: String, age: Int)"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The first declaration has an initialized type of ","type":"text"},{"code":".simple(\"Int\")","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The second declaration has an initialized type of ","type":"text"},{"type":"codeVoice","code":".empty"},{"type":"text","text":" as it is only partially defined"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The third declaration has no initialized type of "},{"code":".tuple(Tuple)","type":"codeVoice"}],"type":"paragraph"}]}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/syntaxsparrow\/typealias\/initializedtype"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","abstract":[{"text":"The initialized type, if any.","type":"text"}],"identifier":{"url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias\/initializedType","interfaceLanguage":"swift"},"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/Typealias":{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Typealias","kind":"identifier"}],"abstract":[{"type":"text","text":"Represents a Swift typealias declaration."}],"navigatorTitle":[{"text":"Typealias","kind":"identifier"}],"title":"Typealias","type":"topic","url":"\/documentation\/syntaxsparrow\/typealias","kind":"symbol","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Typealias/initializedType":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initializedType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}],"url":"\/documentation\/syntaxsparrow\/typealias\/initializedtype","kind":"symbol","abstract":[{"type":"text","text":"The initialized type, if any."}],"title":"initializedType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias\/initializedType","type":"topic","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"simple","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","role":"symbol","title":"EntityType.simple(_:)","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"simple"},{"text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax.","type":"text"},{"text":" ","type":"text"},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"text":" This is also used for any unsupported syntax types. i.e ","type":"text"},{"type":"codeVoice","code":"CVarArg"},{"text":" is not currently supported so it will use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":".simple(\"CVarArg...\")"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"title":"SyntaxSparrow","role":"collection","url":"\/documentation\/syntaxsparrow","kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","type":"topic","abstract":[]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"EntityType","kind":"identifier"}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"EntityType","kind":"identifier"}],"url":"\/documentation\/syntaxsparrow\/entitytype","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","role":"symbol","title":"EntityType","abstract":[{"type":"text","text":"An "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" represents a type being referenced by a property or parameter. It is encapsulated in the "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference","isActive":true},{"type":"text","text":" "},{"text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties.","type":"text"},{"text":" ","type":"text"},{"text":"By default a ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","type":"reference","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"text":" ","type":"text"},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"code":"EntityType","type":"codeVoice"}]}}}