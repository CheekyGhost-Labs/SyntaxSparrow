{"variants":[{"paths":["\/documentation\/syntaxsparrow\/typealias\/initializedtype"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","metadata":{"externalID":"s:13SyntaxSparrow9TypealiasV15initializedTypeAA06EntityE0Ovp","title":"initializedType","role":"symbol","symbolKind":"property","modules":[{"name":"SyntaxSparrow"}],"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initializedType"},{"text":": ","kind":"text"},{"text":"EntityType","kind":"typeIdentifier","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias\/initializedType"},"abstract":[{"text":"The initialized type, if any.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"initializedType"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"text":"For example, in the following declarations","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["typealias Sample = Int","typealias OtherSample","typealias CustomThing = (name: String, age: Int)"]},{"items":[{"content":[{"inlineContent":[{"text":"The first declaration has an initialized type of ","type":"text"},{"type":"codeVoice","code":".simple(\"Int\")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The second declaration has an initialized type of ","type":"text"},{"code":".empty","type":"codeVoice"},{"type":"text","text":" as it is only partially defined"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The third declaration has no initialized type of ","type":"text"},{"code":".tuple(Tuple)","type":"codeVoice"}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias"]]},"sections":[],"references":{"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType":{"abstract":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"reference"},{"text":" represents a type being referenced by a property or parameter. It is encapsulated in the ","type":"text"},{"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","isActive":true,"type":"reference"},{"type":"text","text":" "},{"type":"text","text":"enumeration to provide a more simple entry point when working with sets of parameter inputs and properties."},{"type":"text","text":" "},{"type":"text","text":"By default a "},{"type":"reference","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","isActive":true},{"text":" type will be used with a string representation of the declared type.","type":"text"},{"type":"text","text":" "},{"text":"Initial support for some complex types, such as closures, tuples, and results is provided.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"As support for more complex types are added they will be added as a dedicated enumeration case to the "},{"type":"codeVoice","code":"EntityType"}],"identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType","type":"topic","title":"EntityType","kind":"symbol","role":"symbol","url":"\/documentation\/syntaxsparrow\/entitytype","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EntityType"}],"navigatorTitle":[{"text":"EntityType","kind":"identifier"}]},"doc://SyntaxSparrow/documentation/SyntaxSparrow/EntityType/simple(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/EntityType\/simple(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"simple","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"url":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"simple"},{"type":"text","text":" type refers to a standard swift type canâ€™t does not have any nested or related syntax."},{"type":"text","text":" "},{"inlineContent":[{"text":"Note:","type":"text"}],"type":"strong"},{"type":"text","text":" This is also used for any unsupported syntax types. i.e "},{"type":"codeVoice","code":"CVarArg"},{"type":"text","text":" is not currently supported so it will use the"},{"type":"text","text":" "},{"code":".simple(\"CVarArg...\")","type":"codeVoice"}],"title":"EntityType.simple(_:)","role":"symbol"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Typealias":{"url":"\/documentation\/syntaxsparrow\/typealias","type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Typealias","kind":"identifier"}],"title":"Typealias","abstract":[{"text":"Represents a Swift typealias declaration.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Typealias"}],"kind":"symbol","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias"},"doc://SyntaxSparrow/documentation/SyntaxSparrow":{"kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow","url":"\/documentation\/syntaxsparrow","abstract":[],"title":"SyntaxSparrow"},"doc://SyntaxSparrow/documentation/SyntaxSparrow/Typealias/initializedType":{"role":"symbol","abstract":[{"type":"text","text":"The initialized type, if any."}],"type":"topic","title":"initializedType","identifier":"doc:\/\/SyntaxSparrow\/documentation\/SyntaxSparrow\/Typealias\/initializedType","url":"\/documentation\/syntaxsparrow\/typealias\/initializedtype","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"initializedType","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SyntaxSparrow10EntityTypeO","kind":"typeIdentifier","text":"EntityType"}],"kind":"symbol"}}}