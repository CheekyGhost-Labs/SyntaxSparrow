{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/==(_:_:)","title":"static func == (GenericParameter, GenericParameter) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/init(node:)","title":"init(node: GenericParameterSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/type","title":"var type: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/fromparameterlist(from:)","title":"static func fromParameterList(from: GenericParameterListSyntax?) -> [GenericParameter]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericparameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/genericparameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/genericparameter","title":"GenericParameter","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/==(_:_:)","title":"static func == (GenericRequirement, GenericRequirement) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/init(_:)","title":"init(GenericRequirementSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/lefttypeidentifier","title":"var leftTypeIdentifier: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.property","title":"var relation: Relation","type":"property"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/righttypeidentifier","title":"var rightTypeIdentifier: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/fromrequirementlist(from:)","title":"static func fromRequirementList(from: GenericRequirementListSyntax?) -> [GenericRequirement]","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/conformance","title":"case conformance","type":"case"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/layout","title":"case layout","type":"case"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/sametype","title":"case sameType","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/genericrequirement\/relation-swift.enum","title":"GenericRequirement.Relation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/genericrequirement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/genericrequirement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/genericrequirement","title":"GenericRequirement","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/init(file:source:)","title":"init(file: String, source: String)","type":"init"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/init(file:tree:)","title":"init(file: String, tree: SyntaxProtocol)","type":"init"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/init(rootparentof:file:)","title":"init(rootParentOf: SyntaxProtocol, file: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/endlocationfornode(_:)","title":"func endLocationForNode(SyntaxProtocol) -> SyntaxSourceLocation.Position","type":"method"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/locationfornode(_:)","title":"func locationForNode(SyntaxProtocol) -> SyntaxSourceLocation","type":"method"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/startlocationfornode(_:)","title":"func startLocationForNode(SyntaxProtocol) -> SyntaxSourceLocation.Position","type":"method"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/udpateforsource(_:file:)","title":"func udpateForSource(String, file: String)","type":"method"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/updatefortree(_:file:)","title":"func updateForTree(SyntaxProtocol, file: String)","type":"method"},{"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter\/updatetorootfornode(_:file:)","title":"func updateToRootForNode(SyntaxProtocol, file: String)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/sparrowsourcelocationconverter","title":"SparrowSourceLocationConverter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/init(viewmode:sourceatpath:)","title":"init(viewMode: SyntaxTreeViewMode, sourceAtPath: String) throws","type":"init"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/init(viewmode:sourcebuffer:)","title":"init(viewMode: SyntaxTreeViewMode, sourceBuffer: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/context","title":"var context: SyntaxExplorerContext","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/isstale","title":"var isStale: Bool","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/sourcebuffer","title":"var sourceBuffer: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/sourcelocationconverter","title":"var sourceLocationConverter: SparrowSourceLocationConverter","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/variables","title":"var variables: [Variable]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/viewmode","title":"var viewMode: SyntaxTreeViewMode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/collectchildren()","title":"func collectChildren() throws","type":"method"},{"path":"\/documentation\/syntaxsparrow\/syntaxtree\/updatetosource(_:)","title":"func updateToSource(String)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/syntaxtree","title":"SyntaxTree","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/declaration\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/declaration\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/declaration\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/declaration\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/declaration\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/declaration","title":"Declaration","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting\/variables","title":"var variables: [Variable]","type":"property"}],"path":"\/documentation\/syntaxsparrow\/syntaxchildcollecting","title":"SyntaxChildCollecting","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/isstale","title":"var isStale: Bool","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/sourcebuffer","title":"var sourceBuffer: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/sourcelocationconverter","title":"var sourceLocationConverter: SparrowSourceLocationConverter","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding\/viewmode","title":"var viewMode: SyntaxTreeViewMode","type":"property"}],"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontextproviding","title":"SyntaxExplorerContextProviding","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocationresolving\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"}],"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocationresolving","title":"SyntaxSourceLocationResolving","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/==(_:_:)","title":"static func == (Accessor, Accessor) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/init(_:)","title":"init(AccessorDeclSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/attributes","title":"let attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/accessor\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.property","title":"let kind: Kind?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/accessor\/modifier","title":"let modifier: Modifier?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/get","title":"case get","type":"case"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/set","title":"case set","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/accessor\/kind-swift.enum","title":"Accessor.Kind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/accessor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/accessor\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/accessor","title":"Accessor","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/==(_:_:)","title":"static func == (AssociatedType, AssociatedType) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/init(node:context:)","title":"init(node: AssociatedtypeDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/associatedtype\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/associatedtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/associatedtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/associatedtype","title":"AssociatedType","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/init(name:value:)","title":"init(name: String?, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/attribute\/argument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/attribute\/argument","title":"Attribute.Argument","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/==(_:_:)","title":"static func == (Attribute, Attribute) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/init(_:)","title":"init(AttributeSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/arguments","title":"var arguments: [Argument]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/attribute\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/attribute\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/fromattributelist(_:)","title":"static func fromAttributeList(AttributeListSyntax?) -> [Attribute]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/attribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/attribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/attribute","title":"Attribute","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/==(_:_:)","title":"static func == (Class, Class) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/init(node:context:)","title":"init(node: ClassDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/class\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/class\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/class\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/class\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/class\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/class\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/class","title":"Class","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/closure\/==(_:_:)","title":"static func == (Closure, Closure) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/closure\/init(node:)","title":"init(node: FunctionTypeSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/closure\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/closure\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/closure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/closure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/closure","title":"Closure","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/==(_:_:)","title":"static func == (Branch, Branch) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/init(node:context:)","title":"init(node: IfConfigClauseSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/condition","title":"var condition: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.property","title":"var keyword: Keyword","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/else","title":"case `else`","type":"case"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/elseif","title":"case elseif","type":"case"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/if","title":"case `if`","type":"case"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/unsupported(keyword:)","title":"case unsupported(keyword: String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/keyword-swift.enum","title":"ConditionalCompilationBlock.Branch.Keyword","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branch","title":"ConditionalCompilationBlock.Branch","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/==(_:_:)","title":"static func == (ConditionalCompilationBlock, ConditionalCompilationBlock) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/init(node:context:)","title":"init(node: IfConfigDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/branches","title":"var branches: [Branch]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/conditionalcompilationblock","title":"ConditionalCompilationBlock","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/==(_:_:)","title":"static func == (Deinitializer, Deinitializer) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/init(node:context:)","title":"init(node: DeinitializerDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/deinitializer\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/deinitializer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/deinitializer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/deinitializer","title":"Deinitializer","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/==(_:_:)","title":"static func == (Case, Case) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/init(node:context:)","title":"init(node: EnumCaseElementSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/associatedvalues","title":"var associatedValues: [Parameter]?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/rawvalue","title":"var rawValue: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/enumeration\/case\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/enumeration\/case","title":"Enumeration.Case","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/==(_:_:)","title":"static func == (Enumeration, Enumeration) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/init(node:context:)","title":"init(node: EnumDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/cases","title":"var cases: [Enumeration.Case]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/enumeration\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/enumeration\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/enumeration\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/enumeration","title":"Enumeration","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/==(_:_:)","title":"static func == (Extension, Extension) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/init(node:context:)","title":"init(node: ExtensionDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/extendedtype","title":"var extendedType: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/extension\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/extension\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/extension\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/extension\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/extension\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/extension\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/extension","title":"Extension","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/input","title":"let input: [Parameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/output","title":"let output: EntityType?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/throwsorrethrowskeyword","title":"let throwsOrRethrowsKeyword: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.struct","title":"Function.Signature","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/==(_:_:)","title":"static func == (Function, Function) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/init(node:context:)","title":"init(node: FunctionDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/isoperator","title":"var isOperator: Bool","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/signature-swift.property","title":"var signature: Function.Signature","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/function\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/function\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/function\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/function\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/function\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/function\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/function","title":"Function","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/==(_:_:)","title":"static func == (Import, Import) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/init(node:context:)","title":"init(node: ImportDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/kind","title":"var kind: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/pathcomponents","title":"var pathComponents: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/import\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/import\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/import\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/import\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/import\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/import\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/import","title":"Import","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/==(_:_:)","title":"static func == (Initializer, Initializer) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/init(node:context:)","title":"init(node: InitializerDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/optional","title":"let optional: Bool","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/parameters","title":"var parameters: [Parameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/throwsorrethrowskeyword","title":"var throwsOrRethrowsKeyword: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/initializer\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/initializer\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/initializer\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/initializer\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/initializer\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/initializer\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/initializer","title":"Initializer","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/modifier\/==(_:_:)","title":"static func == (Modifier, Modifier) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/modifier\/init(_:)","title":"init(DeclModifierSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/modifier\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/modifier\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/modifier\/detail","title":"var detail: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/modifier\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/modifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/modifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/modifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/modifier","title":"Modifier","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/==(_:_:)","title":"static func == (Operator, Operator) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/init(_:context:)","title":"init(OperatorDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.property","title":"var kind: Kind","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/operator\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/infix","title":"case infix","type":"case"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/postfix","title":"case postfix","type":"case"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/prefix","title":"case prefix","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/init(_:)","title":"init?([Modifier])","type":"init"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/operator\/kind-swift.enum","title":"Operator.Kind","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/operator\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/operator\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/operator\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/operator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/operator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/operator","title":"Operator","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/parameter\/==(_:_:)","title":"static func == (Parameter, Parameter) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/parameter\/init(_:)-102g6","title":"init(FunctionParameterSyntax)","type":"init"},{"path":"\/documentation\/syntaxsparrow\/parameter\/init(_:)-75pj4","title":"init(TupleTypeElementSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/parameter\/description","title":"var description: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/parameter\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/parameter\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/parameter\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/parameter","title":"Parameter","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/==(_:_:)","title":"static func == (PrecedenceGroup, PrecedenceGroup) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/init(node:context:)","title":"init(node: PrecedenceGroupDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/assignment","title":"var assignment: Bool?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.property","title":"var associativity: Associativity?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relations","title":"var relations: [Relation]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/left","title":"case left","type":"case"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/right","title":"case right","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/associativity-swift.enum","title":"PrecedenceGroup.Associativity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relation\/higherthan(_:)","title":"case higherThan([String])","type":"case"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relation\/lowerthan(_:)","title":"case lowerThan([String])","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/relation","title":"PrecedenceGroup.Relation","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/precedencegroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/precedencegroup","title":"PrecedenceGroup","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/==(_:_:)","title":"static func == (Protocol, Protocol) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/init(node:context:)","title":"init(node: ProtocolDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/associatedtypes","title":"var associatedTypes: [AssociatedType]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/primaryassociatedtypes","title":"var primaryAssociatedTypes: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/protocol\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/protocol\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/protocol\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/protocol\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/protocol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/protocol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/protocol","title":"Protocol","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/result\/==(_:_:)","title":"static func == (Result, Result) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/result\/init(_:)","title":"init?(SimpleTypeIdentifierSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/result\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/result\/failuretype","title":"var failureType: EntityType","type":"property"},{"path":"\/documentation\/syntaxsparrow\/result\/successtype","title":"var successType: EntityType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/result\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/result\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/result\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/result","title":"Result","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/==(_:_:)","title":"static func == (Structure, Structure) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/init(node:context:)","title":"init(node: StructDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/inheritance","title":"var inheritance: [String]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/classes","title":"var classes: [Class]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/conditionalcompilationblocks","title":"var conditionalCompilationBlocks: [ConditionalCompilationBlock]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/deinitializers","title":"var deinitializers: [Deinitializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/enumerations","title":"var enumerations: [Enumeration]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/extensions","title":"var extensions: [Extension]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/functions","title":"var functions: [Function]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/imports","title":"var imports: [Import]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/initializers","title":"var initializers: [Initializer]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/operators","title":"var operators: [Operator]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/precedencegroups","title":"var precedenceGroups: [PrecedenceGroup]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/protocols","title":"var protocols: [Protocol]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/structures","title":"var structures: [Structure]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/subscripts","title":"var subscripts: [Subscript]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/typealiases","title":"var typealiases: [Typealias]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/structure\/variables","title":"var variables: [Variable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/structure\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/structure\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/structure\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/structure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/structure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/structure","title":"Structure","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/==(_:_:)","title":"static func == (Subscript, Subscript) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/init(node:context:)","title":"init(node: SubscriptDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/accessors","title":"var accessors: [Accessor]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/indices","title":"var indices: [Parameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/returntype","title":"var returnType: EntityType","type":"property"},{"path":"\/documentation\/syntaxsparrow\/subscript\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/subscript\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/subscript\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/subscript\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/subscript\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/subscript\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/subscript","title":"Subscript","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/init(viewmode:sourcebuffer:sourcelocationconverter:isstale:)","title":"init(viewMode: SyntaxTreeViewMode, sourceBuffer: String?, sourceLocationConverter: SparrowSourceLocationConverter?, isStale: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/isstale","title":"var isStale: Bool","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/sourcebuffer","title":"var sourceBuffer: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/sourcelocationconverter","title":"var sourceLocationConverter: SparrowSourceLocationConverter","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext\/viewmode","title":"var viewMode: SyntaxTreeViewMode","type":"property"}],"path":"\/documentation\/syntaxsparrow\/syntaxexplorercontext","title":"SyntaxExplorerContext","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/init(line:offset:utf8offset:)","title":"init(line: Int?, offset: Int?, utf8Offset: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/column","title":"let column: Int?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/line","title":"let line: Int?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/utf8offset","title":"let utf8Offset: Int?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/empty","title":"static let empty: Position","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/position","title":"SyntaxSourceLocation.Position","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/end","title":"let end: Position","type":"property"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/start","title":"let start: Position","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/empty","title":"static let empty: SyntaxSourceLocation","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/syntaxsourcelocation","title":"SyntaxSourceLocation","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/tuple\/==(_:_:)","title":"static func == (Tuple, Tuple) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/tuple\/init(_:)","title":"init(TupleTypeSyntax)","type":"init"},{"path":"\/documentation\/syntaxsparrow\/tuple\/init(node:)","title":"init(node: TupleTypeElementListSyntax)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/tuple\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/tuple\/elements","title":"var elements: [Parameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/tuple\/isoptional","title":"var isOptional: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/tuple\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/tuple\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/tuple\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/tuple","title":"Tuple","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/==(_:_:)","title":"static func == (Typealias, Typealias) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/init(node:context:)","title":"init(node: TypealiasDeclSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/genericparameters","title":"var genericParameters: [GenericParameter]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/genericrequirements","title":"var genericRequirements: [GenericRequirement]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/initializedtype","title":"var initializedType: EntityType","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/typealias\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/typealias\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/typealias\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/typealias\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/typealias\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/typealias\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/typealias","title":"Typealias","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/==(_:_:)","title":"static func == (Variable, Variable) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/init(node:context:)","title":"init(node: PatternBindingSyntax, context: SyntaxExplorerContext)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/accessors","title":"var accessors: [Accessor]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/attributes","title":"var attributes: [Attribute]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/initializedtype","title":"var initializedType: String?","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/keyword","title":"var keyword: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/modifiers","title":"var modifiers: [Modifier]","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/sourcelocation","title":"var sourceLocation: SyntaxSourceLocation","type":"property"},{"path":"\/documentation\/syntaxsparrow\/variable\/type","title":"var type: EntityType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/variables(from:context:)","title":"static func variables(from: VariableDeclSyntax, context: SyntaxExplorerContext) -> [Variable]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/extractfromsource(_:)","title":"func extractFromSource(String) -> String?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/variable\/stringrange(in:)","title":"func stringRange(in: String) -> NSRange?","type":"method"},{"path":"\/documentation\/syntaxsparrow\/variable\/substringrange(in:)","title":"func substringRange(in: String) -> Range<String.Index>?","type":"method"}],"path":"\/documentation\/syntaxsparrow\/variable\/declaration-implementations","title":"Declaration Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/variable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/variable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/variable","title":"Variable","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/closure(_:)","title":"case closure(Closure)","type":"case"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/empty","title":"case empty","type":"case"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/result(_:)","title":"case result(Result)","type":"case"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/simple(_:)","title":"case simple(String)","type":"case"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/tuple(_:)","title":"case tuple(Tuple)","type":"case"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/void","title":"case void","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/syntaxsparrow\/entitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/syntaxsparrow\/entitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/syntaxsparrow\/entitytype","title":"EntityType","type":"enum"}],"path":"\/documentation\/syntaxsparrow","title":"SyntaxSparrow","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}